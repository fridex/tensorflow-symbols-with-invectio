{
  "report": {
    "tensorflow/__init__.py": [],
    "tensorflow_core/__init__.py": [
      "tensorflow_core.__init__.contrib"
    ],
    "tensorflow_core/_api/__init__.py": [],
    "tensorflow_core/_api/v1/__init__.py": [],
    "tensorflow_core/_api/v1/app/__init__.py": [],
    "tensorflow_core/_api/v1/audio/__init__.py": [],
    "tensorflow_core/_api/v1/autograph/__init__.py": [],
    "tensorflow_core/_api/v1/autograph/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/bitwise/__init__.py": [],
    "tensorflow_core/_api/v1/compat/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/app/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/audio/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/autograph/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/autograph/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/bitwise/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/compat/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/config/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/config/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/config/optimizer/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/config/threading/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/data/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/data/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/debugging/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/distribute/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/distribute/cluster_resolver/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/distribute/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/distributions/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/dtypes/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/errors/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/feature_column/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/gfile/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/graph_util/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/image/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/initializers/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/io/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/io/gfile/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/layers/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/layers/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/linalg/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lite/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lite/constants/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lite/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lite/experimental/microfrontend/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lite/experimental/microfrontend/python/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lite/experimental/microfrontend/python/ops/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lite/experimental/nn/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/logging/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lookup/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/lookup/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/losses/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/manip/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/math/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/metrics/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/nest/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/nn/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/nn/rnn_cell/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/profiler/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/python_io/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/quantization/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/queue/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/ragged/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/random/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/random/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/raw_ops/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/resource_loader/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/builder/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/constants/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/loader/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/main_op/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/signature_constants/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/signature_def_utils/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/tag_constants/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/saved_model/utils/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/sets/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/signal/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/sparse/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/spectral/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/strings/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/summary/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/sysconfig/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/test/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/tpu/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/tpu/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/train/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/train/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/train/queue_runner/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/user_ops/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/version/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/xla/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v1/xla/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/audio/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/autograph/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/autograph/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/bitwise/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/compat/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/config/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/config/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/config/optimizer/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/config/threading/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/data/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/data/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/debugging/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/distribute/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/distribute/cluster_resolver/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/distribute/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/dtypes/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/errors/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/feature_column/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/graph_util/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/image/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/io/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/io/gfile/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/linalg/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/lite/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/lite/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/lite/experimental/microfrontend/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/lite/experimental/microfrontend/python/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/lite/experimental/microfrontend/python/ops/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/lookup/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/lookup/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/math/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/nest/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/nn/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/quantization/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/queue/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/ragged/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/random/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/random/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/raw_ops/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/saved_model/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/sets/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/signal/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/sparse/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/strings/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/summary/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/summary/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/sysconfig/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/test/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/tpu/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/tpu/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/train/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/train/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/version/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/xla/__init__.py": [],
    "tensorflow_core/_api/v1/compat/v2/xla/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/config/__init__.py": [],
    "tensorflow_core/_api/v1/config/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/config/optimizer/__init__.py": [],
    "tensorflow_core/_api/v1/config/threading/__init__.py": [],
    "tensorflow_core/_api/v1/data/__init__.py": [],
    "tensorflow_core/_api/v1/data/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/debugging/__init__.py": [],
    "tensorflow_core/_api/v1/distribute/__init__.py": [],
    "tensorflow_core/_api/v1/distribute/cluster_resolver/__init__.py": [],
    "tensorflow_core/_api/v1/distribute/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/distributions/__init__.py": [],
    "tensorflow_core/_api/v1/dtypes/__init__.py": [],
    "tensorflow_core/_api/v1/errors/__init__.py": [],
    "tensorflow_core/_api/v1/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/feature_column/__init__.py": [],
    "tensorflow_core/_api/v1/gfile/__init__.py": [],
    "tensorflow_core/_api/v1/graph_util/__init__.py": [],
    "tensorflow_core/_api/v1/image/__init__.py": [],
    "tensorflow_core/_api/v1/initializers/__init__.py": [],
    "tensorflow_core/_api/v1/io/__init__.py": [],
    "tensorflow_core/_api/v1/io/gfile/__init__.py": [],
    "tensorflow_core/_api/v1/layers/__init__.py": [],
    "tensorflow_core/_api/v1/layers/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/linalg/__init__.py": [],
    "tensorflow_core/_api/v1/lite/__init__.py": [],
    "tensorflow_core/_api/v1/lite/constants/__init__.py": [],
    "tensorflow_core/_api/v1/lite/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/lite/experimental/microfrontend/__init__.py": [],
    "tensorflow_core/_api/v1/lite/experimental/microfrontend/python/__init__.py": [],
    "tensorflow_core/_api/v1/lite/experimental/microfrontend/python/ops/__init__.py": [],
    "tensorflow_core/_api/v1/lite/experimental/nn/__init__.py": [],
    "tensorflow_core/_api/v1/logging/__init__.py": [],
    "tensorflow_core/_api/v1/lookup/__init__.py": [],
    "tensorflow_core/_api/v1/lookup/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/losses/__init__.py": [],
    "tensorflow_core/_api/v1/manip/__init__.py": [],
    "tensorflow_core/_api/v1/math/__init__.py": [],
    "tensorflow_core/_api/v1/metrics/__init__.py": [],
    "tensorflow_core/_api/v1/nest/__init__.py": [],
    "tensorflow_core/_api/v1/nn/__init__.py": [],
    "tensorflow_core/_api/v1/nn/rnn_cell/__init__.py": [],
    "tensorflow_core/_api/v1/profiler/__init__.py": [],
    "tensorflow_core/_api/v1/python_io/__init__.py": [],
    "tensorflow_core/_api/v1/quantization/__init__.py": [],
    "tensorflow_core/_api/v1/queue/__init__.py": [],
    "tensorflow_core/_api/v1/ragged/__init__.py": [],
    "tensorflow_core/_api/v1/random/__init__.py": [],
    "tensorflow_core/_api/v1/random/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/raw_ops/__init__.py": [],
    "tensorflow_core/_api/v1/resource_loader/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/builder/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/constants/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/loader/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/main_op/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/signature_constants/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/signature_def_utils/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/tag_constants/__init__.py": [],
    "tensorflow_core/_api/v1/saved_model/utils/__init__.py": [],
    "tensorflow_core/_api/v1/sets/__init__.py": [],
    "tensorflow_core/_api/v1/signal/__init__.py": [],
    "tensorflow_core/_api/v1/sparse/__init__.py": [],
    "tensorflow_core/_api/v1/spectral/__init__.py": [],
    "tensorflow_core/_api/v1/strings/__init__.py": [],
    "tensorflow_core/_api/v1/summary/__init__.py": [],
    "tensorflow_core/_api/v1/sysconfig/__init__.py": [],
    "tensorflow_core/_api/v1/test/__init__.py": [],
    "tensorflow_core/_api/v1/tpu/__init__.py": [],
    "tensorflow_core/_api/v1/tpu/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/train/__init__.py": [],
    "tensorflow_core/_api/v1/train/experimental/__init__.py": [],
    "tensorflow_core/_api/v1/train/queue_runner/__init__.py": [],
    "tensorflow_core/_api/v1/user_ops/__init__.py": [],
    "tensorflow_core/_api/v1/v1.py": [
      "tensorflow_core._api.v1.v1.contrib"
    ],
    "tensorflow_core/_api/v1/version/__init__.py": [],
    "tensorflow_core/_api/v1/xla/__init__.py": [],
    "tensorflow_core/_api/v1/xla/experimental/__init__.py": [],
    "tensorflow_core/compiler/__init__.py": [],
    "tensorflow_core/compiler/jit/__init__.py": [],
    "tensorflow_core/compiler/jit/ops/__init__.py": [],
    "tensorflow_core/compiler/jit/ops/xla_ops.py": [
      "tensorflow_core.compiler.jit.ops.xla_ops.XlaClusterOutput",
      "tensorflow_core.compiler.jit.ops.xla_ops.XlaLaunch",
      "tensorflow_core.compiler.jit.ops.xla_ops.xla_cluster_output",
      "tensorflow_core.compiler.jit.ops.xla_ops.xla_cluster_output_eager_fallback",
      "tensorflow_core.compiler.jit.ops.xla_ops.xla_launch",
      "tensorflow_core.compiler.jit.ops.xla_ops.xla_launch_eager_fallback"
    ],
    "tensorflow_core/compiler/jit/ops/xla_ops_grad.py": [],
    "tensorflow_core/compiler/tf2tensorrt/__init__.py": [],
    "tensorflow_core/compiler/tf2tensorrt/ops/__init__.py": [],
    "tensorflow_core/compiler/tf2tensorrt/ops/gen_trt_ops.py": [],
    "tensorflow_core/compiler/tf2tensorrt/wrap_py_utils.py": [
      "tensorflow_core.compiler.tf2tensorrt.wrap_py_utils.get_linked_tensorrt_version",
      "tensorflow_core.compiler.tf2tensorrt.wrap_py_utils.get_loaded_tensorrt_version",
      "tensorflow_core.compiler.tf2tensorrt.wrap_py_utils.is_tensorrt_enabled"
    ],
    "tensorflow_core/compiler/tf2xla/__init__.py": [],
    "tensorflow_core/compiler/tf2xla/ops/__init__.py": [],
    "tensorflow_core/compiler/tf2xla/ops/gen_xla_ops.py": [
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaBroadcastHelper",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaConv",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaDequantize",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaDot",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaDynamicSlice",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaDynamicUpdateSlice",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaEinsum",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaIf",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaKeyValueSort",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaPad",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaRecv",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaReduce",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaReduceWindow",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaReplicaId",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaSelectAndScatter",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaSelfAdjointEig",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaSend",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaSort",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaSvd",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.XlaWhile",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_broadcast_helper",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_broadcast_helper_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_conv",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_conv_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_dequantize",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_dequantize_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_dot",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_dot_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_dynamic_slice",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_dynamic_slice_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_dynamic_update_slice",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_dynamic_update_slice_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_einsum",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_einsum_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_if",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_if_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_key_value_sort",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_key_value_sort_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_pad",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_pad_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_recv",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_recv_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_reduce",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_reduce_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_reduce_window",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_reduce_window_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_replica_id",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_replica_id_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_select_and_scatter",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_select_and_scatter_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_self_adjoint_eig",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_self_adjoint_eig_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_send",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_send_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_sort",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_sort_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_svd",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_svd_eager_fallback",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_while",
      "tensorflow_core.compiler.tf2xla.ops.gen_xla_ops.xla_while_eager_fallback"
    ],
    "tensorflow_core/compiler/tf2xla/python/__init__.py": [],
    "tensorflow_core/compiler/tf2xla/python/xla.py": [
      "tensorflow_core.compiler.tf2xla.python.xla.abs",
      "tensorflow_core.compiler.tf2xla.python.xla.add",
      "tensorflow_core.compiler.tf2xla.python.xla.atan2",
      "tensorflow_core.compiler.tf2xla.python.xla.bitcast_convert_type",
      "tensorflow_core.compiler.tf2xla.python.xla.broadcast",
      "tensorflow_core.compiler.tf2xla.python.xla.ceil",
      "tensorflow_core.compiler.tf2xla.python.xla.clamp",
      "tensorflow_core.compiler.tf2xla.python.xla.complex",
      "tensorflow_core.compiler.tf2xla.python.xla.concatenate",
      "tensorflow_core.compiler.tf2xla.python.xla.conj",
      "tensorflow_core.compiler.tf2xla.python.xla.constant",
      "tensorflow_core.compiler.tf2xla.python.xla.conv",
      "tensorflow_core.compiler.tf2xla.python.xla.convert_element_type",
      "tensorflow_core.compiler.tf2xla.python.xla.cos",
      "tensorflow_core.compiler.tf2xla.python.xla.dequantize",
      "tensorflow_core.compiler.tf2xla.python.xla.digamma",
      "tensorflow_core.compiler.tf2xla.python.xla.div",
      "tensorflow_core.compiler.tf2xla.python.xla.dot",
      "tensorflow_core.compiler.tf2xla.python.xla.dot_general",
      "tensorflow_core.compiler.tf2xla.python.xla.dynamic_slice",
      "tensorflow_core.compiler.tf2xla.python.xla.dynamic_update_slice",
      "tensorflow_core.compiler.tf2xla.python.xla.einsum",
      "tensorflow_core.compiler.tf2xla.python.xla.eq",
      "tensorflow_core.compiler.tf2xla.python.xla.erf",
      "tensorflow_core.compiler.tf2xla.python.xla.erfc",
      "tensorflow_core.compiler.tf2xla.python.xla.exp",
      "tensorflow_core.compiler.tf2xla.python.xla.expm1",
      "tensorflow_core.compiler.tf2xla.python.xla.floor",
      "tensorflow_core.compiler.tf2xla.python.xla.ge",
      "tensorflow_core.compiler.tf2xla.python.xla.gt",
      "tensorflow_core.compiler.tf2xla.python.xla.imag",
      "tensorflow_core.compiler.tf2xla.python.xla.is_finite",
      "tensorflow_core.compiler.tf2xla.python.xla.key_value_sort",
      "tensorflow_core.compiler.tf2xla.python.xla.le",
      "tensorflow_core.compiler.tf2xla.python.xla.lgamma",
      "tensorflow_core.compiler.tf2xla.python.xla.log",
      "tensorflow_core.compiler.tf2xla.python.xla.log1p",
      "tensorflow_core.compiler.tf2xla.python.xla.logical_and",
      "tensorflow_core.compiler.tf2xla.python.xla.logical_not",
      "tensorflow_core.compiler.tf2xla.python.xla.logical_or",
      "tensorflow_core.compiler.tf2xla.python.xla.logical_xor",
      "tensorflow_core.compiler.tf2xla.python.xla.lt",
      "tensorflow_core.compiler.tf2xla.python.xla.max",
      "tensorflow_core.compiler.tf2xla.python.xla.min",
      "tensorflow_core.compiler.tf2xla.python.xla.mul",
      "tensorflow_core.compiler.tf2xla.python.xla.ne",
      "tensorflow_core.compiler.tf2xla.python.xla.neg",
      "tensorflow_core.compiler.tf2xla.python.xla.pad",
      "tensorflow_core.compiler.tf2xla.python.xla.pow",
      "tensorflow_core.compiler.tf2xla.python.xla.random_normal",
      "tensorflow_core.compiler.tf2xla.python.xla.random_uniform",
      "tensorflow_core.compiler.tf2xla.python.xla.real",
      "tensorflow_core.compiler.tf2xla.python.xla.recv",
      "tensorflow_core.compiler.tf2xla.python.xla.reduce",
      "tensorflow_core.compiler.tf2xla.python.xla.reduce_window",
      "tensorflow_core.compiler.tf2xla.python.xla.rem",
      "tensorflow_core.compiler.tf2xla.python.xla.replica_id",
      "tensorflow_core.compiler.tf2xla.python.xla.reshape",
      "tensorflow_core.compiler.tf2xla.python.xla.rev",
      "tensorflow_core.compiler.tf2xla.python.xla.round",
      "tensorflow_core.compiler.tf2xla.python.xla.select",
      "tensorflow_core.compiler.tf2xla.python.xla.select_and_scatter",
      "tensorflow_core.compiler.tf2xla.python.xla.self_adjoint_eig",
      "tensorflow_core.compiler.tf2xla.python.xla.send",
      "tensorflow_core.compiler.tf2xla.python.xla.shift_left",
      "tensorflow_core.compiler.tf2xla.python.xla.shift_right_arithmetic",
      "tensorflow_core.compiler.tf2xla.python.xla.shift_right_logical",
      "tensorflow_core.compiler.tf2xla.python.xla.sign",
      "tensorflow_core.compiler.tf2xla.python.xla.sin",
      "tensorflow_core.compiler.tf2xla.python.xla.slice",
      "tensorflow_core.compiler.tf2xla.python.xla.sort",
      "tensorflow_core.compiler.tf2xla.python.xla.sub",
      "tensorflow_core.compiler.tf2xla.python.xla.svd",
      "tensorflow_core.compiler.tf2xla.python.xla.tanh",
      "tensorflow_core.compiler.tf2xla.python.xla.transpose",
      "tensorflow_core.compiler.tf2xla.python.xla.while_loop"
    ],
    "tensorflow_core/compiler/xla/__init__.py": [],
    "tensorflow_core/compiler/xla/experimental/__init__.py": [],
    "tensorflow_core/compiler/xla/experimental/xla_sharding/__init__.py": [],
    "tensorflow_core/compiler/xla/experimental/xla_sharding/xla_sharding.py": [
      "tensorflow_core.compiler.xla.experimental.xla_sharding.xla_sharding.Sharding",
      "tensorflow_core.compiler.xla.experimental.xla_sharding.xla_sharding.assign_device",
      "tensorflow_core.compiler.xla.experimental.xla_sharding.xla_sharding.replicate",
      "tensorflow_core.compiler.xla.experimental.xla_sharding.xla_sharding.split",
      "tensorflow_core.compiler.xla.experimental.xla_sharding.xla_sharding.tile"
    ],
    "tensorflow_core/compiler/xla/python_api/__init__.py": [],
    "tensorflow_core/compiler/xla/python_api/types.py": [
      "tensorflow_core.compiler.xla.python_api.types.MAP_DTYPE_TO_RECORD",
      "tensorflow_core.compiler.xla.python_api.types.MAP_XLA_TYPE_TO_RECORD",
      "tensorflow_core.compiler.xla.python_api.types.TypeConversionRecord"
    ],
    "tensorflow_core/compiler/xla/python_api/xla_shape.py": [
      "tensorflow_core.compiler.xla.python_api.xla_shape.CreateShapeFromDtypeAndTuple",
      "tensorflow_core.compiler.xla.python_api.xla_shape.CreateShapeFromNumpy",
      "tensorflow_core.compiler.xla.python_api.xla_shape.Shape"
    ],
    "tensorflow_core/compiler/xla/service/__init__.py": [],
    "tensorflow_core/compiler/xla/service/hlo_pb2.py": [
      "tensorflow_core.compiler.xla.service.hlo_pb2.BufferAllocationProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.BufferAssignmentProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.DESCRIPTOR",
      "tensorflow_core.compiler.xla.service.hlo_pb2.DynamicParameterBindingProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HeapSimulatorTrace",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HloComputationProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HloInputOutputAliasProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HloInstructionProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HloModuleGroupProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HloModuleProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HloProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HloScheduleProto",
      "tensorflow_core.compiler.xla.service.hlo_pb2.HloSnapshot",
      "tensorflow_core.compiler.xla.service.hlo_pb2.LogicalBufferProto"
    ],
    "tensorflow_core/compiler/xla/xla_data_pb2.py": [
      "tensorflow_core.compiler.xla.xla_data_pb2.BF16",
      "tensorflow_core.compiler.xla.xla_data_pb2.C128",
      "tensorflow_core.compiler.xla.xla_data_pb2.C64",
      "tensorflow_core.compiler.xla.xla_data_pb2.ChannelHandle",
      "tensorflow_core.compiler.xla.xla_data_pb2.CholeskyOptions",
      "tensorflow_core.compiler.xla.xla_data_pb2.ComputationStats",
      "tensorflow_core.compiler.xla.xla_data_pb2.ConvolutionDimensionNumbers",
      "tensorflow_core.compiler.xla.xla_data_pb2.DENSE",
      "tensorflow_core.compiler.xla.xla_data_pb2.DESCRIPTOR",
      "tensorflow_core.compiler.xla.xla_data_pb2.DeviceAssignmentProto",
      "tensorflow_core.compiler.xla.xla_data_pb2.DeviceHandle",
      "tensorflow_core.compiler.xla.xla_data_pb2.DotDimensionNumbers",
      "tensorflow_core.compiler.xla.xla_data_pb2.ExecutionHandle",
      "tensorflow_core.compiler.xla.xla_data_pb2.ExecutionProfile",
      "tensorflow_core.compiler.xla.xla_data_pb2.F16",
      "tensorflow_core.compiler.xla.xla_data_pb2.F32",
      "tensorflow_core.compiler.xla.xla_data_pb2.F64",
      "tensorflow_core.compiler.xla.xla_data_pb2.FFT",
      "tensorflow_core.compiler.xla.xla_data_pb2.FftType",
      "tensorflow_core.compiler.xla.xla_data_pb2.Format",
      "tensorflow_core.compiler.xla.xla_data_pb2.GatherDimensionNumbers",
      "tensorflow_core.compiler.xla.xla_data_pb2.GlobalDataHandle",
      "tensorflow_core.compiler.xla.xla_data_pb2.IFFT",
      "tensorflow_core.compiler.xla.xla_data_pb2.INVALID_FORMAT",
      "tensorflow_core.compiler.xla.xla_data_pb2.IRFFT",
      "tensorflow_core.compiler.xla.xla_data_pb2.LayoutProto",
      "tensorflow_core.compiler.xla.xla_data_pb2.LiteralProto",
      "tensorflow_core.compiler.xla.xla_data_pb2.OPAQUE_TYPE",
      "tensorflow_core.compiler.xla.xla_data_pb2.OpMetadata",
      "tensorflow_core.compiler.xla.xla_data_pb2.OpSharding",
      "tensorflow_core.compiler.xla.xla_data_pb2.PRED",
      "tensorflow_core.compiler.xla.xla_data_pb2.PRIMITIVE_TYPE_INVALID",
      "tensorflow_core.compiler.xla.xla_data_pb2.PaddingConfig",
      "tensorflow_core.compiler.xla.xla_data_pb2.ParameterReplication",
      "tensorflow_core.compiler.xla.xla_data_pb2.PrecisionConfig",
      "tensorflow_core.compiler.xla.xla_data_pb2.PrimitiveType",
      "tensorflow_core.compiler.xla.xla_data_pb2.ProgramShapeProto",
      "tensorflow_core.compiler.xla.xla_data_pb2.RFFT",
      "tensorflow_core.compiler.xla.xla_data_pb2.RNG_INVALID",
      "tensorflow_core.compiler.xla.xla_data_pb2.RNG_NORMAL",
      "tensorflow_core.compiler.xla.xla_data_pb2.RNG_UNIFORM",
      "tensorflow_core.compiler.xla.xla_data_pb2.RandomDistribution",
      "tensorflow_core.compiler.xla.xla_data_pb2.ReplicaGroup",
      "tensorflow_core.compiler.xla.xla_data_pb2.S16",
      "tensorflow_core.compiler.xla.xla_data_pb2.S32",
      "tensorflow_core.compiler.xla.xla_data_pb2.S64",
      "tensorflow_core.compiler.xla.xla_data_pb2.S8",
      "tensorflow_core.compiler.xla.xla_data_pb2.SPARSE",
      "tensorflow_core.compiler.xla.xla_data_pb2.ScatterDimensionNumbers",
      "tensorflow_core.compiler.xla.xla_data_pb2.ShapeProto",
      "tensorflow_core.compiler.xla.xla_data_pb2.SourceTarget",
      "tensorflow_core.compiler.xla.xla_data_pb2.TOKEN",
      "tensorflow_core.compiler.xla.xla_data_pb2.TUPLE",
      "tensorflow_core.compiler.xla.xla_data_pb2.TileProto",
      "tensorflow_core.compiler.xla.xla_data_pb2.TriangularSolveOptions",
      "tensorflow_core.compiler.xla.xla_data_pb2.U16",
      "tensorflow_core.compiler.xla.xla_data_pb2.U32",
      "tensorflow_core.compiler.xla.xla_data_pb2.U64",
      "tensorflow_core.compiler.xla.xla_data_pb2.U8",
      "tensorflow_core.compiler.xla.xla_data_pb2.WhileLoopBackendConfig",
      "tensorflow_core.compiler.xla.xla_data_pb2.Window",
      "tensorflow_core.compiler.xla.xla_data_pb2.WindowDimension"
    ],
    "tensorflow_core/contrib/__init__.py": [
      "tensorflow_core.contrib.__init__.ffmpeg"
    ],
    "tensorflow_core/contrib/all_reduce/__init__.py": [],
    "tensorflow_core/contrib/all_reduce/python/__init__.py": [],
    "tensorflow_core/contrib/all_reduce/python/all_reduce.py": [],
    "tensorflow_core/contrib/autograph/__init__.py": [],
    "tensorflow_core/contrib/batching/__init__.py": [],
    "tensorflow_core/contrib/batching/python/__init__.py": [],
    "tensorflow_core/contrib/batching/python/ops/__init__.py": [],
    "tensorflow_core/contrib/batching/python/ops/batch_ops.py": [
      "tensorflow_core.contrib.batching.python.ops.batch_ops.batch_function_v1"
    ],
    "tensorflow_core/contrib/batching/python/ops/batch_ops_test.py": [
      "tensorflow_core.contrib.batching.python.ops.batch_ops_test.BatchOpsTest",
      "tensorflow_core.contrib.batching.python.ops.batch_ops_test.delayed_plus1"
    ],
    "tensorflow_core/contrib/bayesflow/__init__.py": [],
    "tensorflow_core/contrib/bayesflow/python/__init__.py": [],
    "tensorflow_core/contrib/bayesflow/python/ops/__init__.py": [],
    "tensorflow_core/contrib/bayesflow/python/ops/monte_carlo.py": [],
    "tensorflow_core/contrib/bayesflow/python/ops/monte_carlo_impl.py": [
      "tensorflow_core.contrib.bayesflow.python.ops.monte_carlo_impl.expectation",
      "tensorflow_core.contrib.bayesflow.python.ops.monte_carlo_impl.expectation_importance_sampler",
      "tensorflow_core.contrib.bayesflow.python.ops.monte_carlo_impl.expectation_importance_sampler_logspace"
    ],
    "tensorflow_core/contrib/bigtable/__init__.py": [],
    "tensorflow_core/contrib/bigtable/ops/__init__.py": [],
    "tensorflow_core/contrib/bigtable/ops/gen_bigtable_ops.py": [
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.BigtableClient",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.BigtableLookupDataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.BigtablePrefixKeyDataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.BigtableRangeKeyDataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.BigtableSampleKeyPairsDataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.BigtableSampleKeysDataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.BigtableScanDataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.BigtableTable",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.DatasetToBigtable",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_client",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_client_eager_fallback",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_lookup_dataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_lookup_dataset_eager_fallback",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_prefix_key_dataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_prefix_key_dataset_eager_fallback",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_range_key_dataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_range_key_dataset_eager_fallback",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_sample_key_pairs_dataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_sample_key_pairs_dataset_eager_fallback",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_sample_keys_dataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_sample_keys_dataset_eager_fallback",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_scan_dataset",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_scan_dataset_eager_fallback",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_table",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.bigtable_table_eager_fallback",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.dataset_to_bigtable",
      "tensorflow_core.contrib.bigtable.ops.gen_bigtable_ops.dataset_to_bigtable_eager_fallback"
    ],
    "tensorflow_core/contrib/bigtable/python/__init__.py": [],
    "tensorflow_core/contrib/bigtable/python/ops/__init__.py": [],
    "tensorflow_core/contrib/bigtable/python/ops/bigtable_api.py": [
      "tensorflow_core.contrib.bigtable.python.ops.bigtable_api.BigtableClient",
      "tensorflow_core.contrib.bigtable.python.ops.bigtable_api.BigtableTable"
    ],
    "tensorflow_core/contrib/boosted_trees/__init__.py": [],
    "tensorflow_core/contrib/boosted_trees/python/__init__.py": [],
    "tensorflow_core/contrib/boosted_trees/python/ops/__init__.py": [],
    "tensorflow_core/contrib/boosted_trees/python/ops/batch_ops_utils.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.batch_ops_utils.ScheduledOp",
      "tensorflow_core.contrib.boosted_trees.python.ops.batch_ops_utils.ScheduledStampedResourceOp",
      "tensorflow_core.contrib.boosted_trees.python.ops.batch_ops_utils.run_handler_scheduled_ops"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/boosted_trees_ops_loader.py": [],
    "tensorflow_core/contrib/boosted_trees/python/ops/gen_model_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.CreateTreeEnsembleVariable",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.DecisionTreeEnsembleResourceHandleOp",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.TreeEnsembleDeserialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.TreeEnsembleIsInitializedOp",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.TreeEnsembleSerialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.TreeEnsembleStampToken",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.TreeEnsembleUsedHandlers",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.create_tree_ensemble_variable",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.create_tree_ensemble_variable_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.decision_tree_ensemble_resource_handle_op",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.decision_tree_ensemble_resource_handle_op_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_deserialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_deserialize_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_is_initialized_op",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_is_initialized_op_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_serialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_serialize_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_stamp_token",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_stamp_token_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_used_handlers",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_model_ops.tree_ensemble_used_handlers_eager_fallback"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/gen_prediction_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.GradientTreesPartitionExamples",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.GradientTreesPrediction",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.GradientTreesPredictionVerbose",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.gradient_trees_partition_examples",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.gradient_trees_partition_examples_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.gradient_trees_prediction",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.gradient_trees_prediction_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.gradient_trees_prediction_verbose",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_prediction_ops.gradient_trees_prediction_verbose_eager_fallback"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/gen_quantile_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.BucketizeWithInputBoundaries",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.CreateQuantileAccumulator",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.MakeQuantileSummaries",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileAccumulatorAddSummaries",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileAccumulatorDeserialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileAccumulatorFlush",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileAccumulatorFlushSummary",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileAccumulatorGetBuckets",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileAccumulatorIsInitialized",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileAccumulatorSerialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileBuckets",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.QuantileStreamResourceHandleOp",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.Quantiles",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.bucketize_with_input_boundaries",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.bucketize_with_input_boundaries_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.create_quantile_accumulator",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.create_quantile_accumulator_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.make_quantile_summaries",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.make_quantile_summaries_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_add_summaries",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_add_summaries_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_deserialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_deserialize_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_flush",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_flush_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_flush_summary",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_flush_summary_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_get_buckets",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_get_buckets_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_is_initialized",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_is_initialized_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_serialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_accumulator_serialize_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_buckets",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_buckets_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_stream_resource_handle_op",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantile_stream_resource_handle_op_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantiles",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_quantile_ops.quantiles_eager_fallback"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/gen_split_handler_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.BuildCategoricalEqualitySplits",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.BuildDenseInequalitySplits",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.BuildSparseInequalitySplits",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.build_categorical_equality_splits",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.build_categorical_equality_splits_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.build_dense_inequality_splits",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.build_dense_inequality_splits_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.build_sparse_inequality_splits",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_split_handler_ops.build_sparse_inequality_splits_eager_fallback"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/gen_stats_accumulator_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.CreateStatsAccumulatorScalar",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.CreateStatsAccumulatorTensor",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorScalarAdd",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorScalarDeserialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorScalarFlush",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorScalarIsInitialized",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorScalarMakeSummary",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorScalarResourceHandleOp",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorScalarSerialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorTensorAdd",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorTensorDeserialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorTensorFlush",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorTensorIsInitialized",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorTensorMakeSummary",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorTensorResourceHandleOp",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.StatsAccumulatorTensorSerialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.create_stats_accumulator_scalar",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.create_stats_accumulator_scalar_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.create_stats_accumulator_tensor",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.create_stats_accumulator_tensor_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_add",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_add_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_deserialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_deserialize_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_flush",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_flush_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_is_initialized",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_is_initialized_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_make_summary",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_make_summary_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_resource_handle_op",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_resource_handle_op_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_serialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_scalar_serialize_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_add",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_add_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_deserialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_deserialize_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_flush",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_flush_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_is_initialized",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_is_initialized_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_make_summary",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_make_summary_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_resource_handle_op",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_resource_handle_op_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_serialize",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_stats_accumulator_ops.stats_accumulator_tensor_serialize_eager_fallback"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/gen_training_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.CenterTreeEnsembleBias",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.GrowTreeEnsemble",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.TreeEnsembleStats",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.center_tree_ensemble_bias",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.center_tree_ensemble_bias_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.grow_tree_ensemble",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.grow_tree_ensemble_eager_fallback",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.tree_ensemble_stats",
      "tensorflow_core.contrib.boosted_trees.python.ops.gen_training_ops.tree_ensemble_stats_eager_fallback"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/model_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.model_ops.TreeEnsembleVariable",
      "tensorflow_core.contrib.boosted_trees.python.ops.model_ops.TreeEnsembleVariableSavable",
      "tensorflow_core.contrib.boosted_trees.python.ops.model_ops.tree_ensemble_variable"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/prediction_ops.py": [],
    "tensorflow_core/contrib/boosted_trees/python/ops/quantile_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.quantile_ops.QuantileAccumulator",
      "tensorflow_core.contrib.boosted_trees.python.ops.quantile_ops.QuantileAccumulatorSaveable"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/split_handler_ops.py": [],
    "tensorflow_core/contrib/boosted_trees/python/ops/stats_accumulator_ops.py": [
      "tensorflow_core.contrib.boosted_trees.python.ops.stats_accumulator_ops.StatsAccumulator",
      "tensorflow_core.contrib.boosted_trees.python.ops.stats_accumulator_ops.StatsAccumulatorSaveable"
    ],
    "tensorflow_core/contrib/boosted_trees/python/ops/training_ops.py": [],
    "tensorflow_core/contrib/boosted_trees/python/utils/__init__.py": [],
    "tensorflow_core/contrib/boosted_trees/python/utils/losses.py": [
      "tensorflow_core.contrib.boosted_trees.python.utils.losses.per_example_exp_loss",
      "tensorflow_core.contrib.boosted_trees.python.utils.losses.per_example_full_exp_loss",
      "tensorflow_core.contrib.boosted_trees.python.utils.losses.per_example_logistic_loss",
      "tensorflow_core.contrib.boosted_trees.python.utils.losses.per_example_maxent_loss",
      "tensorflow_core.contrib.boosted_trees.python.utils.losses.per_example_quantile_regression_loss",
      "tensorflow_core.contrib.boosted_trees.python.utils.losses.per_example_squared_hinge_loss",
      "tensorflow_core.contrib.boosted_trees.python.utils.losses.per_example_squared_loss"
    ],
    "tensorflow_core/contrib/checkpoint/__init__.py": [],
    "tensorflow_core/contrib/checkpoint/python/__init__.py": [],
    "tensorflow_core/contrib/checkpoint/python/containers.py": [
      "tensorflow_core.contrib.checkpoint.python.containers.UniqueNameTracker"
    ],
    "tensorflow_core/contrib/checkpoint/python/python_state.py": [
      "tensorflow_core.contrib.checkpoint.python.python_state.NumpyState"
    ],
    "tensorflow_core/contrib/checkpoint/python/split_dependency.py": [
      "tensorflow_core.contrib.checkpoint.python.split_dependency.split_dependency"
    ],
    "tensorflow_core/contrib/checkpoint/python/visualize.py": [
      "tensorflow_core.contrib.checkpoint.python.visualize.dot_graph_from_checkpoint"
    ],
    "tensorflow_core/contrib/cloud/__init__.py": [],
    "tensorflow_core/contrib/cloud/python/__init__.py": [],
    "tensorflow_core/contrib/cloud/python/ops/__init__.py": [],
    "tensorflow_core/contrib/cloud/python/ops/bigquery_reader_ops.py": [
      "tensorflow_core.contrib.cloud.python.ops.bigquery_reader_ops.BigQueryReader"
    ],
    "tensorflow_core/contrib/cloud/python/ops/gcs_config_ops.py": [
      "tensorflow_core.contrib.cloud.python.ops.gcs_config_ops.BlockCacheParams",
      "tensorflow_core.contrib.cloud.python.ops.gcs_config_ops.ConfigureGcsHook",
      "tensorflow_core.contrib.cloud.python.ops.gcs_config_ops.configure_colab_session",
      "tensorflow_core.contrib.cloud.python.ops.gcs_config_ops.configure_gcs"
    ],
    "tensorflow_core/contrib/cloud/python/ops/gen_bigquery_reader_ops.py": [
      "tensorflow_core.contrib.cloud.python.ops.gen_bigquery_reader_ops.BigQueryReader",
      "tensorflow_core.contrib.cloud.python.ops.gen_bigquery_reader_ops.GenerateBigQueryReaderPartitions",
      "tensorflow_core.contrib.cloud.python.ops.gen_bigquery_reader_ops.big_query_reader",
      "tensorflow_core.contrib.cloud.python.ops.gen_bigquery_reader_ops.big_query_reader_eager_fallback",
      "tensorflow_core.contrib.cloud.python.ops.gen_bigquery_reader_ops.generate_big_query_reader_partitions",
      "tensorflow_core.contrib.cloud.python.ops.gen_bigquery_reader_ops.generate_big_query_reader_partitions_eager_fallback"
    ],
    "tensorflow_core/contrib/cloud/python/ops/gen_gcs_config_ops.py": [
      "tensorflow_core.contrib.cloud.python.ops.gen_gcs_config_ops.GcsConfigureBlockCache",
      "tensorflow_core.contrib.cloud.python.ops.gen_gcs_config_ops.GcsConfigureCredentials",
      "tensorflow_core.contrib.cloud.python.ops.gen_gcs_config_ops.gcs_configure_block_cache",
      "tensorflow_core.contrib.cloud.python.ops.gen_gcs_config_ops.gcs_configure_block_cache_eager_fallback",
      "tensorflow_core.contrib.cloud.python.ops.gen_gcs_config_ops.gcs_configure_credentials",
      "tensorflow_core.contrib.cloud.python.ops.gen_gcs_config_ops.gcs_configure_credentials_eager_fallback"
    ],
    "tensorflow_core/contrib/cluster_resolver/__init__.py": [],
    "tensorflow_core/contrib/cluster_resolver/python/__init__.py": [],
    "tensorflow_core/contrib/cluster_resolver/python/training/__init__.py": [],
    "tensorflow_core/contrib/cluster_resolver/python/training/cluster_resolver.py": [],
    "tensorflow_core/contrib/cluster_resolver/python/training/gce_cluster_resolver.py": [],
    "tensorflow_core/contrib/cluster_resolver/python/training/kubernetes_cluster_resolver.py": [],
    "tensorflow_core/contrib/cluster_resolver/python/training/slurm_cluster_resolver.py": [],
    "tensorflow_core/contrib/cluster_resolver/python/training/tfconfig_cluster_resolver.py": [],
    "tensorflow_core/contrib/cluster_resolver/python/training/tpu_cluster_resolver.py": [],
    "tensorflow_core/contrib/cmake/__init__.py": [],
    "tensorflow_core/contrib/cmake/tools/__init__.py": [],
    "tensorflow_core/contrib/cmake/tools/create_def_file.py": [
      "tensorflow_core.contrib.cmake.tools.create_def_file.DATA_EXCLUDE_RE",
      "tensorflow_core.contrib.cmake.tools.create_def_file.DUMPBIN",
      "tensorflow_core.contrib.cmake.tools.create_def_file.EXCLUDE_RE",
      "tensorflow_core.contrib.cmake.tools.create_def_file.INCLUDEPRE_RE",
      "tensorflow_core.contrib.cmake.tools.create_def_file.INCLUDE_RE",
      "tensorflow_core.contrib.cmake.tools.create_def_file.UNDNAME",
      "tensorflow_core.contrib.cmake.tools.create_def_file.get_args",
      "tensorflow_core.contrib.cmake.tools.create_def_file.main"
    ],
    "tensorflow_core/contrib/compiler/__init__.py": [],
    "tensorflow_core/contrib/compiler/jit.py": [
      "tensorflow_core.contrib.compiler.jit.experimental_jit_scope"
    ],
    "tensorflow_core/contrib/compiler/xla.py": [
      "tensorflow_core.contrib.compiler.xla.check_function_argument_count",
      "tensorflow_core.contrib.compiler.xla.compile",
      "tensorflow_core.contrib.compiler.xla.estimator_model_fn"
    ],
    "tensorflow_core/contrib/constrained_optimization/__init__.py": [],
    "tensorflow_core/contrib/constrained_optimization/python/__init__.py": [],
    "tensorflow_core/contrib/constrained_optimization/python/candidates.py": [
      "tensorflow_core.contrib.constrained_optimization.python.candidates.find_best_candidate_distribution",
      "tensorflow_core.contrib.constrained_optimization.python.candidates.find_best_candidate_index"
    ],
    "tensorflow_core/contrib/constrained_optimization/python/constrained_minimization_problem.py": [
      "tensorflow_core.contrib.constrained_optimization.python.constrained_minimization_problem.ConstrainedMinimizationProblem"
    ],
    "tensorflow_core/contrib/constrained_optimization/python/constrained_optimizer.py": [
      "tensorflow_core.contrib.constrained_optimization.python.constrained_optimizer.ConstrainedOptimizer"
    ],
    "tensorflow_core/contrib/constrained_optimization/python/external_regret_optimizer.py": [
      "tensorflow_core.contrib.constrained_optimization.python.external_regret_optimizer.AdditiveExternalRegretOptimizer"
    ],
    "tensorflow_core/contrib/constrained_optimization/python/swap_regret_optimizer.py": [
      "tensorflow_core.contrib.constrained_optimization.python.swap_regret_optimizer.AdditiveSwapRegretOptimizer",
      "tensorflow_core.contrib.constrained_optimization.python.swap_regret_optimizer.MultiplicativeSwapRegretOptimizer"
    ],
    "tensorflow_core/contrib/copy_graph/__init__.py": [],
    "tensorflow_core/contrib/copy_graph/python/__init__.py": [],
    "tensorflow_core/contrib/copy_graph/python/util/__init__.py": [],
    "tensorflow_core/contrib/copy_graph/python/util/copy_elements.py": [
      "tensorflow_core.contrib.copy_graph.python.util.copy_elements.copy_op_to_graph",
      "tensorflow_core.contrib.copy_graph.python.util.copy_elements.copy_variable_to_graph",
      "tensorflow_core.contrib.copy_graph.python.util.copy_elements.get_copied_op"
    ],
    "tensorflow_core/contrib/crf/__init__.py": [],
    "tensorflow_core/contrib/crf/python/__init__.py": [],
    "tensorflow_core/contrib/crf/python/ops/__init__.py": [],
    "tensorflow_core/contrib/crf/python/ops/crf.py": [
      "tensorflow_core.contrib.crf.python.ops.crf.CrfDecodeBackwardRnnCell",
      "tensorflow_core.contrib.crf.python.ops.crf.CrfDecodeForwardRnnCell",
      "tensorflow_core.contrib.crf.python.ops.crf.CrfForwardRnnCell",
      "tensorflow_core.contrib.crf.python.ops.crf.crf_binary_score",
      "tensorflow_core.contrib.crf.python.ops.crf.crf_decode",
      "tensorflow_core.contrib.crf.python.ops.crf.crf_log_likelihood",
      "tensorflow_core.contrib.crf.python.ops.crf.crf_log_norm",
      "tensorflow_core.contrib.crf.python.ops.crf.crf_multitag_sequence_score",
      "tensorflow_core.contrib.crf.python.ops.crf.crf_sequence_score",
      "tensorflow_core.contrib.crf.python.ops.crf.crf_unary_score",
      "tensorflow_core.contrib.crf.python.ops.crf.viterbi_decode"
    ],
    "tensorflow_core/contrib/cudnn_rnn/__init__.py": [],
    "tensorflow_core/contrib/cudnn_rnn/python/__init__.py": [],
    "tensorflow_core/contrib/cudnn_rnn/python/layers/__init__.py": [],
    "tensorflow_core/contrib/cudnn_rnn/python/layers/cudnn_rnn.py": [
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_GRU",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_GRU_PARAMS_PER_LAYER",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_INPUT_AUTO_MODE",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_INPUT_LINEAR_MODE",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_INPUT_SKIP_MODE",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_LSTM",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_LSTM_PARAMS_PER_LAYER",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_RNN_BIDIRECTION",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_RNN_RELU",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_RNN_RELU_PARAMS_PER_LAYER",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_RNN_TANH",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_RNN_TANH_PARAMS_PER_LAYER",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CUDNN_RNN_UNIDIRECTION",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CudnnGRU",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CudnnLSTM",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CudnnRNNRelu",
      "tensorflow_core.contrib.cudnn_rnn.python.layers.cudnn_rnn.CudnnRNNTanh"
    ],
    "tensorflow_core/contrib/cudnn_rnn/python/ops/__init__.py": [],
    "tensorflow_core/contrib/cudnn_rnn/python/ops/cudnn_rnn_ops.py": [
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_GRU",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_GRU_PARAMS_PER_LAYER",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_INPUT_AUTO_MODE",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_INPUT_LINEAR_MODE",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_INPUT_SKIP_MODE",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_LSTM",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_LSTM_PARAMS_PER_LAYER",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_RNN_BIDIRECTION",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_RNN_RELU",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_RNN_RELU_PARAMS_PER_LAYER",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_RNN_TANH",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_RNN_TANH_PARAMS_PER_LAYER",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CUDNN_RNN_UNIDIRECTION",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnCompatibleGRUCell",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnCompatibleLSTMCell",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnGRU",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnGRUSaveable",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnLSTM",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnLSTMSaveable",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnOpaqueParamsSaveable",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnParamsFormatConverter",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnParamsFormatConverterBasic",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnParamsFormatConverterGRU",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnParamsFormatConverterLSTM",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnParamsFormatConverterRelu",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnParamsFormatConverterTanh",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnRNNRelu",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnRNNReluSaveable",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnRNNTanh",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.CudnnRNNTanhSaveable",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.check_direction",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.check_input_mode",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.cudnn_gru",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.cudnn_lstm",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.cudnn_rnn_canonical_to_opaque_params",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.cudnn_rnn_opaque_params_size",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.cudnn_rnn_opaque_params_to_canonical",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.cudnn_rnn_relu",
      "tensorflow_core.contrib.cudnn_rnn.python.ops.cudnn_rnn_ops.cudnn_rnn_tanh"
    ],
    "tensorflow_core/contrib/data/__init__.py": [],
    "tensorflow_core/contrib/data/python/__init__.py": [],
    "tensorflow_core/contrib/data/python/ops/__init__.py": [],
    "tensorflow_core/contrib/data/python/ops/batching.py": [
      "tensorflow_core.contrib.data.python.ops.batching.assert_element_shape",
      "tensorflow_core.contrib.data.python.ops.batching.batch_and_drop_remainder",
      "tensorflow_core.contrib.data.python.ops.batching.dense_to_sparse_batch",
      "tensorflow_core.contrib.data.python.ops.batching.map_and_batch",
      "tensorflow_core.contrib.data.python.ops.batching.padded_batch_and_drop_remainder",
      "tensorflow_core.contrib.data.python.ops.batching.unbatch"
    ],
    "tensorflow_core/contrib/data/python/ops/counter.py": [
      "tensorflow_core.contrib.data.python.ops.counter.Counter"
    ],
    "tensorflow_core/contrib/data/python/ops/enumerate_ops.py": [
      "tensorflow_core.contrib.data.python.ops.enumerate_ops.enumerate_dataset"
    ],
    "tensorflow_core/contrib/data/python/ops/error_ops.py": [
      "tensorflow_core.contrib.data.python.ops.error_ops.ignore_errors"
    ],
    "tensorflow_core/contrib/data/python/ops/get_single_element.py": [
      "tensorflow_core.contrib.data.python.ops.get_single_element.get_single_element",
      "tensorflow_core.contrib.data.python.ops.get_single_element.reduce_dataset"
    ],
    "tensorflow_core/contrib/data/python/ops/grouping.py": [
      "tensorflow_core.contrib.data.python.ops.grouping.Reducer",
      "tensorflow_core.contrib.data.python.ops.grouping.bucket_by_sequence_length",
      "tensorflow_core.contrib.data.python.ops.grouping.group_by_reducer",
      "tensorflow_core.contrib.data.python.ops.grouping.group_by_window"
    ],
    "tensorflow_core/contrib/data/python/ops/interleave_ops.py": [
      "tensorflow_core.contrib.data.python.ops.interleave_ops.choose_from_datasets",
      "tensorflow_core.contrib.data.python.ops.interleave_ops.parallel_interleave",
      "tensorflow_core.contrib.data.python.ops.interleave_ops.sample_from_datasets",
      "tensorflow_core.contrib.data.python.ops.interleave_ops.sloppy_interleave"
    ],
    "tensorflow_core/contrib/data/python/ops/iterator_ops.py": [
      "tensorflow_core.contrib.data.python.ops.iterator_ops.CheckpointInputPipelineHook",
      "tensorflow_core.contrib.data.python.ops.iterator_ops.make_saveable_from_iterator"
    ],
    "tensorflow_core/contrib/data/python/ops/parsing_ops.py": [
      "tensorflow_core.contrib.data.python.ops.parsing_ops.parse_example_dataset"
    ],
    "tensorflow_core/contrib/data/python/ops/prefetching_ops.py": [
      "tensorflow_core.contrib.data.python.ops.prefetching_ops.copy_to_device",
      "tensorflow_core.contrib.data.python.ops.prefetching_ops.prefetch_to_device"
    ],
    "tensorflow_core/contrib/data/python/ops/random_ops.py": [
      "tensorflow_core.contrib.data.python.ops.random_ops.RandomDataset"
    ],
    "tensorflow_core/contrib/data/python/ops/readers.py": [
      "tensorflow_core.contrib.data.python.ops.readers.CsvDataset",
      "tensorflow_core.contrib.data.python.ops.readers.LMDBDataset",
      "tensorflow_core.contrib.data.python.ops.readers.SqlDataset",
      "tensorflow_core.contrib.data.python.ops.readers.make_batched_features_dataset",
      "tensorflow_core.contrib.data.python.ops.readers.make_csv_dataset",
      "tensorflow_core.contrib.data.python.ops.readers.read_batch_features"
    ],
    "tensorflow_core/contrib/data/python/ops/resampling.py": [
      "tensorflow_core.contrib.data.python.ops.resampling.rejection_resample"
    ],
    "tensorflow_core/contrib/data/python/ops/scan_ops.py": [
      "tensorflow_core.contrib.data.python.ops.scan_ops.scan"
    ],
    "tensorflow_core/contrib/data/python/ops/shuffle_ops.py": [
      "tensorflow_core.contrib.data.python.ops.shuffle_ops.shuffle_and_repeat"
    ],
    "tensorflow_core/contrib/data/python/ops/sliding.py": [
      "tensorflow_core.contrib.data.python.ops.sliding.sliding_window_batch"
    ],
    "tensorflow_core/contrib/data/python/ops/threadpool.py": [],
    "tensorflow_core/contrib/data/python/ops/unique.py": [
      "tensorflow_core.contrib.data.python.ops.unique.unique"
    ],
    "tensorflow_core/contrib/data/python/ops/writers.py": [
      "tensorflow_core.contrib.data.python.ops.writers.TFRecordWriter"
    ],
    "tensorflow_core/contrib/decision_trees/__init__.py": [],
    "tensorflow_core/contrib/decision_trees/proto/__init__.py": [],
    "tensorflow_core/contrib/decision_trees/proto/generic_tree_model_pb2.py": [
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.Averaging",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.BinaryNode",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.DESCRIPTOR",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.DecisionTree",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.Ensemble",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.FeatureId",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.InequalityTest",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.Leaf",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.Model",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.ModelAndFeatures",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.ObliqueFeatures",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.SparseVector",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.Summation",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.TreeNode",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.Value",
      "tensorflow_core.contrib.decision_trees.proto.generic_tree_model_pb2.Vector"
    ],
    "tensorflow_core/contrib/deprecated/__init__.py": [],
    "tensorflow_core/contrib/distribute/__init__.py": [
      "tensorflow_core.contrib.distribute.__init__.DistributionStrategy"
    ],
    "tensorflow_core/contrib/distribute/python/__init__.py": [],
    "tensorflow_core/contrib/distribute/python/collective_all_reduce_strategy.py": [
      "tensorflow_core.contrib.distribute.python.collective_all_reduce_strategy.CollectiveAllReduceExtended",
      "tensorflow_core.contrib.distribute.python.collective_all_reduce_strategy.CollectiveAllReduceStrategy"
    ],
    "tensorflow_core/contrib/distribute/python/mirrored_strategy.py": [
      "tensorflow_core.contrib.distribute.python.mirrored_strategy.CoreMirroredExtended",
      "tensorflow_core.contrib.distribute.python.mirrored_strategy.CoreMirroredStrategy",
      "tensorflow_core.contrib.distribute.python.mirrored_strategy.MirroredExtended",
      "tensorflow_core.contrib.distribute.python.mirrored_strategy.MirroredStrategy",
      "tensorflow_core.contrib.distribute.python.mirrored_strategy.all_local_devices"
    ],
    "tensorflow_core/contrib/distribute/python/monitor.py": [
      "tensorflow_core.contrib.distribute.python.monitor.Monitor"
    ],
    "tensorflow_core/contrib/distribute/python/one_device_strategy.py": [
      "tensorflow_core.contrib.distribute.python.one_device_strategy.OneDeviceStrategy"
    ],
    "tensorflow_core/contrib/distribute/python/parameter_server_strategy.py": [
      "tensorflow_core.contrib.distribute.python.parameter_server_strategy.CoreParameterServerExtended",
      "tensorflow_core.contrib.distribute.python.parameter_server_strategy.CoreParameterServerStrategy",
      "tensorflow_core.contrib.distribute.python.parameter_server_strategy.ParameterServerExtended",
      "tensorflow_core.contrib.distribute.python.parameter_server_strategy.ParameterServerStrategy"
    ],
    "tensorflow_core/contrib/distribute/python/tpu_strategy.py": [],
    "tensorflow_core/contrib/distributions/__init__.py": [],
    "tensorflow_core/contrib/distributions/python/__init__.py": [],
    "tensorflow_core/contrib/distributions/python/ops/__init__.py": [],
    "tensorflow_core/contrib/distributions/python/ops/autoregressive.py": [
      "tensorflow_core.contrib.distributions.python.ops.autoregressive.Autoregressive"
    ],
    "tensorflow_core/contrib/distributions/python/ops/batch_reshape.py": [
      "tensorflow_core.contrib.distributions.python.ops.batch_reshape.BatchReshape",
      "tensorflow_core.contrib.distributions.python.ops.batch_reshape.calculate_reshape",
      "tensorflow_core.contrib.distributions.python.ops.batch_reshape.validate_init_args_statically"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/__init__.py": [],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/absolute_value.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.absolute_value.AbsoluteValue"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/affine.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.affine.Affine"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/affine_linear_operator.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.affine_linear_operator.AffineLinearOperator"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/affine_scalar.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.affine_scalar.AffineScalar"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/batch_normalization.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.batch_normalization.BatchNormalization"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/chain.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.chain.Chain"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/cholesky_outer_product.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.cholesky_outer_product.CholeskyOuterProduct"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/conditional_bijector.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.conditional_bijector.ConditionalBijector"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/exp.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.exp.Exp"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/fill_triangular.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.fill_triangular.FillTriangular",
      "tensorflow_core.contrib.distributions.python.ops.bijectors.fill_triangular.vector_size_to_square_matrix_size"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/gumbel.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.gumbel.Gumbel"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/inline.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.inline.Inline"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/invert.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.invert.Invert"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/kumaraswamy.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.kumaraswamy.Kumaraswamy"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/masked_autoregressive.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.masked_autoregressive.MASK_EXCLUSIVE",
      "tensorflow_core.contrib.distributions.python.ops.bijectors.masked_autoregressive.MASK_INCLUSIVE",
      "tensorflow_core.contrib.distributions.python.ops.bijectors.masked_autoregressive.MaskedAutoregressiveFlow",
      "tensorflow_core.contrib.distributions.python.ops.bijectors.masked_autoregressive.masked_autoregressive_default_template",
      "tensorflow_core.contrib.distributions.python.ops.bijectors.masked_autoregressive.masked_dense"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/matrix_inverse_tril.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.matrix_inverse_tril.MatrixInverseTriL"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/ordered.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.ordered.Ordered"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/permute.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.permute.Permute"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/power_transform.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.power_transform.PowerTransform"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/real_nvp.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.real_nvp.RealNVP",
      "tensorflow_core.contrib.distributions.python.ops.bijectors.real_nvp.real_nvp_default_template"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/reshape.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.reshape.Reshape"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/scale_tril.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.scale_tril.ScaleTriL"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/sigmoid.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.sigmoid.Sigmoid"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/sinh_arcsinh.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.sinh_arcsinh.SinhArcsinh"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/softmax_centered.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.softmax_centered.SoftmaxCentered"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/softplus.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.softplus.Softplus"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/softsign.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.softsign.Softsign"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/square.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.square.Square"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/transform_diagonal.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.transform_diagonal.TransformDiagonal"
    ],
    "tensorflow_core/contrib/distributions/python/ops/bijectors/weibull.py": [
      "tensorflow_core.contrib.distributions.python.ops.bijectors.weibull.Weibull"
    ],
    "tensorflow_core/contrib/distributions/python/ops/binomial.py": [
      "tensorflow_core.contrib.distributions.python.ops.binomial.Binomial"
    ],
    "tensorflow_core/contrib/distributions/python/ops/cauchy.py": [
      "tensorflow_core.contrib.distributions.python.ops.cauchy.Cauchy"
    ],
    "tensorflow_core/contrib/distributions/python/ops/chi2.py": [
      "tensorflow_core.contrib.distributions.python.ops.chi2.Chi2",
      "tensorflow_core.contrib.distributions.python.ops.chi2.Chi2WithAbsDf"
    ],
    "tensorflow_core/contrib/distributions/python/ops/conditional_distribution.py": [
      "tensorflow_core.contrib.distributions.python.ops.conditional_distribution.ConditionalDistribution"
    ],
    "tensorflow_core/contrib/distributions/python/ops/conditional_transformed_distribution.py": [
      "tensorflow_core.contrib.distributions.python.ops.conditional_transformed_distribution.ConditionalTransformedDistribution"
    ],
    "tensorflow_core/contrib/distributions/python/ops/deterministic.py": [
      "tensorflow_core.contrib.distributions.python.ops.deterministic.Deterministic",
      "tensorflow_core.contrib.distributions.python.ops.deterministic.VectorDeterministic"
    ],
    "tensorflow_core/contrib/distributions/python/ops/distribution_util.py": [
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.get_broadcast_shape",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.is_diagonal_scale",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.make_diag_scale",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.make_tril_scale",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.maybe_check_scalar_distribution",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.mixture_stddev",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.move_dimension",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.pad_mixture_dimensions",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.shapes_from_loc_and_scale",
      "tensorflow_core.contrib.distributions.python.ops.distribution_util.static_value"
    ],
    "tensorflow_core/contrib/distributions/python/ops/estimator.py": [
      "tensorflow_core.contrib.distributions.python.ops.estimator.estimator_head_distribution_regression"
    ],
    "tensorflow_core/contrib/distributions/python/ops/geometric.py": [
      "tensorflow_core.contrib.distributions.python.ops.geometric.Geometric"
    ],
    "tensorflow_core/contrib/distributions/python/ops/gumbel.py": [],
    "tensorflow_core/contrib/distributions/python/ops/half_normal.py": [
      "tensorflow_core.contrib.distributions.python.ops.half_normal.HalfNormal"
    ],
    "tensorflow_core/contrib/distributions/python/ops/independent.py": [
      "tensorflow_core.contrib.distributions.python.ops.independent.Independent"
    ],
    "tensorflow_core/contrib/distributions/python/ops/inverse_gamma.py": [
      "tensorflow_core.contrib.distributions.python.ops.inverse_gamma.InverseGamma",
      "tensorflow_core.contrib.distributions.python.ops.inverse_gamma.InverseGammaWithSoftplusConcentrationRate"
    ],
    "tensorflow_core/contrib/distributions/python/ops/kumaraswamy.py": [
      "tensorflow_core.contrib.distributions.python.ops.kumaraswamy.Kumaraswamy"
    ],
    "tensorflow_core/contrib/distributions/python/ops/logistic.py": [
      "tensorflow_core.contrib.distributions.python.ops.logistic.Logistic"
    ],
    "tensorflow_core/contrib/distributions/python/ops/mixture.py": [
      "tensorflow_core.contrib.distributions.python.ops.mixture.Mixture"
    ],
    "tensorflow_core/contrib/distributions/python/ops/mixture_same_family.py": [
      "tensorflow_core.contrib.distributions.python.ops.mixture_same_family.MixtureSameFamily"
    ],
    "tensorflow_core/contrib/distributions/python/ops/moving_stats.py": [
      "tensorflow_core.contrib.distributions.python.ops.moving_stats.assign_log_moving_mean_exp",
      "tensorflow_core.contrib.distributions.python.ops.moving_stats.assign_moving_mean_variance",
      "tensorflow_core.contrib.distributions.python.ops.moving_stats.moving_mean_variance"
    ],
    "tensorflow_core/contrib/distributions/python/ops/mvn_diag.py": [
      "tensorflow_core.contrib.distributions.python.ops.mvn_diag.MultivariateNormalDiag",
      "tensorflow_core.contrib.distributions.python.ops.mvn_diag.MultivariateNormalDiagWithSoftplusScale"
    ],
    "tensorflow_core/contrib/distributions/python/ops/mvn_diag_plus_low_rank.py": [
      "tensorflow_core.contrib.distributions.python.ops.mvn_diag_plus_low_rank.MultivariateNormalDiagPlusLowRank"
    ],
    "tensorflow_core/contrib/distributions/python/ops/mvn_full_covariance.py": [
      "tensorflow_core.contrib.distributions.python.ops.mvn_full_covariance.MultivariateNormalFullCovariance"
    ],
    "tensorflow_core/contrib/distributions/python/ops/mvn_linear_operator.py": [
      "tensorflow_core.contrib.distributions.python.ops.mvn_linear_operator.MultivariateNormalLinearOperator"
    ],
    "tensorflow_core/contrib/distributions/python/ops/mvn_tril.py": [
      "tensorflow_core.contrib.distributions.python.ops.mvn_tril.MultivariateNormalTriL"
    ],
    "tensorflow_core/contrib/distributions/python/ops/negative_binomial.py": [
      "tensorflow_core.contrib.distributions.python.ops.negative_binomial.NegativeBinomial"
    ],
    "tensorflow_core/contrib/distributions/python/ops/normal_conjugate_posteriors.py": [
      "tensorflow_core.contrib.distributions.python.ops.normal_conjugate_posteriors.normal_conjugates_known_scale_posterior",
      "tensorflow_core.contrib.distributions.python.ops.normal_conjugate_posteriors.normal_conjugates_known_scale_predictive"
    ],
    "tensorflow_core/contrib/distributions/python/ops/onehot_categorical.py": [
      "tensorflow_core.contrib.distributions.python.ops.onehot_categorical.OneHotCategorical"
    ],
    "tensorflow_core/contrib/distributions/python/ops/poisson.py": [
      "tensorflow_core.contrib.distributions.python.ops.poisson.Poisson"
    ],
    "tensorflow_core/contrib/distributions/python/ops/poisson_lognormal.py": [
      "tensorflow_core.contrib.distributions.python.ops.poisson_lognormal.PoissonLogNormalQuadratureCompound",
      "tensorflow_core.contrib.distributions.python.ops.poisson_lognormal.concat_vectors",
      "tensorflow_core.contrib.distributions.python.ops.poisson_lognormal.quadrature_scheme_lognormal_gauss_hermite",
      "tensorflow_core.contrib.distributions.python.ops.poisson_lognormal.quadrature_scheme_lognormal_quantiles"
    ],
    "tensorflow_core/contrib/distributions/python/ops/quantized_distribution.py": [
      "tensorflow_core.contrib.distributions.python.ops.quantized_distribution.QuantizedDistribution"
    ],
    "tensorflow_core/contrib/distributions/python/ops/relaxed_bernoulli.py": [
      "tensorflow_core.contrib.distributions.python.ops.relaxed_bernoulli.RelaxedBernoulli"
    ],
    "tensorflow_core/contrib/distributions/python/ops/relaxed_onehot_categorical.py": [
      "tensorflow_core.contrib.distributions.python.ops.relaxed_onehot_categorical.ExpRelaxedOneHotCategorical",
      "tensorflow_core.contrib.distributions.python.ops.relaxed_onehot_categorical.RelaxedOneHotCategorical"
    ],
    "tensorflow_core/contrib/distributions/python/ops/sample_stats.py": [
      "tensorflow_core.contrib.distributions.python.ops.sample_stats.auto_correlation",
      "tensorflow_core.contrib.distributions.python.ops.sample_stats.percentile"
    ],
    "tensorflow_core/contrib/distributions/python/ops/seed_stream.py": [
      "tensorflow_core.contrib.distributions.python.ops.seed_stream.SeedStream"
    ],
    "tensorflow_core/contrib/distributions/python/ops/shape.py": [],
    "tensorflow_core/contrib/distributions/python/ops/sinh_arcsinh.py": [
      "tensorflow_core.contrib.distributions.python.ops.sinh_arcsinh.SinhArcsinh"
    ],
    "tensorflow_core/contrib/distributions/python/ops/statistical_testing.py": [
      "tensorflow_core.contrib.distributions.python.ops.statistical_testing.assert_true_mean_equal_by_dkwm",
      "tensorflow_core.contrib.distributions.python.ops.statistical_testing.assert_true_mean_equal_by_dkwm_two_sample",
      "tensorflow_core.contrib.distributions.python.ops.statistical_testing.assert_true_mean_in_interval_by_dkwm",
      "tensorflow_core.contrib.distributions.python.ops.statistical_testing.min_discrepancy_of_true_means_detectable_by_dkwm",
      "tensorflow_core.contrib.distributions.python.ops.statistical_testing.min_discrepancy_of_true_means_detectable_by_dkwm_two_sample",
      "tensorflow_core.contrib.distributions.python.ops.statistical_testing.min_num_samples_for_dkwm_mean_test",
      "tensorflow_core.contrib.distributions.python.ops.statistical_testing.min_num_samples_for_dkwm_mean_two_sample_test",
      "tensorflow_core.contrib.distributions.python.ops.statistical_testing.true_mean_confidence_interval_by_dkwm"
    ],
    "tensorflow_core/contrib/distributions/python/ops/test_util.py": [
      "tensorflow_core.contrib.distributions.python.ops.test_util.DiscreteScalarDistributionTestHelpers",
      "tensorflow_core.contrib.distributions.python.ops.test_util.VectorDistributionTestHelpers"
    ],
    "tensorflow_core/contrib/distributions/python/ops/vector_diffeomixture.py": [
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.VectorDiffeomixture",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.add",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.concat_vectors",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.determine_batch_event_shapes",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.interpolate_loc",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.interpolate_scale",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.linop_scale",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.maybe_check_quadrature_param",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.quadrature_scheme_softmaxnormal_gauss_hermite",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.quadrature_scheme_softmaxnormal_quantiles",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.softmax",
      "tensorflow_core.contrib.distributions.python.ops.vector_diffeomixture.vec_osquare"
    ],
    "tensorflow_core/contrib/distributions/python/ops/vector_exponential_diag.py": [
      "tensorflow_core.contrib.distributions.python.ops.vector_exponential_diag.VectorExponentialDiag"
    ],
    "tensorflow_core/contrib/distributions/python/ops/vector_exponential_linear_operator.py": [
      "tensorflow_core.contrib.distributions.python.ops.vector_exponential_linear_operator.VectorExponentialLinearOperator"
    ],
    "tensorflow_core/contrib/distributions/python/ops/vector_laplace_diag.py": [
      "tensorflow_core.contrib.distributions.python.ops.vector_laplace_diag.VectorLaplaceDiag"
    ],
    "tensorflow_core/contrib/distributions/python/ops/vector_laplace_linear_operator.py": [
      "tensorflow_core.contrib.distributions.python.ops.vector_laplace_linear_operator.VectorLaplaceLinearOperator"
    ],
    "tensorflow_core/contrib/distributions/python/ops/vector_sinh_arcsinh_diag.py": [
      "tensorflow_core.contrib.distributions.python.ops.vector_sinh_arcsinh_diag.VectorSinhArcsinhDiag"
    ],
    "tensorflow_core/contrib/distributions/python/ops/vector_student_t.py": [],
    "tensorflow_core/contrib/distributions/python/ops/wishart.py": [
      "tensorflow_core.contrib.distributions.python.ops.wishart.WishartCholesky",
      "tensorflow_core.contrib.distributions.python.ops.wishart.WishartFull"
    ],
    "tensorflow_core/contrib/eager/__init__.py": [],
    "tensorflow_core/contrib/eager/python/__init__.py": [],
    "tensorflow_core/contrib/eager/python/datasets.py": [
      "tensorflow_core.contrib.eager.python.datasets.Iterator"
    ],
    "tensorflow_core/contrib/eager/python/metrics.py": [],
    "tensorflow_core/contrib/eager/python/metrics_impl.py": [
      "tensorflow_core.contrib.eager.python.metrics_impl.Accuracy",
      "tensorflow_core.contrib.eager.python.metrics_impl.BinaryAccuracy",
      "tensorflow_core.contrib.eager.python.metrics_impl.CategoricalAccuracy",
      "tensorflow_core.contrib.eager.python.metrics_impl.Mean",
      "tensorflow_core.contrib.eager.python.metrics_impl.Metric",
      "tensorflow_core.contrib.eager.python.metrics_impl.SparseAccuracy"
    ],
    "tensorflow_core/contrib/eager/python/network.py": [
      "tensorflow_core.contrib.eager.python.network.Network",
      "tensorflow_core.contrib.eager.python.network.Sequential",
      "tensorflow_core.contrib.eager.python.network.restore_network_checkpoint",
      "tensorflow_core.contrib.eager.python.network.save_network_checkpoint"
    ],
    "tensorflow_core/contrib/eager/python/parameter_server.py": [
      "tensorflow_core.contrib.eager.python.parameter_server.SharedVariable",
      "tensorflow_core.contrib.eager.python.parameter_server.parameter_server_scope"
    ],
    "tensorflow_core/contrib/eager/python/saver.py": [
      "tensorflow_core.contrib.eager.python.saver.Saver",
      "tensorflow_core.contrib.eager.python.saver.get_optimizer_variables",
      "tensorflow_core.contrib.eager.python.saver.restore_variables_on_create"
    ],
    "tensorflow_core/contrib/eager/python/tfe.py": [
      "tensorflow_core.contrib.eager.python.tfe.GradientTape",
      "tensorflow_core.contrib.eager.python.tfe.defun",
      "tensorflow_core.contrib.eager.python.tfe.gradients_function",
      "tensorflow_core.contrib.eager.python.tfe.implicit_gradients",
      "tensorflow_core.contrib.eager.python.tfe.implicit_value_and_gradients",
      "tensorflow_core.contrib.eager.python.tfe.in_eager_mode",
      "tensorflow_core.contrib.eager.python.tfe.make_template",
      "tensorflow_core.contrib.eager.python.tfe.py_func",
      "tensorflow_core.contrib.eager.python.tfe.value_and_gradients_function"
    ],
    "tensorflow_core/contrib/estimator/__init__.py": [],
    "tensorflow_core/contrib/estimator/python/__init__.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/__init__.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/boosted_trees.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/dnn_with_layer_annotations.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/early_stopping.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/export.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/exporter.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/extenders.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/head.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/hooks.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/logit_fns.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/multi_head.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/replicate_model_fn.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/rnn.py": [],
    "tensorflow_core/contrib/estimator/python/estimator/saved_model_estimator.py": [],
    "tensorflow_core/contrib/factorization/__init__.py": [],
    "tensorflow_core/contrib/factorization/python/__init__.py": [],
    "tensorflow_core/contrib/factorization/python/ops/__init__.py": [],
    "tensorflow_core/contrib/factorization/python/ops/clustering_ops.py": [
      "tensorflow_core.contrib.factorization.python.ops.clustering_ops.CLUSTERS_VAR_NAME",
      "tensorflow_core.contrib.factorization.python.ops.clustering_ops.COSINE_DISTANCE",
      "tensorflow_core.contrib.factorization.python.ops.clustering_ops.KMC2_INIT",
      "tensorflow_core.contrib.factorization.python.ops.clustering_ops.KMEANS_PLUS_PLUS_INIT",
      "tensorflow_core.contrib.factorization.python.ops.clustering_ops.KMeans",
      "tensorflow_core.contrib.factorization.python.ops.clustering_ops.RANDOM_INIT",
      "tensorflow_core.contrib.factorization.python.ops.clustering_ops.SQUARED_EUCLIDEAN_DISTANCE"
    ],
    "tensorflow_core/contrib/factorization/python/ops/factorization_ops.py": [
      "tensorflow_core.contrib.factorization.python.ops.factorization_ops.WALSModel"
    ],
    "tensorflow_core/contrib/factorization/python/ops/factorization_ops_test_utils.py": [
      "tensorflow_core.contrib.factorization.python.ops.factorization_ops_test_utils.INPUT_MATRIX",
      "tensorflow_core.contrib.factorization.python.ops.factorization_ops_test_utils.calculate_loss",
      "tensorflow_core.contrib.factorization.python.ops.factorization_ops_test_utils.np_matrix_to_tf_sparse",
      "tensorflow_core.contrib.factorization.python.ops.factorization_ops_test_utils.remove_empty_rows_columns"
    ],
    "tensorflow_core/contrib/factorization/python/ops/gen_factorization_ops.py": [
      "tensorflow_core.contrib.factorization.python.ops.gen_factorization_ops.MaskedMatmul",
      "tensorflow_core.contrib.factorization.python.ops.gen_factorization_ops.WALSComputePartialLhsAndRhs",
      "tensorflow_core.contrib.factorization.python.ops.gen_factorization_ops.masked_matmul",
      "tensorflow_core.contrib.factorization.python.ops.gen_factorization_ops.masked_matmul_eager_fallback",
      "tensorflow_core.contrib.factorization.python.ops.gen_factorization_ops.wals_compute_partial_lhs_and_rhs",
      "tensorflow_core.contrib.factorization.python.ops.gen_factorization_ops.wals_compute_partial_lhs_and_rhs_eager_fallback"
    ],
    "tensorflow_core/contrib/factorization/python/ops/gmm.py": [
      "tensorflow_core.contrib.factorization.python.ops.gmm.GMM"
    ],
    "tensorflow_core/contrib/factorization/python/ops/gmm_ops.py": [
      "tensorflow_core.contrib.factorization.python.ops.gmm_ops.DIAG_COVARIANCE",
      "tensorflow_core.contrib.factorization.python.ops.gmm_ops.FULL_COVARIANCE",
      "tensorflow_core.contrib.factorization.python.ops.gmm_ops.GmmAlgorithm",
      "tensorflow_core.contrib.factorization.python.ops.gmm_ops.MEPS",
      "tensorflow_core.contrib.factorization.python.ops.gmm_ops.gmm"
    ],
    "tensorflow_core/contrib/factorization/python/ops/kmeans.py": [
      "tensorflow_core.contrib.factorization.python.ops.kmeans.KMeansClustering"
    ],
    "tensorflow_core/contrib/factorization/python/ops/wals.py": [
      "tensorflow_core.contrib.factorization.python.ops.wals.WALSMatrixFactorization"
    ],
    "tensorflow_core/contrib/feature_column/__init__.py": [],
    "tensorflow_core/contrib/feature_column/python/__init__.py": [],
    "tensorflow_core/contrib/feature_column/python/feature_column/__init__.py": [],
    "tensorflow_core/contrib/feature_column/python/feature_column/sequence_feature_column.py": [
      "tensorflow_core.contrib.feature_column.python.feature_column.sequence_feature_column.concatenate_context_input",
      "tensorflow_core.contrib.feature_column.python.feature_column.sequence_feature_column.sequence_categorical_column_with_hash_bucket",
      "tensorflow_core.contrib.feature_column.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity",
      "tensorflow_core.contrib.feature_column.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file",
      "tensorflow_core.contrib.feature_column.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list",
      "tensorflow_core.contrib.feature_column.python.feature_column.sequence_feature_column.sequence_input_layer",
      "tensorflow_core.contrib.feature_column.python.feature_column.sequence_feature_column.sequence_numeric_column"
    ],
    "tensorflow_core/contrib/ffmpeg/__init__.py": [],
    "tensorflow_core/contrib/ffmpeg/ffmpeg_ops.py": [
      "tensorflow_core.contrib.ffmpeg.ffmpeg_ops.decode_audio",
      "tensorflow_core.contrib.ffmpeg.ffmpeg_ops.decode_video",
      "tensorflow_core.contrib.ffmpeg.ffmpeg_ops.encode_audio"
    ],
    "tensorflow_core/contrib/ffmpeg/ops/__init__.py": [],
    "tensorflow_core/contrib/ffmpeg/ops/gen_decode_audio_op_py.py": [
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_audio_op_py.DecodeAudio",
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_audio_op_py.DecodeAudioV2",
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_audio_op_py.decode_audio",
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_audio_op_py.decode_audio_eager_fallback",
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_audio_op_py.decode_audio_v2",
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_audio_op_py.decode_audio_v2_eager_fallback"
    ],
    "tensorflow_core/contrib/ffmpeg/ops/gen_decode_video_op_py.py": [
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_video_op_py.DecodeVideo",
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_video_op_py.decode_video",
      "tensorflow_core.contrib.ffmpeg.ops.gen_decode_video_op_py.decode_video_eager_fallback"
    ],
    "tensorflow_core/contrib/ffmpeg/ops/gen_encode_audio_op_py.py": [
      "tensorflow_core.contrib.ffmpeg.ops.gen_encode_audio_op_py.EncodeAudio",
      "tensorflow_core.contrib.ffmpeg.ops.gen_encode_audio_op_py.EncodeAudioV2",
      "tensorflow_core.contrib.ffmpeg.ops.gen_encode_audio_op_py.encode_audio",
      "tensorflow_core.contrib.ffmpeg.ops.gen_encode_audio_op_py.encode_audio_eager_fallback",
      "tensorflow_core.contrib.ffmpeg.ops.gen_encode_audio_op_py.encode_audio_v2",
      "tensorflow_core.contrib.ffmpeg.ops.gen_encode_audio_op_py.encode_audio_v2_eager_fallback"
    ],
    "tensorflow_core/contrib/framework/__init__.py": [],
    "tensorflow_core/contrib/framework/python/__init__.py": [],
    "tensorflow_core/contrib/framework/python/framework/__init__.py": [],
    "tensorflow_core/contrib/framework/python/framework/checkpoint_utils.py": [
      "tensorflow_core.contrib.framework.python.framework.checkpoint_utils.init_from_checkpoint",
      "tensorflow_core.contrib.framework.python.framework.checkpoint_utils.list_variables",
      "tensorflow_core.contrib.framework.python.framework.checkpoint_utils.load_checkpoint",
      "tensorflow_core.contrib.framework.python.framework.checkpoint_utils.load_variable"
    ],
    "tensorflow_core/contrib/framework/python/framework/experimental.py": [
      "tensorflow_core.contrib.framework.python.framework.experimental.experimental"
    ],
    "tensorflow_core/contrib/framework/python/framework/graph_util.py": [
      "tensorflow_core.contrib.framework.python.framework.graph_util.fuse_op",
      "tensorflow_core.contrib.framework.python.framework.graph_util.get_placeholders"
    ],
    "tensorflow_core/contrib/framework/python/framework/tensor_util.py": [
      "tensorflow_core.contrib.framework.python.framework.tensor_util.assert_same_float_dtype",
      "tensorflow_core.contrib.framework.python.framework.tensor_util.assert_scalar",
      "tensorflow_core.contrib.framework.python.framework.tensor_util.assert_scalar_int",
      "tensorflow_core.contrib.framework.python.framework.tensor_util.convert_to_tensor_or_sparse_tensor",
      "tensorflow_core.contrib.framework.python.framework.tensor_util.is_tensor",
      "tensorflow_core.contrib.framework.python.framework.tensor_util.reduce_sum_n",
      "tensorflow_core.contrib.framework.python.framework.tensor_util.remove_squeezable_dimensions",
      "tensorflow_core.contrib.framework.python.framework.tensor_util.with_same_shape",
      "tensorflow_core.contrib.framework.python.framework.tensor_util.with_shape"
    ],
    "tensorflow_core/contrib/framework/python/ops/__init__.py": [],
    "tensorflow_core/contrib/framework/python/ops/arg_scope.py": [
      "tensorflow_core.contrib.framework.python.ops.arg_scope.add_arg_scope",
      "tensorflow_core.contrib.framework.python.ops.arg_scope.arg_scope",
      "tensorflow_core.contrib.framework.python.ops.arg_scope.arg_scope_func_key",
      "tensorflow_core.contrib.framework.python.ops.arg_scope.arg_scoped_arguments",
      "tensorflow_core.contrib.framework.python.ops.arg_scope.current_arg_scope",
      "tensorflow_core.contrib.framework.python.ops.arg_scope.has_arg_scope"
    ],
    "tensorflow_core/contrib/framework/python/ops/audio_ops.py": [],
    "tensorflow_core/contrib/framework/python/ops/checkpoint_ops.py": [
      "tensorflow_core.contrib.framework.python.ops.checkpoint_ops.load_and_remap_matrix_initializer",
      "tensorflow_core.contrib.framework.python.ops.checkpoint_ops.load_embedding_initializer",
      "tensorflow_core.contrib.framework.python.ops.checkpoint_ops.load_linear_multiclass_bias_initializer",
      "tensorflow_core.contrib.framework.python.ops.checkpoint_ops.load_variable_slot_initializer"
    ],
    "tensorflow_core/contrib/framework/python/ops/gen_variable_ops.py": [
      "tensorflow_core.contrib.framework.python.ops.gen_variable_ops.ZeroInitializer",
      "tensorflow_core.contrib.framework.python.ops.gen_variable_ops.ZeroVarInitializer",
      "tensorflow_core.contrib.framework.python.ops.gen_variable_ops.zero_initializer",
      "tensorflow_core.contrib.framework.python.ops.gen_variable_ops.zero_initializer_eager_fallback",
      "tensorflow_core.contrib.framework.python.ops.gen_variable_ops.zero_var_initializer",
      "tensorflow_core.contrib.framework.python.ops.gen_variable_ops.zero_var_initializer_eager_fallback"
    ],
    "tensorflow_core/contrib/framework/python/ops/ops.py": [
      "tensorflow_core.contrib.framework.python.ops.ops.get_graph_from_inputs",
      "tensorflow_core.contrib.framework.python.ops.ops.get_name_scope"
    ],
    "tensorflow_core/contrib/framework/python/ops/prettyprint_ops.py": [
      "tensorflow_core.contrib.framework.python.ops.prettyprint_ops.print_op"
    ],
    "tensorflow_core/contrib/framework/python/ops/script_ops.py": [
      "tensorflow_core.contrib.framework.python.ops.script_ops.py_func"
    ],
    "tensorflow_core/contrib/framework/python/ops/sort_ops.py": [
      "tensorflow_core.contrib.framework.python.ops.sort_ops.argsort",
      "tensorflow_core.contrib.framework.python.ops.sort_ops.sort"
    ],
    "tensorflow_core/contrib/framework/python/ops/variables.py": [
      "tensorflow_core.contrib.framework.python.ops.variables.VariableDeviceChooser",
      "tensorflow_core.contrib.framework.python.ops.variables.add_model_variable",
      "tensorflow_core.contrib.framework.python.ops.variables.assert_global_step",
      "tensorflow_core.contrib.framework.python.ops.variables.assert_or_get_global_step",
      "tensorflow_core.contrib.framework.python.ops.variables.assign_from_checkpoint",
      "tensorflow_core.contrib.framework.python.ops.variables.assign_from_checkpoint_fn",
      "tensorflow_core.contrib.framework.python.ops.variables.assign_from_values",
      "tensorflow_core.contrib.framework.python.ops.variables.assign_from_values_fn",
      "tensorflow_core.contrib.framework.python.ops.variables.create_global_step",
      "tensorflow_core.contrib.framework.python.ops.variables.filter_variables",
      "tensorflow_core.contrib.framework.python.ops.variables.get_global_step",
      "tensorflow_core.contrib.framework.python.ops.variables.get_local_variables",
      "tensorflow_core.contrib.framework.python.ops.variables.get_model_variables",
      "tensorflow_core.contrib.framework.python.ops.variables.get_or_create_global_step",
      "tensorflow_core.contrib.framework.python.ops.variables.get_trainable_variables",
      "tensorflow_core.contrib.framework.python.ops.variables.get_unique_variable",
      "tensorflow_core.contrib.framework.python.ops.variables.get_variable_full_name",
      "tensorflow_core.contrib.framework.python.ops.variables.get_variables",
      "tensorflow_core.contrib.framework.python.ops.variables.get_variables_by_name",
      "tensorflow_core.contrib.framework.python.ops.variables.get_variables_by_suffix",
      "tensorflow_core.contrib.framework.python.ops.variables.get_variables_to_restore",
      "tensorflow_core.contrib.framework.python.ops.variables.global_variable",
      "tensorflow_core.contrib.framework.python.ops.variables.local_variable",
      "tensorflow_core.contrib.framework.python.ops.variables.model_variable",
      "tensorflow_core.contrib.framework.python.ops.variables.variable",
      "tensorflow_core.contrib.framework.python.ops.variables.zero_initializer"
    ],
    "tensorflow_core/contrib/fused_conv/__init__.py": [],
    "tensorflow_core/contrib/fused_conv/ops/__init__.py": [],
    "tensorflow_core/contrib/fused_conv/ops/gen_fused_conv2d_bias_activation_op.py": [
      "tensorflow_core.contrib.fused_conv.ops.gen_fused_conv2d_bias_activation_op.FusedConv2DBiasActivation",
      "tensorflow_core.contrib.fused_conv.ops.gen_fused_conv2d_bias_activation_op.fused_conv2d_bias_activation",
      "tensorflow_core.contrib.fused_conv.ops.gen_fused_conv2d_bias_activation_op.fused_conv2d_bias_activation_eager_fallback"
    ],
    "tensorflow_core/contrib/fused_conv/python/__init__.py": [],
    "tensorflow_core/contrib/fused_conv/python/ops/__init__.py": [],
    "tensorflow_core/contrib/fused_conv/python/ops/fused_conv2d_bias_activation_benchmark.py": [
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_benchmark.FusedConv2DBiasActivationBenchmark",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_benchmark.build_conv_bias_relu_graph",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_benchmark.build_fused_conv_bias_relu_graph"
    ],
    "tensorflow_core/contrib/fused_conv/python/ops/fused_conv2d_bias_activation_op.py": [
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op.fused_conv2d_bias_activation"
    ],
    "tensorflow_core/contrib/fused_conv/python/ops/fused_conv2d_bias_activation_op_test.py": [
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test.FusedConv2DBiasActivationTest",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test.FusedConvInt8CPUTests",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test.FusedConvInt8CorrespondenceTests"
    ],
    "tensorflow_core/contrib/fused_conv/python/ops/fused_conv2d_bias_activation_op_test_base.py": [
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test_base.FusedConv2DBiasActivationTest",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test_base.FusedConvInt8CPUTests",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test_base.FusedConvInt8CorrespondenceTests",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test_base.fshape",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test_base.ishape",
      "tensorflow_core.contrib.fused_conv.python.ops.fused_conv2d_bias_activation_op_test_base.oshape"
    ],
    "tensorflow_core/contrib/fused_conv/python/ops/tensorrt_fused_conv_test.py": [
      "tensorflow_core.contrib.fused_conv.python.ops.tensorrt_fused_conv_test.Conv2DFusedHWIOTest",
      "tensorflow_core.contrib.fused_conv.python.ops.tensorrt_fused_conv_test.Conv2DFusedOIHWTest",
      "tensorflow_core.contrib.fused_conv.python.ops.tensorrt_fused_conv_test.build_fused_conv_graph",
      "tensorflow_core.contrib.fused_conv.python.ops.tensorrt_fused_conv_test.conv2d_fused_layer"
    ],
    "tensorflow_core/contrib/graph_editor/__init__.py": [
      "tensorflow_core.contrib.graph_editor.__init__.ph",
      "tensorflow_core.contrib.graph_editor.__init__.sgv",
      "tensorflow_core.contrib.graph_editor.__init__.sgv_scope"
    ],
    "tensorflow_core/contrib/graph_editor/edit.py": [
      "tensorflow_core.contrib.graph_editor.edit.bypass",
      "tensorflow_core.contrib.graph_editor.edit.connect",
      "tensorflow_core.contrib.graph_editor.edit.detach",
      "tensorflow_core.contrib.graph_editor.edit.detach_control_inputs",
      "tensorflow_core.contrib.graph_editor.edit.detach_control_outputs",
      "tensorflow_core.contrib.graph_editor.edit.detach_inputs",
      "tensorflow_core.contrib.graph_editor.edit.detach_outputs"
    ],
    "tensorflow_core/contrib/graph_editor/reroute.py": [
      "tensorflow_core.contrib.graph_editor.reroute.add_control_inputs",
      "tensorflow_core.contrib.graph_editor.reroute.remove_control_inputs",
      "tensorflow_core.contrib.graph_editor.reroute.reroute_inputs",
      "tensorflow_core.contrib.graph_editor.reroute.reroute_ios",
      "tensorflow_core.contrib.graph_editor.reroute.reroute_outputs",
      "tensorflow_core.contrib.graph_editor.reroute.reroute_ts",
      "tensorflow_core.contrib.graph_editor.reroute.swap_inputs",
      "tensorflow_core.contrib.graph_editor.reroute.swap_ios",
      "tensorflow_core.contrib.graph_editor.reroute.swap_outputs",
      "tensorflow_core.contrib.graph_editor.reroute.swap_ts"
    ],
    "tensorflow_core/contrib/graph_editor/select.py": [
      "tensorflow_core.contrib.graph_editor.select.can_be_regex",
      "tensorflow_core.contrib.graph_editor.select.check_cios",
      "tensorflow_core.contrib.graph_editor.select.compute_boundary_ts",
      "tensorflow_core.contrib.graph_editor.select.filter_ops",
      "tensorflow_core.contrib.graph_editor.select.filter_ops_from_regex",
      "tensorflow_core.contrib.graph_editor.select.filter_ts",
      "tensorflow_core.contrib.graph_editor.select.filter_ts_from_regex",
      "tensorflow_core.contrib.graph_editor.select.get_backward_walk_ops",
      "tensorflow_core.contrib.graph_editor.select.get_forward_walk_ops",
      "tensorflow_core.contrib.graph_editor.select.get_name_scope_ops",
      "tensorflow_core.contrib.graph_editor.select.get_ops_ios",
      "tensorflow_core.contrib.graph_editor.select.get_walks_intersection_ops",
      "tensorflow_core.contrib.graph_editor.select.get_walks_union_ops",
      "tensorflow_core.contrib.graph_editor.select.get_within_boundary_ops",
      "tensorflow_core.contrib.graph_editor.select.make_regex",
      "tensorflow_core.contrib.graph_editor.select.select_ops",
      "tensorflow_core.contrib.graph_editor.select.select_ops_and_ts",
      "tensorflow_core.contrib.graph_editor.select.select_ts"
    ],
    "tensorflow_core/contrib/graph_editor/subgraph.py": [
      "tensorflow_core.contrib.graph_editor.subgraph.SubGraphView",
      "tensorflow_core.contrib.graph_editor.subgraph.make_view",
      "tensorflow_core.contrib.graph_editor.subgraph.make_view_from_scope"
    ],
    "tensorflow_core/contrib/graph_editor/transform.py": [
      "tensorflow_core.contrib.graph_editor.transform.Transformer",
      "tensorflow_core.contrib.graph_editor.transform.TransformerInfo",
      "tensorflow_core.contrib.graph_editor.transform.assign_renamed_collections_handler",
      "tensorflow_core.contrib.graph_editor.transform.copy",
      "tensorflow_core.contrib.graph_editor.transform.copy_op_handler",
      "tensorflow_core.contrib.graph_editor.transform.copy_with_input_replacements",
      "tensorflow_core.contrib.graph_editor.transform.graph_replace",
      "tensorflow_core.contrib.graph_editor.transform.keep_t_if_possible_handler",
      "tensorflow_core.contrib.graph_editor.transform.replace_t_with_placeholder_handler",
      "tensorflow_core.contrib.graph_editor.transform.transform_op_if_inside_handler"
    ],
    "tensorflow_core/contrib/graph_editor/util.py": [
      "tensorflow_core.contrib.graph_editor.util.ControlOutputs",
      "tensorflow_core.contrib.graph_editor.util.ListView",
      "tensorflow_core.contrib.graph_editor.util.check_graphs",
      "tensorflow_core.contrib.graph_editor.util.concatenate_unique",
      "tensorflow_core.contrib.graph_editor.util.find_corresponding",
      "tensorflow_core.contrib.graph_editor.util.find_corresponding_elem",
      "tensorflow_core.contrib.graph_editor.util.flatten_tree",
      "tensorflow_core.contrib.graph_editor.util.get_consuming_ops",
      "tensorflow_core.contrib.graph_editor.util.get_generating_ops",
      "tensorflow_core.contrib.graph_editor.util.get_predefined_collection_names",
      "tensorflow_core.contrib.graph_editor.util.get_tensors",
      "tensorflow_core.contrib.graph_editor.util.get_unique_graph",
      "tensorflow_core.contrib.graph_editor.util.is_iterable",
      "tensorflow_core.contrib.graph_editor.util.make_list_of_op",
      "tensorflow_core.contrib.graph_editor.util.make_list_of_t",
      "tensorflow_core.contrib.graph_editor.util.make_placeholder_from_dtype_and_shape",
      "tensorflow_core.contrib.graph_editor.util.make_placeholder_from_tensor",
      "tensorflow_core.contrib.graph_editor.util.placeholder_name",
      "tensorflow_core.contrib.graph_editor.util.scope_basename",
      "tensorflow_core.contrib.graph_editor.util.scope_dirname",
      "tensorflow_core.contrib.graph_editor.util.scope_finalize",
      "tensorflow_core.contrib.graph_editor.util.transform_tree"
    ],
    "tensorflow_core/contrib/grid_rnn/__init__.py": [],
    "tensorflow_core/contrib/grid_rnn/python/__init__.py": [],
    "tensorflow_core/contrib/grid_rnn/python/ops/__init__.py": [],
    "tensorflow_core/contrib/grid_rnn/python/ops/grid_rnn_cell.py": [
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1BasicLSTMCell",
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1BasicRNNCell",
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid1LSTMCell",
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicLSTMCell",
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2BasicRNNCell",
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2GRUCell",
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid2LSTMCell",
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.Grid3LSTMCell",
      "tensorflow_core.contrib.grid_rnn.python.ops.grid_rnn_cell.GridRNNCell"
    ],
    "tensorflow_core/contrib/hadoop/__init__.py": [],
    "tensorflow_core/contrib/hadoop/python/__init__.py": [],
    "tensorflow_core/contrib/hadoop/python/ops/__init__.py": [],
    "tensorflow_core/contrib/hadoop/python/ops/gen_dataset_ops.py": [
      "tensorflow_core.contrib.hadoop.python.ops.gen_dataset_ops.SequenceFileDataset",
      "tensorflow_core.contrib.hadoop.python.ops.gen_dataset_ops.sequence_file_dataset",
      "tensorflow_core.contrib.hadoop.python.ops.gen_dataset_ops.sequence_file_dataset_eager_fallback"
    ],
    "tensorflow_core/contrib/hadoop/python/ops/hadoop_dataset_ops.py": [
      "tensorflow_core.contrib.hadoop.python.ops.hadoop_dataset_ops.SequenceFileDataset"
    ],
    "tensorflow_core/contrib/hadoop/python/ops/hadoop_op_loader.py": [],
    "tensorflow_core/contrib/hooks/__init__.py": [],
    "tensorflow_core/contrib/hooks/python/__init__.py": [],
    "tensorflow_core/contrib/hooks/python/training/__init__.py": [],
    "tensorflow_core/contrib/hooks/python/training/profiler_hook.py": [
      "tensorflow_core.contrib.hooks.python.training.profiler_hook.ProfilerHook"
    ],
    "tensorflow_core/contrib/ignite/__init__.py": [],
    "tensorflow_core/contrib/ignite/python/__init__.py": [],
    "tensorflow_core/contrib/ignite/python/ops/__init__.py": [],
    "tensorflow_core/contrib/ignite/python/ops/gen_dataset_ops.py": [
      "tensorflow_core.contrib.ignite.python.ops.gen_dataset_ops.IgniteDataset",
      "tensorflow_core.contrib.ignite.python.ops.gen_dataset_ops.ignite_dataset",
      "tensorflow_core.contrib.ignite.python.ops.gen_dataset_ops.ignite_dataset_eager_fallback"
    ],
    "tensorflow_core/contrib/ignite/python/ops/gen_igfs_ops.py": [],
    "tensorflow_core/contrib/ignite/python/ops/igfs_op_loader.py": [],
    "tensorflow_core/contrib/ignite/python/ops/igfs_ops.py": [
      "tensorflow_core.contrib.ignite.python.ops.igfs_ops.file_system_library"
    ],
    "tensorflow_core/contrib/ignite/python/ops/ignite_dataset_ops.py": [
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.BinaryField",
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.BinaryType",
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.DataBuffer",
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.IgniteClient",
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.IgniteDataset",
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.Readable",
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.TcpClient",
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.TypeTreeNode",
      "tensorflow_core.contrib.ignite.python.ops.ignite_dataset_ops.types"
    ],
    "tensorflow_core/contrib/ignite/python/ops/ignite_op_loader.py": [],
    "tensorflow_core/contrib/image/__init__.py": [],
    "tensorflow_core/contrib/image/ops/__init__.py": [],
    "tensorflow_core/contrib/image/ops/gen_distort_image_ops.py": [
      "tensorflow_core.contrib.image.ops.gen_distort_image_ops.AdjustHsvInYiq",
      "tensorflow_core.contrib.image.ops.gen_distort_image_ops.adjust_hsv_in_yiq",
      "tensorflow_core.contrib.image.ops.gen_distort_image_ops.adjust_hsv_in_yiq_eager_fallback"
    ],
    "tensorflow_core/contrib/image/ops/gen_image_ops.py": [
      "tensorflow_core.contrib.image.ops.gen_image_ops.BipartiteMatch",
      "tensorflow_core.contrib.image.ops.gen_image_ops.ImageConnectedComponents",
      "tensorflow_core.contrib.image.ops.gen_image_ops.ImageProjectiveTransform",
      "tensorflow_core.contrib.image.ops.gen_image_ops.ImageProjectiveTransformV2",
      "tensorflow_core.contrib.image.ops.gen_image_ops.bipartite_match",
      "tensorflow_core.contrib.image.ops.gen_image_ops.bipartite_match_eager_fallback",
      "tensorflow_core.contrib.image.ops.gen_image_ops.image_connected_components",
      "tensorflow_core.contrib.image.ops.gen_image_ops.image_connected_components_eager_fallback",
      "tensorflow_core.contrib.image.ops.gen_image_ops.image_projective_transform",
      "tensorflow_core.contrib.image.ops.gen_image_ops.image_projective_transform_eager_fallback",
      "tensorflow_core.contrib.image.ops.gen_image_ops.image_projective_transform_v2",
      "tensorflow_core.contrib.image.ops.gen_image_ops.image_projective_transform_v2_eager_fallback"
    ],
    "tensorflow_core/contrib/image/ops/gen_single_image_random_dot_stereograms_ops.py": [
      "tensorflow_core.contrib.image.ops.gen_single_image_random_dot_stereograms_ops.SingleImageRandomDotStereograms",
      "tensorflow_core.contrib.image.ops.gen_single_image_random_dot_stereograms_ops.single_image_random_dot_stereograms",
      "tensorflow_core.contrib.image.ops.gen_single_image_random_dot_stereograms_ops.single_image_random_dot_stereograms_eager_fallback"
    ],
    "tensorflow_core/contrib/image/python/__init__.py": [],
    "tensorflow_core/contrib/image/python/ops/__init__.py": [],
    "tensorflow_core/contrib/image/python/ops/dense_image_warp.py": [
      "tensorflow_core.contrib.image.python.ops.dense_image_warp.dense_image_warp"
    ],
    "tensorflow_core/contrib/image/python/ops/distort_image_ops.py": [
      "tensorflow_core.contrib.image.python.ops.distort_image_ops.adjust_hsv_in_yiq",
      "tensorflow_core.contrib.image.python.ops.distort_image_ops.random_hsv_in_yiq"
    ],
    "tensorflow_core/contrib/image/python/ops/image_ops.py": [
      "tensorflow_core.contrib.image.python.ops.image_ops.angles_to_projective_transforms",
      "tensorflow_core.contrib.image.python.ops.image_ops.bipartite_match",
      "tensorflow_core.contrib.image.python.ops.image_ops.compose_transforms",
      "tensorflow_core.contrib.image.python.ops.image_ops.connected_components",
      "tensorflow_core.contrib.image.python.ops.image_ops.flat_transforms_to_matrices",
      "tensorflow_core.contrib.image.python.ops.image_ops.matrices_to_flat_transforms",
      "tensorflow_core.contrib.image.python.ops.image_ops.rotate",
      "tensorflow_core.contrib.image.python.ops.image_ops.transform",
      "tensorflow_core.contrib.image.python.ops.image_ops.translate",
      "tensorflow_core.contrib.image.python.ops.image_ops.translations_to_projective_transforms"
    ],
    "tensorflow_core/contrib/image/python/ops/interpolate_spline.py": [
      "tensorflow_core.contrib.image.python.ops.interpolate_spline.EPSILON",
      "tensorflow_core.contrib.image.python.ops.interpolate_spline.interpolate_spline"
    ],
    "tensorflow_core/contrib/image/python/ops/single_image_random_dot_stereograms.py": [
      "tensorflow_core.contrib.image.python.ops.single_image_random_dot_stereograms.single_image_random_dot_stereograms"
    ],
    "tensorflow_core/contrib/image/python/ops/sparse_image_warp.py": [
      "tensorflow_core.contrib.image.python.ops.sparse_image_warp.sparse_image_warp"
    ],
    "tensorflow_core/contrib/input_pipeline/__init__.py": [],
    "tensorflow_core/contrib/input_pipeline/ops/__init__.py": [],
    "tensorflow_core/contrib/input_pipeline/ops/gen_input_pipeline_ops.py": [
      "tensorflow_core.contrib.input_pipeline.ops.gen_input_pipeline_ops.ObtainNext",
      "tensorflow_core.contrib.input_pipeline.ops.gen_input_pipeline_ops.obtain_next",
      "tensorflow_core.contrib.input_pipeline.ops.gen_input_pipeline_ops.obtain_next_eager_fallback"
    ],
    "tensorflow_core/contrib/input_pipeline/python/__init__.py": [],
    "tensorflow_core/contrib/input_pipeline/python/ops/__init__.py": [],
    "tensorflow_core/contrib/input_pipeline/python/ops/input_pipeline_ops.py": [
      "tensorflow_core.contrib.input_pipeline.python.ops.input_pipeline_ops.obtain_next",
      "tensorflow_core.contrib.input_pipeline.python.ops.input_pipeline_ops.seek_next"
    ],
    "tensorflow_core/contrib/input_pipeline/python/ops/input_pipeline_ops_test.py": [
      "tensorflow_core.contrib.input_pipeline.python.ops.input_pipeline_ops_test.InputPipelineOpsTest"
    ],
    "tensorflow_core/contrib/integrate/__init__.py": [],
    "tensorflow_core/contrib/integrate/python/__init__.py": [],
    "tensorflow_core/contrib/integrate/python/ops/__init__.py": [],
    "tensorflow_core/contrib/integrate/python/ops/odes.py": [
      "tensorflow_core.contrib.integrate.python.ops.odes.odeint",
      "tensorflow_core.contrib.integrate.python.ops.odes.odeint_fixed"
    ],
    "tensorflow_core/contrib/kafka/__init__.py": [],
    "tensorflow_core/contrib/kafka/python/__init__.py": [],
    "tensorflow_core/contrib/kafka/python/ops/__init__.py": [],
    "tensorflow_core/contrib/kafka/python/ops/gen_dataset_ops.py": [
      "tensorflow_core.contrib.kafka.python.ops.gen_dataset_ops.KafkaDataset",
      "tensorflow_core.contrib.kafka.python.ops.gen_dataset_ops.kafka_dataset",
      "tensorflow_core.contrib.kafka.python.ops.gen_dataset_ops.kafka_dataset_eager_fallback"
    ],
    "tensorflow_core/contrib/kafka/python/ops/kafka_dataset_ops.py": [
      "tensorflow_core.contrib.kafka.python.ops.kafka_dataset_ops.KafkaDataset"
    ],
    "tensorflow_core/contrib/kafka/python/ops/kafka_op_loader.py": [],
    "tensorflow_core/contrib/keras/__init__.py": [],
    "tensorflow_core/contrib/keras/api/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/activations/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/applications/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/applications/inception_v3/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/applications/mobilenet/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/applications/resnet50/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/applications/vgg16/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/applications/vgg19/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/applications/xception/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/backend/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/callbacks/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/constraints/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/datasets/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/datasets/boston_housing/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/datasets/cifar10/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/datasets/cifar100/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/datasets/imdb/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/datasets/mnist/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/datasets/reuters/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/initializers/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/layers/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/losses/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/metrics/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/models/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/optimizers/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/preprocessing/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/preprocessing/image/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/preprocessing/sequence/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/preprocessing/text/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/regularizers/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/utils/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/wrappers/__init__.py": [],
    "tensorflow_core/contrib/keras/api/keras/wrappers/scikit_learn/__init__.py": [],
    "tensorflow_core/contrib/kernel_methods/__init__.py": [],
    "tensorflow_core/contrib/kernel_methods/python/__init__.py": [],
    "tensorflow_core/contrib/kernel_methods/python/kernel_estimators.py": [
      "tensorflow_core.contrib.kernel_methods.python.kernel_estimators.KernelLinearClassifier"
    ],
    "tensorflow_core/contrib/kernel_methods/python/losses.py": [
      "tensorflow_core.contrib.kernel_methods.python.losses.sparse_multiclass_hinge_loss"
    ],
    "tensorflow_core/contrib/kernel_methods/python/mappers/__init__.py": [],
    "tensorflow_core/contrib/kernel_methods/python/mappers/dense_kernel_mapper.py": [
      "tensorflow_core.contrib.kernel_methods.python.mappers.dense_kernel_mapper.DenseKernelMapper",
      "tensorflow_core.contrib.kernel_methods.python.mappers.dense_kernel_mapper.InvalidShapeError"
    ],
    "tensorflow_core/contrib/kernel_methods/python/mappers/random_fourier_features.py": [
      "tensorflow_core.contrib.kernel_methods.python.mappers.random_fourier_features.RandomFourierFeatureMapper"
    ],
    "tensorflow_core/contrib/kinesis/__init__.py": [],
    "tensorflow_core/contrib/kinesis/python/__init__.py": [],
    "tensorflow_core/contrib/kinesis/python/ops/__init__.py": [],
    "tensorflow_core/contrib/kinesis/python/ops/gen_dataset_ops.py": [
      "tensorflow_core.contrib.kinesis.python.ops.gen_dataset_ops.KinesisDataset",
      "tensorflow_core.contrib.kinesis.python.ops.gen_dataset_ops.kinesis_dataset",
      "tensorflow_core.contrib.kinesis.python.ops.gen_dataset_ops.kinesis_dataset_eager_fallback"
    ],
    "tensorflow_core/contrib/kinesis/python/ops/kinesis_dataset_ops.py": [
      "tensorflow_core.contrib.kinesis.python.ops.kinesis_dataset_ops.KinesisDataset"
    ],
    "tensorflow_core/contrib/kinesis/python/ops/kinesis_op_loader.py": [],
    "tensorflow_core/contrib/labeled_tensor/__init__.py": [
      "tensorflow_core.contrib.labeled_tensor.__init__.Axes",
      "tensorflow_core.contrib.labeled_tensor.__init__.Axis",
      "tensorflow_core.contrib.labeled_tensor.__init__.AxisOrderError",
      "tensorflow_core.contrib.labeled_tensor.__init__.FixedLenFeature",
      "tensorflow_core.contrib.labeled_tensor.__init__.LabeledTensor",
      "tensorflow_core.contrib.labeled_tensor.__init__.ReshapeCoder",
      "tensorflow_core.contrib.labeled_tensor.__init__.abs",
      "tensorflow_core.contrib.labeled_tensor.__init__.acos",
      "tensorflow_core.contrib.labeled_tensor.__init__.add",
      "tensorflow_core.contrib.labeled_tensor.__init__.align",
      "tensorflow_core.contrib.labeled_tensor.__init__.as_axis",
      "tensorflow_core.contrib.labeled_tensor.__init__.asin",
      "tensorflow_core.contrib.labeled_tensor.__init__.atan",
      "tensorflow_core.contrib.labeled_tensor.__init__.axis_order_scope",
      "tensorflow_core.contrib.labeled_tensor.__init__.batch",
      "tensorflow_core.contrib.labeled_tensor.__init__.boolean_mask",
      "tensorflow_core.contrib.labeled_tensor.__init__.cast",
      "tensorflow_core.contrib.labeled_tensor.__init__.ceil",
      "tensorflow_core.contrib.labeled_tensor.__init__.check_axis_order",
      "tensorflow_core.contrib.labeled_tensor.__init__.concat",
      "tensorflow_core.contrib.labeled_tensor.__init__.constant",
      "tensorflow_core.contrib.labeled_tensor.__init__.convert_to_labeled_tensor",
      "tensorflow_core.contrib.labeled_tensor.__init__.cos",
      "tensorflow_core.contrib.labeled_tensor.__init__.define_binary_op",
      "tensorflow_core.contrib.labeled_tensor.__init__.define_reduce_op",
      "tensorflow_core.contrib.labeled_tensor.__init__.define_unary_op",
      "tensorflow_core.contrib.labeled_tensor.__init__.digamma",
      "tensorflow_core.contrib.labeled_tensor.__init__.div",
      "tensorflow_core.contrib.labeled_tensor.__init__.equal",
      "tensorflow_core.contrib.labeled_tensor.__init__.erf",
      "tensorflow_core.contrib.labeled_tensor.__init__.erfc",
      "tensorflow_core.contrib.labeled_tensor.__init__.exp",
      "tensorflow_core.contrib.labeled_tensor.__init__.expand_dims",
      "tensorflow_core.contrib.labeled_tensor.__init__.floor",
      "tensorflow_core.contrib.labeled_tensor.__init__.foldl",
      "tensorflow_core.contrib.labeled_tensor.__init__.greater",
      "tensorflow_core.contrib.labeled_tensor.__init__.greater_equal",
      "tensorflow_core.contrib.labeled_tensor.__init__.identity",
      "tensorflow_core.contrib.labeled_tensor.__init__.igamma",
      "tensorflow_core.contrib.labeled_tensor.__init__.igammac",
      "tensorflow_core.contrib.labeled_tensor.__init__.impose_axis_order",
      "tensorflow_core.contrib.labeled_tensor.__init__.less",
      "tensorflow_core.contrib.labeled_tensor.__init__.less_equal",
      "tensorflow_core.contrib.labeled_tensor.__init__.lgamma",
      "tensorflow_core.contrib.labeled_tensor.__init__.log",
      "tensorflow_core.contrib.labeled_tensor.__init__.logical_and",
      "tensorflow_core.contrib.labeled_tensor.__init__.logical_not",
      "tensorflow_core.contrib.labeled_tensor.__init__.logical_or",
      "tensorflow_core.contrib.labeled_tensor.__init__.logical_xor",
      "tensorflow_core.contrib.labeled_tensor.__init__.map_fn",
      "tensorflow_core.contrib.labeled_tensor.__init__.matmul",
      "tensorflow_core.contrib.labeled_tensor.__init__.maximum",
      "tensorflow_core.contrib.labeled_tensor.__init__.minimum",
      "tensorflow_core.contrib.labeled_tensor.__init__.mod",
      "tensorflow_core.contrib.labeled_tensor.__init__.mul",
      "tensorflow_core.contrib.labeled_tensor.__init__.neg",
      "tensorflow_core.contrib.labeled_tensor.__init__.not_equal",
      "tensorflow_core.contrib.labeled_tensor.__init__.ones_like",
      "tensorflow_core.contrib.labeled_tensor.__init__.pack",
      "tensorflow_core.contrib.labeled_tensor.__init__.pad",
      "tensorflow_core.contrib.labeled_tensor.__init__.parse_example",
      "tensorflow_core.contrib.labeled_tensor.__init__.parse_single_example",
      "tensorflow_core.contrib.labeled_tensor.__init__.placeholder",
      "tensorflow_core.contrib.labeled_tensor.__init__.polygamma",
      "tensorflow_core.contrib.labeled_tensor.__init__.pow",
      "tensorflow_core.contrib.labeled_tensor.__init__.random_crop",
      "tensorflow_core.contrib.labeled_tensor.__init__.reciprocal",
      "tensorflow_core.contrib.labeled_tensor.__init__.reduce_all",
      "tensorflow_core.contrib.labeled_tensor.__init__.reduce_any",
      "tensorflow_core.contrib.labeled_tensor.__init__.reduce_logsumexp",
      "tensorflow_core.contrib.labeled_tensor.__init__.reduce_max",
      "tensorflow_core.contrib.labeled_tensor.__init__.reduce_mean",
      "tensorflow_core.contrib.labeled_tensor.__init__.reduce_min",
      "tensorflow_core.contrib.labeled_tensor.__init__.reduce_prod",
      "tensorflow_core.contrib.labeled_tensor.__init__.reduce_sum",
      "tensorflow_core.contrib.labeled_tensor.__init__.rename_axis",
      "tensorflow_core.contrib.labeled_tensor.__init__.reshape",
      "tensorflow_core.contrib.labeled_tensor.__init__.round",
      "tensorflow_core.contrib.labeled_tensor.__init__.rsqrt",
      "tensorflow_core.contrib.labeled_tensor.__init__.select",
      "tensorflow_core.contrib.labeled_tensor.__init__.shuffle_batch",
      "tensorflow_core.contrib.labeled_tensor.__init__.sigmoid",
      "tensorflow_core.contrib.labeled_tensor.__init__.sign",
      "tensorflow_core.contrib.labeled_tensor.__init__.sin",
      "tensorflow_core.contrib.labeled_tensor.__init__.slice",
      "tensorflow_core.contrib.labeled_tensor.__init__.sqrt",
      "tensorflow_core.contrib.labeled_tensor.__init__.square",
      "tensorflow_core.contrib.labeled_tensor.__init__.squared_difference",
      "tensorflow_core.contrib.labeled_tensor.__init__.squeeze",
      "tensorflow_core.contrib.labeled_tensor.__init__.sub",
      "tensorflow_core.contrib.labeled_tensor.__init__.tan",
      "tensorflow_core.contrib.labeled_tensor.__init__.tanh",
      "tensorflow_core.contrib.labeled_tensor.__init__.tile",
      "tensorflow_core.contrib.labeled_tensor.__init__.transpose",
      "tensorflow_core.contrib.labeled_tensor.__init__.unpack",
      "tensorflow_core.contrib.labeled_tensor.__init__.verify_tensor_all_finite",
      "tensorflow_core.contrib.labeled_tensor.__init__.where",
      "tensorflow_core.contrib.labeled_tensor.__init__.zeros_like",
      "tensorflow_core.contrib.labeled_tensor.__init__.zeta"
    ],
    "tensorflow_core/contrib/labeled_tensor/python/__init__.py": [],
    "tensorflow_core/contrib/labeled_tensor/python/ops/__init__.py": [],
    "tensorflow_core/contrib/labeled_tensor/python/ops/_typecheck.py": [
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Collection",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Dict",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Error",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.List",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Mapping",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Optional",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Sequence",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Tuple",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Type",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.Union",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.accepts",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.register_type_abbreviation",
      "tensorflow_core.contrib.labeled_tensor.python.ops._typecheck.returns"
    ],
    "tensorflow_core/contrib/labeled_tensor/python/ops/core.py": [
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.Axes",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.Axis",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.AxisLike",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.AxisOrderError",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.AxisValue",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.DimensionLike",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.LabeledTensor",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.LabeledTensorLike",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.LabelsLike",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.Scalar",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.abs_function",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.acos",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.add",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.align",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.as_axis",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.asin",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.atan",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.axis_order_scope",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.ceil",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.check_axis_order",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.concat_axes",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.convert_to_labeled_tensor",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.cos",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.define_binary_op",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.define_unary_op",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.digamma",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.div",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.equal",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.erf",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.erfc",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.exp",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.expand_dims",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.floor",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.get_axis_order",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.greater",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.greater_equal",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.identity",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.igamma",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.igammac",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.impose_axis_order",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.less",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.less_equal",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.lgamma",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.log",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.logical_and",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.logical_not",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.logical_or",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.logical_xor",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.maximum",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.minimum",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.mod",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.mul",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.neg",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.not_equal",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.polygamma",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.pow_function",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.reciprocal",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.round_function",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.rsqrt",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.sigmoid",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.sign",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.sin",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.slice_function",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.sqrt",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.square",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.squared_difference",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.sub",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.tan",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.tanh",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.transpose",
      "tensorflow_core.contrib.labeled_tensor.python.ops.core.zeta"
    ],
    "tensorflow_core/contrib/labeled_tensor/python/ops/io_ops.py": [
      "tensorflow_core.contrib.labeled_tensor.python.ops.io_ops.FixedLenFeature",
      "tensorflow_core.contrib.labeled_tensor.python.ops.io_ops.parse_example",
      "tensorflow_core.contrib.labeled_tensor.python.ops.io_ops.parse_single_example",
      "tensorflow_core.contrib.labeled_tensor.python.ops.io_ops.placeholder"
    ],
    "tensorflow_core/contrib/labeled_tensor/python/ops/nn.py": [
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.crelu",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.elu",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.l2_loss",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.log_softmax",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.relu",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.relu6",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.sigmoid_cross_entropy_with_logits",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.softmax",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.softmax_cross_entropy_with_logits",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.softplus",
      "tensorflow_core.contrib.labeled_tensor.python.ops.nn.sparse_softmax_cross_entropy_with_logits"
    ],
    "tensorflow_core/contrib/labeled_tensor/python/ops/ops.py": [
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.ReduceAxes",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.ReduceAxis",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.batch",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.boolean_mask",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.cast",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.concat",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.constant",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.define_reduce_op",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.foldl",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.map_fn",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.matmul",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.ones_like",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.pack",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.pad",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.random_crop",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reduce_all",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reduce_any",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reduce_logsumexp",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reduce_max",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reduce_mean",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reduce_min",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reduce_prod",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reduce_sum",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.rename_axis",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.reshape",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.select",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.shuffle_batch",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.squeeze",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.tile",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.unpack",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.verify_tensor_all_finite",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.where",
      "tensorflow_core.contrib.labeled_tensor.python.ops.ops.zeros_like"
    ],
    "tensorflow_core/contrib/labeled_tensor/python/ops/sugar.py": [
      "tensorflow_core.contrib.labeled_tensor.python.ops.sugar.ReshapeCoder"
    ],
    "tensorflow_core/contrib/layers/__init__.py": [],
    "tensorflow_core/contrib/layers/ops/__init__.py": [],
    "tensorflow_core/contrib/layers/ops/gen_sparse_feature_cross_op.py": [
      "tensorflow_core.contrib.layers.ops.gen_sparse_feature_cross_op.SparseFeatureCross",
      "tensorflow_core.contrib.layers.ops.gen_sparse_feature_cross_op.SparseFeatureCrossV2",
      "tensorflow_core.contrib.layers.ops.gen_sparse_feature_cross_op.sparse_feature_cross",
      "tensorflow_core.contrib.layers.ops.gen_sparse_feature_cross_op.sparse_feature_cross_eager_fallback",
      "tensorflow_core.contrib.layers.ops.gen_sparse_feature_cross_op.sparse_feature_cross_v2",
      "tensorflow_core.contrib.layers.ops.gen_sparse_feature_cross_op.sparse_feature_cross_v2_eager_fallback"
    ],
    "tensorflow_core/contrib/layers/python/__init__.py": [],
    "tensorflow_core/contrib/layers/python/layers/__init__.py": [],
    "tensorflow_core/contrib/layers/python/layers/embedding_ops.py": [
      "tensorflow_core.contrib.layers.python.layers.embedding_ops.embedding_lookup_sparse_with_distributed_aggregation",
      "tensorflow_core.contrib.layers.python.layers.embedding_ops.embedding_lookup_unique",
      "tensorflow_core.contrib.layers.python.layers.embedding_ops.safe_embedding_lookup_sparse",
      "tensorflow_core.contrib.layers.python.layers.embedding_ops.scattered_embedding_lookup",
      "tensorflow_core.contrib.layers.python.layers.embedding_ops.scattered_embedding_lookup_sparse"
    ],
    "tensorflow_core/contrib/layers/python/layers/encoders.py": [
      "tensorflow_core.contrib.layers.python.layers.encoders.bow_encoder",
      "tensorflow_core.contrib.layers.python.layers.encoders.embed_sequence"
    ],
    "tensorflow_core/contrib/layers/python/layers/feature_column.py": [
      "tensorflow_core.contrib.layers.python.layers.feature_column.DataFrameColumn",
      "tensorflow_core.contrib.layers.python.layers.feature_column.InputLayer",
      "tensorflow_core.contrib.layers.python.layers.feature_column.bucketized_column",
      "tensorflow_core.contrib.layers.python.layers.feature_column.create_feature_spec_for_parsing",
      "tensorflow_core.contrib.layers.python.layers.feature_column.crossed_column",
      "tensorflow_core.contrib.layers.python.layers.feature_column.embedding_column",
      "tensorflow_core.contrib.layers.python.layers.feature_column.make_place_holder_tensors_for_base_features",
      "tensorflow_core.contrib.layers.python.layers.feature_column.one_hot_column",
      "tensorflow_core.contrib.layers.python.layers.feature_column.real_valued_column",
      "tensorflow_core.contrib.layers.python.layers.feature_column.scattered_embedding_column",
      "tensorflow_core.contrib.layers.python.layers.feature_column.shared_embedding_columns",
      "tensorflow_core.contrib.layers.python.layers.feature_column.sparse_column_with_hash_bucket",
      "tensorflow_core.contrib.layers.python.layers.feature_column.sparse_column_with_integerized_feature",
      "tensorflow_core.contrib.layers.python.layers.feature_column.sparse_column_with_keys",
      "tensorflow_core.contrib.layers.python.layers.feature_column.sparse_column_with_vocabulary_file",
      "tensorflow_core.contrib.layers.python.layers.feature_column.weighted_sparse_column"
    ],
    "tensorflow_core/contrib/layers/python/layers/feature_column_ops.py": [
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.check_feature_columns",
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.infer_real_valued_columns",
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.input_from_feature_columns",
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.joint_weighted_sum_from_feature_columns",
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.parse_feature_columns_from_examples",
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.parse_feature_columns_from_sequence_examples",
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.sequence_input_from_feature_columns",
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.transform_features",
      "tensorflow_core.contrib.layers.python.layers.feature_column_ops.weighted_sum_from_feature_columns"
    ],
    "tensorflow_core/contrib/layers/python/layers/initializers.py": [
      "tensorflow_core.contrib.layers.python.layers.initializers.variance_scaling_initializer",
      "tensorflow_core.contrib.layers.python.layers.initializers.xavier_initializer",
      "tensorflow_core.contrib.layers.python.layers.initializers.xavier_initializer_conv2d"
    ],
    "tensorflow_core/contrib/layers/python/layers/layers.py": [
      "tensorflow_core.contrib.layers.python.layers.layers.DATA_FORMAT_NCDHW",
      "tensorflow_core.contrib.layers.python.layers.layers.DATA_FORMAT_NCHW",
      "tensorflow_core.contrib.layers.python.layers.layers.DATA_FORMAT_NDHWC",
      "tensorflow_core.contrib.layers.python.layers.layers.DATA_FORMAT_NHWC",
      "tensorflow_core.contrib.layers.python.layers.layers.GDN",
      "tensorflow_core.contrib.layers.python.layers.layers.avg_pool2d",
      "tensorflow_core.contrib.layers.python.layers.layers.avg_pool3d",
      "tensorflow_core.contrib.layers.python.layers.layers.batch_norm",
      "tensorflow_core.contrib.layers.python.layers.layers.bias_add",
      "tensorflow_core.contrib.layers.python.layers.layers.conv1d",
      "tensorflow_core.contrib.layers.python.layers.layers.conv2d",
      "tensorflow_core.contrib.layers.python.layers.layers.conv2d_in_plane",
      "tensorflow_core.contrib.layers.python.layers.layers.conv2d_transpose",
      "tensorflow_core.contrib.layers.python.layers.layers.conv3d",
      "tensorflow_core.contrib.layers.python.layers.layers.conv3d_transpose",
      "tensorflow_core.contrib.layers.python.layers.layers.convolution",
      "tensorflow_core.contrib.layers.python.layers.layers.convolution1d",
      "tensorflow_core.contrib.layers.python.layers.layers.convolution2d",
      "tensorflow_core.contrib.layers.python.layers.layers.convolution2d_in_plane",
      "tensorflow_core.contrib.layers.python.layers.layers.convolution2d_transpose",
      "tensorflow_core.contrib.layers.python.layers.layers.convolution3d",
      "tensorflow_core.contrib.layers.python.layers.layers.convolution3d_transpose",
      "tensorflow_core.contrib.layers.python.layers.layers.dense_to_sparse",
      "tensorflow_core.contrib.layers.python.layers.layers.dropout",
      "tensorflow_core.contrib.layers.python.layers.layers.elu",
      "tensorflow_core.contrib.layers.python.layers.layers.flatten",
      "tensorflow_core.contrib.layers.python.layers.layers.fully_connected",
      "tensorflow_core.contrib.layers.python.layers.layers.gdn",
      "tensorflow_core.contrib.layers.python.layers.layers.images_to_sequence",
      "tensorflow_core.contrib.layers.python.layers.layers.layer_norm",
      "tensorflow_core.contrib.layers.python.layers.layers.legacy_fully_connected",
      "tensorflow_core.contrib.layers.python.layers.layers.legacy_linear",
      "tensorflow_core.contrib.layers.python.layers.layers.legacy_relu",
      "tensorflow_core.contrib.layers.python.layers.layers.linear",
      "tensorflow_core.contrib.layers.python.layers.layers.max_pool2d",
      "tensorflow_core.contrib.layers.python.layers.layers.max_pool3d",
      "tensorflow_core.contrib.layers.python.layers.layers.maxout",
      "tensorflow_core.contrib.layers.python.layers.layers.one_hot_encoding",
      "tensorflow_core.contrib.layers.python.layers.layers.poincare_normalize",
      "tensorflow_core.contrib.layers.python.layers.layers.pool",
      "tensorflow_core.contrib.layers.python.layers.layers.relu",
      "tensorflow_core.contrib.layers.python.layers.layers.relu6",
      "tensorflow_core.contrib.layers.python.layers.layers.repeat",
      "tensorflow_core.contrib.layers.python.layers.layers.scale_gradient",
      "tensorflow_core.contrib.layers.python.layers.layers.separable_conv2d",
      "tensorflow_core.contrib.layers.python.layers.layers.separable_convolution2d",
      "tensorflow_core.contrib.layers.python.layers.layers.sequence_to_images",
      "tensorflow_core.contrib.layers.python.layers.layers.softmax",
      "tensorflow_core.contrib.layers.python.layers.layers.spatial_softmax",
      "tensorflow_core.contrib.layers.python.layers.layers.stack",
      "tensorflow_core.contrib.layers.python.layers.layers.unit_norm"
    ],
    "tensorflow_core/contrib/layers/python/layers/normalization.py": [
      "tensorflow_core.contrib.layers.python.layers.normalization.DATA_FORMAT_NCHW",
      "tensorflow_core.contrib.layers.python.layers.normalization.DATA_FORMAT_NHWC",
      "tensorflow_core.contrib.layers.python.layers.normalization.group_norm",
      "tensorflow_core.contrib.layers.python.layers.normalization.instance_norm"
    ],
    "tensorflow_core/contrib/layers/python/layers/optimizers.py": [
      "tensorflow_core.contrib.layers.python.layers.optimizers.OPTIMIZER_CLS_NAMES",
      "tensorflow_core.contrib.layers.python.layers.optimizers.OPTIMIZER_SUMMARIES",
      "tensorflow_core.contrib.layers.python.layers.optimizers.adaptive_clipping_fn",
      "tensorflow_core.contrib.layers.python.layers.optimizers.optimize_loss"
    ],
    "tensorflow_core/contrib/layers/python/layers/regularizers.py": [
      "tensorflow_core.contrib.layers.python.layers.regularizers.apply_regularization",
      "tensorflow_core.contrib.layers.python.layers.regularizers.l1_l2_regularizer",
      "tensorflow_core.contrib.layers.python.layers.regularizers.l1_regularizer",
      "tensorflow_core.contrib.layers.python.layers.regularizers.l2_regularizer",
      "tensorflow_core.contrib.layers.python.layers.regularizers.sum_regularizer"
    ],
    "tensorflow_core/contrib/layers/python/layers/rev_block_lib.py": [
      "tensorflow_core.contrib.layers.python.layers.rev_block_lib.LAYER_RE",
      "tensorflow_core.contrib.layers.python.layers.rev_block_lib.RevBlock",
      "tensorflow_core.contrib.layers.python.layers.rev_block_lib.enable_with_args",
      "tensorflow_core.contrib.layers.python.layers.rev_block_lib.recompute_grad",
      "tensorflow_core.contrib.layers.python.layers.rev_block_lib.rev_block"
    ],
    "tensorflow_core/contrib/layers/python/layers/summaries.py": [
      "tensorflow_core.contrib.layers.python.layers.summaries.summarize_activation",
      "tensorflow_core.contrib.layers.python.layers.summaries.summarize_activations",
      "tensorflow_core.contrib.layers.python.layers.summaries.summarize_biases",
      "tensorflow_core.contrib.layers.python.layers.summaries.summarize_collection",
      "tensorflow_core.contrib.layers.python.layers.summaries.summarize_tensor",
      "tensorflow_core.contrib.layers.python.layers.summaries.summarize_tensors",
      "tensorflow_core.contrib.layers.python.layers.summaries.summarize_variables",
      "tensorflow_core.contrib.layers.python.layers.summaries.summarize_weights"
    ],
    "tensorflow_core/contrib/layers/python/layers/target_column.py": [
      "tensorflow_core.contrib.layers.python.layers.target_column.ProblemType",
      "tensorflow_core.contrib.layers.python.layers.target_column.binary_svm_target",
      "tensorflow_core.contrib.layers.python.layers.target_column.get_default_binary_metrics_for_eval",
      "tensorflow_core.contrib.layers.python.layers.target_column.multi_class_target",
      "tensorflow_core.contrib.layers.python.layers.target_column.regression_target"
    ],
    "tensorflow_core/contrib/layers/python/layers/utils.py": [
      "tensorflow_core.contrib.layers.python.layers.utils.NamedOutputs",
      "tensorflow_core.contrib.layers.python.layers.utils.append_tensor_alias",
      "tensorflow_core.contrib.layers.python.layers.utils.channel_dimension",
      "tensorflow_core.contrib.layers.python.layers.utils.collect_named_outputs",
      "tensorflow_core.contrib.layers.python.layers.utils.constant_value",
      "tensorflow_core.contrib.layers.python.layers.utils.convert_collection_to_dict",
      "tensorflow_core.contrib.layers.python.layers.utils.gather_tensors_aliases",
      "tensorflow_core.contrib.layers.python.layers.utils.get_tensor_aliases",
      "tensorflow_core.contrib.layers.python.layers.utils.get_variable_collections",
      "tensorflow_core.contrib.layers.python.layers.utils.last_dimension",
      "tensorflow_core.contrib.layers.python.layers.utils.n_positive_integers",
      "tensorflow_core.contrib.layers.python.layers.utils.smart_cond",
      "tensorflow_core.contrib.layers.python.layers.utils.static_cond",
      "tensorflow_core.contrib.layers.python.layers.utils.two_element_tuple"
    ],
    "tensorflow_core/contrib/layers/python/ops/__init__.py": [],
    "tensorflow_core/contrib/layers/python/ops/bucketization_op.py": [
      "tensorflow_core.contrib.layers.python.ops.bucketization_op.bucketize"
    ],
    "tensorflow_core/contrib/layers/python/ops/sparse_feature_cross_op.py": [
      "tensorflow_core.contrib.layers.python.ops.sparse_feature_cross_op.SPARSE_FEATURE_CROSS_DEFAULT_HASH_KEY",
      "tensorflow_core.contrib.layers.python.ops.sparse_feature_cross_op.sparse_feature_cross"
    ],
    "tensorflow_core/contrib/layers/python/ops/sparse_ops.py": [
      "tensorflow_core.contrib.layers.python.ops.sparse_ops.dense_to_sparse_tensor",
      "tensorflow_core.contrib.layers.python.ops.sparse_ops.indicators_to_sparse_ids",
      "tensorflow_core.contrib.layers.python.ops.sparse_ops.sparse_row_envelope"
    ],
    "tensorflow_core/contrib/learn/__init__.py": [],
    "tensorflow_core/contrib/learn/python/__init__.py": [],
    "tensorflow_core/contrib/learn/python/learn/__init__.py": [],
    "tensorflow_core/contrib/learn/python/learn/basic_session_run_hooks.py": [
      "tensorflow_core.contrib.learn.python.learn.basic_session_run_hooks.CheckpointSaverHook",
      "tensorflow_core.contrib.learn.python.learn.basic_session_run_hooks.LoggingTensorHook",
      "tensorflow_core.contrib.learn.python.learn.basic_session_run_hooks.NanLossDuringTrainingError",
      "tensorflow_core.contrib.learn.python.learn.basic_session_run_hooks.NanTensorHook",
      "tensorflow_core.contrib.learn.python.learn.basic_session_run_hooks.StepCounterHook",
      "tensorflow_core.contrib.learn.python.learn.basic_session_run_hooks.StopAtStepHook",
      "tensorflow_core.contrib.learn.python.learn.basic_session_run_hooks.SummarySaverHook"
    ],
    "tensorflow_core/contrib/learn/python/learn/datasets/__init__.py": [
      "tensorflow_core.contrib.learn.python.learn.datasets.__init__.DATASETS",
      "tensorflow_core.contrib.learn.python.learn.datasets.__init__.SYNTHETIC",
      "tensorflow_core.contrib.learn.python.learn.datasets.__init__.load_boston",
      "tensorflow_core.contrib.learn.python.learn.datasets.__init__.load_dataset",
      "tensorflow_core.contrib.learn.python.learn.datasets.__init__.load_iris",
      "tensorflow_core.contrib.learn.python.learn.datasets.__init__.make_dataset"
    ],
    "tensorflow_core/contrib/learn/python/learn/datasets/base.py": [
      "tensorflow_core.contrib.learn.python.learn.datasets.base.Dataset",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.Datasets",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.load_boston",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.load_csv_with_header",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.load_csv_without_header",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.load_iris",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.maybe_download",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.retry",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.shrink_csv",
      "tensorflow_core.contrib.learn.python.learn.datasets.base.urlretrieve_with_retry"
    ],
    "tensorflow_core/contrib/learn/python/learn/datasets/mnist.py": [
      "tensorflow_core.contrib.learn.python.learn.datasets.mnist.DEFAULT_SOURCE_URL",
      "tensorflow_core.contrib.learn.python.learn.datasets.mnist.DataSet",
      "tensorflow_core.contrib.learn.python.learn.datasets.mnist.dense_to_one_hot",
      "tensorflow_core.contrib.learn.python.learn.datasets.mnist.extract_images",
      "tensorflow_core.contrib.learn.python.learn.datasets.mnist.extract_labels",
      "tensorflow_core.contrib.learn.python.learn.datasets.mnist.load_mnist",
      "tensorflow_core.contrib.learn.python.learn.datasets.mnist.read_data_sets"
    ],
    "tensorflow_core/contrib/learn/python/learn/datasets/produce_small_datasets.py": [
      "tensorflow_core.contrib.learn.python.learn.datasets.produce_small_datasets.main"
    ],
    "tensorflow_core/contrib/learn/python/learn/datasets/synthetic.py": [
      "tensorflow_core.contrib.learn.python.learn.datasets.synthetic.circles",
      "tensorflow_core.contrib.learn.python.learn.datasets.synthetic.spirals"
    ],
    "tensorflow_core/contrib/learn/python/learn/datasets/text_datasets.py": [
      "tensorflow_core.contrib.learn.python.learn.datasets.text_datasets.DBPEDIA_URL",
      "tensorflow_core.contrib.learn.python.learn.datasets.text_datasets.load_dbpedia",
      "tensorflow_core.contrib.learn.python.learn.datasets.text_datasets.maybe_download_dbpedia"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/__init__.py": [],
    "tensorflow_core/contrib/learn/python/learn/estimators/_sklearn.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators._sklearn.NotFittedError",
      "tensorflow_core.contrib.learn.python.learn.estimators._sklearn.TRY_IMPORT_SKLEARN"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/composable_model.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.composable_model.DNNComposableModel",
      "tensorflow_core.contrib.learn.python.learn.estimators.composable_model.LinearComposableModel"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/constants.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.constants.COLLECTION_DEF_KEY_FOR_INPUT_FEATURE_KEYS",
      "tensorflow_core.contrib.learn.python.learn.estimators.constants.ProblemType"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/debug.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.debug.DebugClassifier",
      "tensorflow_core.contrib.learn.python.learn.estimators.debug.DebugRegressor",
      "tensorflow_core.contrib.learn.python.learn.estimators.debug.debug_model_fn"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/dnn.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.dnn.DNNClassifier",
      "tensorflow_core.contrib.learn.python.learn.estimators.dnn.DNNEstimator",
      "tensorflow_core.contrib.learn.python.learn.estimators.dnn.DNNRegressor"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/dnn_linear_combined.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedClassifier",
      "tensorflow_core.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedEstimator",
      "tensorflow_core.contrib.learn.python.learn.estimators.dnn_linear_combined.DNNLinearCombinedRegressor"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/dynamic_rnn_estimator.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.DynamicRnnEstimator",
      "tensorflow_core.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.PredictionType",
      "tensorflow_core.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.build_sequence_input",
      "tensorflow_core.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.construct_rnn",
      "tensorflow_core.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.dict_to_state_tuple",
      "tensorflow_core.contrib.learn.python.learn.estimators.dynamic_rnn_estimator.state_tuple_to_dict"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/estimator.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_DATE",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.AS_ITERABLE_INSTRUCTIONS",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.BaseEstimator",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.Estimator",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.GraphRewriteSpec",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.SCIKIT_DECOUPLE_DATE",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.SCIKIT_DECOUPLE_INSTRUCTIONS",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.SKCompat",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.infer_real_valued_columns_from_input",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator.infer_real_valued_columns_from_input_fn"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/estimator_test_utils.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator_test_utils.assert_estimator_contract",
      "tensorflow_core.contrib.learn.python.learn.estimators.estimator_test_utils.assert_in_range"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/head.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.head.Head",
      "tensorflow_core.contrib.learn.python.learn.estimators.head.binary_svm_head",
      "tensorflow_core.contrib.learn.python.learn.estimators.head.loss_only_head",
      "tensorflow_core.contrib.learn.python.learn.estimators.head.multi_class_head",
      "tensorflow_core.contrib.learn.python.learn.estimators.head.multi_head",
      "tensorflow_core.contrib.learn.python.learn.estimators.head.multi_label_head",
      "tensorflow_core.contrib.learn.python.learn.estimators.head.no_op_train_fn",
      "tensorflow_core.contrib.learn.python.learn.estimators.head.poisson_regression_head",
      "tensorflow_core.contrib.learn.python.learn.estimators.head.regression_head"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/head_test.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.head_test.BinaryClassificationHeadTest",
      "tensorflow_core.contrib.learn.python.learn.estimators.head_test.BinarySvmHeadTest",
      "tensorflow_core.contrib.learn.python.learn.estimators.head_test.LossOnlyHead",
      "tensorflow_core.contrib.learn.python.learn.estimators.head_test.MultiClassHeadTest",
      "tensorflow_core.contrib.learn.python.learn.estimators.head_test.MultiHeadTest",
      "tensorflow_core.contrib.learn.python.learn.estimators.head_test.MultiLabelHeadTest",
      "tensorflow_core.contrib.learn.python.learn.estimators.head_test.PoissonHeadTest",
      "tensorflow_core.contrib.learn.python.learn.estimators.head_test.RegressionHeadTest"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/kmeans.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.kmeans.KMeansClustering"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/linear.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.linear.LinearClassifier",
      "tensorflow_core.contrib.learn.python.learn.estimators.linear.LinearEstimator",
      "tensorflow_core.contrib.learn.python.learn.estimators.linear.LinearRegressor",
      "tensorflow_core.contrib.learn.python.learn.estimators.linear.sdca_model_fn"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/logistic_regressor.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.logistic_regressor.LogisticRegressor"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/metric_key.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.metric_key.MetricKey"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/model_fn.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.model_fn.ModeKeys",
      "tensorflow_core.contrib.learn.python.learn.estimators.model_fn.ModelFnOps"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/prediction_key.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.prediction_key.PredictionKey"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/rnn_common.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.rnn_common.PredictionType",
      "tensorflow_core.contrib.learn.python.learn.estimators.rnn_common.RNNKeys",
      "tensorflow_core.contrib.learn.python.learn.estimators.rnn_common.apply_dropout",
      "tensorflow_core.contrib.learn.python.learn.estimators.rnn_common.construct_rnn_cell",
      "tensorflow_core.contrib.learn.python.learn.estimators.rnn_common.get_eval_metric_ops",
      "tensorflow_core.contrib.learn.python.learn.estimators.rnn_common.mask_activations_and_labels",
      "tensorflow_core.contrib.learn.python.learn.estimators.rnn_common.multi_value_predictions",
      "tensorflow_core.contrib.learn.python.learn.estimators.rnn_common.select_last_activations"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/run_config.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.run_config.ClusterConfig",
      "tensorflow_core.contrib.learn.python.learn.estimators.run_config.Environment",
      "tensorflow_core.contrib.learn.python.learn.estimators.run_config.RunConfig",
      "tensorflow_core.contrib.learn.python.learn.estimators.run_config.TaskType"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/state_saving_rnn_estimator.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.state_saving_rnn_estimator.StateSavingRnnEstimator",
      "tensorflow_core.contrib.learn.python.learn.estimators.state_saving_rnn_estimator.construct_state_saving_rnn",
      "tensorflow_core.contrib.learn.python.learn.estimators.state_saving_rnn_estimator.state_tuple_to_dict"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/svm.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.svm.SVM"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/tensor_signature.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.tensor_signature.TensorSignature",
      "tensorflow_core.contrib.learn.python.learn.estimators.tensor_signature.create_example_parser_from_signatures",
      "tensorflow_core.contrib.learn.python.learn.estimators.tensor_signature.create_placeholders_from_signatures",
      "tensorflow_core.contrib.learn.python.learn.estimators.tensor_signature.create_signatures",
      "tensorflow_core.contrib.learn.python.learn.estimators.tensor_signature.tensors_compatible"
    ],
    "tensorflow_core/contrib/learn/python/learn/estimators/test_data.py": [
      "tensorflow_core.contrib.learn.python.learn.estimators.test_data.get_quantile_based_buckets",
      "tensorflow_core.contrib.learn.python.learn.estimators.test_data.iris_input_logistic_fn",
      "tensorflow_core.contrib.learn.python.learn.estimators.test_data.iris_input_multiclass_fn",
      "tensorflow_core.contrib.learn.python.learn.estimators.test_data.prepare_iris_data_for_logistic_regression"
    ],
    "tensorflow_core/contrib/learn/python/learn/evaluable.py": [
      "tensorflow_core.contrib.learn.python.learn.evaluable.Evaluable"
    ],
    "tensorflow_core/contrib/learn/python/learn/experiment.py": [
      "tensorflow_core.contrib.learn.python.learn.experiment.Experiment"
    ],
    "tensorflow_core/contrib/learn/python/learn/export_strategy.py": [
      "tensorflow_core.contrib.learn.python.learn.export_strategy.ExportStrategy"
    ],
    "tensorflow_core/contrib/learn/python/learn/graph_actions.py": [
      "tensorflow_core.contrib.learn.python.learn.graph_actions.clear_summary_writers",
      "tensorflow_core.contrib.learn.python.learn.graph_actions.evaluate",
      "tensorflow_core.contrib.learn.python.learn.graph_actions.get_summary_writer",
      "tensorflow_core.contrib.learn.python.learn.graph_actions.infer",
      "tensorflow_core.contrib.learn.python.learn.graph_actions.run_feeds",
      "tensorflow_core.contrib.learn.python.learn.graph_actions.run_feeds_iter",
      "tensorflow_core.contrib.learn.python.learn.graph_actions.run_n",
      "tensorflow_core.contrib.learn.python.learn.graph_actions.train"
    ],
    "tensorflow_core/contrib/learn/python/learn/learn_io/__init__.py": [],
    "tensorflow_core/contrib/learn/python/learn/learn_io/dask_io.py": [
      "tensorflow_core.contrib.learn.python.learn.learn_io.dask_io.extract_dask_data",
      "tensorflow_core.contrib.learn.python.learn.learn_io.dask_io.extract_dask_labels"
    ],
    "tensorflow_core/contrib/learn/python/learn/learn_io/data_feeder.py": [
      "tensorflow_core.contrib.learn.python.learn.learn_io.data_feeder.DaskDataFeeder",
      "tensorflow_core.contrib.learn.python.learn.learn_io.data_feeder.DataFeeder",
      "tensorflow_core.contrib.learn.python.learn.learn_io.data_feeder.StreamingDataFeeder",
      "tensorflow_core.contrib.learn.python.learn.learn_io.data_feeder.check_array",
      "tensorflow_core.contrib.learn.python.learn.learn_io.data_feeder.setup_predict_data_feeder",
      "tensorflow_core.contrib.learn.python.learn.learn_io.data_feeder.setup_processor_data_feeder",
      "tensorflow_core.contrib.learn.python.learn.learn_io.data_feeder.setup_train_data_feeder"
    ],
    "tensorflow_core/contrib/learn/python/learn/learn_io/generator_io.py": [
      "tensorflow_core.contrib.learn.python.learn.learn_io.generator_io.generator_input_fn"
    ],
    "tensorflow_core/contrib/learn/python/learn/learn_io/graph_io.py": [
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.KEY_FEATURE_NAME",
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.queue_parsed_features",
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.read_batch_examples",
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.read_batch_features",
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.read_batch_record_features",
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_examples",
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_examples_shared_queue",
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_features",
      "tensorflow_core.contrib.learn.python.learn.learn_io.graph_io.read_keyed_batch_features_shared_queue"
    ],
    "tensorflow_core/contrib/learn/python/learn/learn_io/numpy_io.py": [
      "tensorflow_core.contrib.learn.python.learn.learn_io.numpy_io.numpy_input_fn"
    ],
    "tensorflow_core/contrib/learn/python/learn/learn_io/pandas_io.py": [
      "tensorflow_core.contrib.learn.python.learn.learn_io.pandas_io.PANDAS_DTYPES",
      "tensorflow_core.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_data",
      "tensorflow_core.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_labels",
      "tensorflow_core.contrib.learn.python.learn.learn_io.pandas_io.extract_pandas_matrix",
      "tensorflow_core.contrib.learn.python.learn.learn_io.pandas_io.pandas_input_fn"
    ],
    "tensorflow_core/contrib/learn/python/learn/learn_runner.py": [
      "tensorflow_core.contrib.learn.python.learn.learn_runner.run",
      "tensorflow_core.contrib.learn.python.learn.learn_runner.tune"
    ],
    "tensorflow_core/contrib/learn/python/learn/learn_runner_lib.py": [],
    "tensorflow_core/contrib/learn/python/learn/metric_spec.py": [
      "tensorflow_core.contrib.learn.python.learn.metric_spec.MetricSpec"
    ],
    "tensorflow_core/contrib/learn/python/learn/models.py": [
      "tensorflow_core.contrib.learn.python.learn.models.bidirectional_rnn",
      "tensorflow_core.contrib.learn.python.learn.models.get_rnn_model",
      "tensorflow_core.contrib.learn.python.learn.models.linear_regression",
      "tensorflow_core.contrib.learn.python.learn.models.linear_regression_zero_init",
      "tensorflow_core.contrib.learn.python.learn.models.logistic_regression",
      "tensorflow_core.contrib.learn.python.learn.models.logistic_regression_zero_init"
    ],
    "tensorflow_core/contrib/learn/python/learn/monitored_session.py": [
      "tensorflow_core.contrib.learn.python.learn.monitored_session.ChiefSessionCreator",
      "tensorflow_core.contrib.learn.python.learn.monitored_session.MonitoredSession",
      "tensorflow_core.contrib.learn.python.learn.monitored_session.Scaffold",
      "tensorflow_core.contrib.learn.python.learn.monitored_session.SessionCreator",
      "tensorflow_core.contrib.learn.python.learn.monitored_session.WorkerSessionCreator"
    ],
    "tensorflow_core/contrib/learn/python/learn/monitors.py": [
      "tensorflow_core.contrib.learn.python.learn.monitors.BaseMonitor",
      "tensorflow_core.contrib.learn.python.learn.monitors.CaptureVariable",
      "tensorflow_core.contrib.learn.python.learn.monitors.CheckpointSaver",
      "tensorflow_core.contrib.learn.python.learn.monitors.EveryN",
      "tensorflow_core.contrib.learn.python.learn.monitors.ExportMonitor",
      "tensorflow_core.contrib.learn.python.learn.monitors.GraphDump",
      "tensorflow_core.contrib.learn.python.learn.monitors.LoggingTrainable",
      "tensorflow_core.contrib.learn.python.learn.monitors.NanLoss",
      "tensorflow_core.contrib.learn.python.learn.monitors.NanLossDuringTrainingError",
      "tensorflow_core.contrib.learn.python.learn.monitors.PrintTensor",
      "tensorflow_core.contrib.learn.python.learn.monitors.RunHookAdapterForMonitors",
      "tensorflow_core.contrib.learn.python.learn.monitors.StepCounter",
      "tensorflow_core.contrib.learn.python.learn.monitors.StopAtStep",
      "tensorflow_core.contrib.learn.python.learn.monitors.SummarySaver",
      "tensorflow_core.contrib.learn.python.learn.monitors.ValidationMonitor",
      "tensorflow_core.contrib.learn.python.learn.monitors.get_default_monitors",
      "tensorflow_core.contrib.learn.python.learn.monitors.replace_monitors_with_hooks"
    ],
    "tensorflow_core/contrib/learn/python/learn/ops/__init__.py": [],
    "tensorflow_core/contrib/learn/python/learn/ops/embeddings_ops.py": [
      "tensorflow_core.contrib.learn.python.learn.ops.embeddings_ops.categorical_variable",
      "tensorflow_core.contrib.learn.python.learn.ops.embeddings_ops.embedding_lookup"
    ],
    "tensorflow_core/contrib/learn/python/learn/ops/losses_ops.py": [
      "tensorflow_core.contrib.learn.python.learn.ops.losses_ops.mean_squared_error_regressor",
      "tensorflow_core.contrib.learn.python.learn.ops.losses_ops.softmax_classifier"
    ],
    "tensorflow_core/contrib/learn/python/learn/ops/seq2seq_ops.py": [
      "tensorflow_core.contrib.learn.python.learn.ops.seq2seq_ops.rnn_decoder",
      "tensorflow_core.contrib.learn.python.learn.ops.seq2seq_ops.rnn_seq2seq",
      "tensorflow_core.contrib.learn.python.learn.ops.seq2seq_ops.seq2seq_inputs",
      "tensorflow_core.contrib.learn.python.learn.ops.seq2seq_ops.sequence_classifier"
    ],
    "tensorflow_core/contrib/learn/python/learn/preprocessing/__init__.py": [],
    "tensorflow_core/contrib/learn/python/learn/preprocessing/categorical.py": [
      "tensorflow_core.contrib.learn.python.learn.preprocessing.categorical.CategoricalProcessor"
    ],
    "tensorflow_core/contrib/learn/python/learn/preprocessing/categorical_vocabulary.py": [
      "tensorflow_core.contrib.learn.python.learn.preprocessing.categorical_vocabulary.CategoricalVocabulary"
    ],
    "tensorflow_core/contrib/learn/python/learn/preprocessing/tests/__init__.py": [],
    "tensorflow_core/contrib/learn/python/learn/preprocessing/text.py": [
      "tensorflow_core.contrib.learn.python.learn.preprocessing.text.ByteProcessor",
      "tensorflow_core.contrib.learn.python.learn.preprocessing.text.TOKENIZER_RE",
      "tensorflow_core.contrib.learn.python.learn.preprocessing.text.VocabularyProcessor",
      "tensorflow_core.contrib.learn.python.learn.preprocessing.text.tokenizer"
    ],
    "tensorflow_core/contrib/learn/python/learn/session_run_hook.py": [
      "tensorflow_core.contrib.learn.python.learn.session_run_hook.SessionRunArgs",
      "tensorflow_core.contrib.learn.python.learn.session_run_hook.SessionRunContext",
      "tensorflow_core.contrib.learn.python.learn.session_run_hook.SessionRunHook",
      "tensorflow_core.contrib.learn.python.learn.session_run_hook.SessionRunValues"
    ],
    "tensorflow_core/contrib/learn/python/learn/summary_writer_cache.py": [
      "tensorflow_core.contrib.learn.python.learn.summary_writer_cache.SummaryWriterCache",
      "tensorflow_core.contrib.learn.python.learn.summary_writer_cache.clear_summary_writers",
      "tensorflow_core.contrib.learn.python.learn.summary_writer_cache.get_summary_writer"
    ],
    "tensorflow_core/contrib/learn/python/learn/trainable.py": [
      "tensorflow_core.contrib.learn.python.learn.trainable.Trainable"
    ],
    "tensorflow_core/contrib/learn/python/learn/utils/__init__.py": [],
    "tensorflow_core/contrib/learn/python/learn/utils/export.py": [
      "tensorflow_core.contrib.learn.python.learn.utils.export.classification_signature_fn",
      "tensorflow_core.contrib.learn.python.learn.utils.export.classification_signature_fn_with_prob",
      "tensorflow_core.contrib.learn.python.learn.utils.export.export_estimator",
      "tensorflow_core.contrib.learn.python.learn.utils.export.generic_signature_fn",
      "tensorflow_core.contrib.learn.python.learn.utils.export.logistic_regression_signature_fn",
      "tensorflow_core.contrib.learn.python.learn.utils.export.regression_signature_fn"
    ],
    "tensorflow_core/contrib/learn/python/learn/utils/gc.py": [
      "tensorflow_core.contrib.learn.python.learn.utils.gc.Path",
      "tensorflow_core.contrib.learn.python.learn.utils.gc.get_paths",
      "tensorflow_core.contrib.learn.python.learn.utils.gc.largest_export_versions",
      "tensorflow_core.contrib.learn.python.learn.utils.gc.mod_export_version",
      "tensorflow_core.contrib.learn.python.learn.utils.gc.negation",
      "tensorflow_core.contrib.learn.python.learn.utils.gc.one_of_every_n_export_versions",
      "tensorflow_core.contrib.learn.python.learn.utils.gc.union"
    ],
    "tensorflow_core/contrib/learn/python/learn/utils/input_fn_utils.py": [
      "tensorflow_core.contrib.learn.python.learn.utils.input_fn_utils.InputFnOps",
      "tensorflow_core.contrib.learn.python.learn.utils.input_fn_utils.build_default_serving_input_fn",
      "tensorflow_core.contrib.learn.python.learn.utils.input_fn_utils.build_parsing_serving_input_fn"
    ],
    "tensorflow_core/contrib/learn/python/learn/utils/inspect_checkpoint.py": [
      "tensorflow_core.contrib.learn.python.learn.utils.inspect_checkpoint.FLAGS",
      "tensorflow_core.contrib.learn.python.learn.utils.inspect_checkpoint.main",
      "tensorflow_core.contrib.learn.python.learn.utils.inspect_checkpoint.print_tensors_in_checkpoint_file"
    ],
    "tensorflow_core/contrib/learn/python/learn/utils/saved_model_export_utils.py": [
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.BestModelSelector",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.DEFAULT_INPUT_ALTERNATIVE_KEY",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.FEATURES_INPUT_ALTERNATIVE_KEY",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.MAX_DIRECTORY_CREATION_ATTEMPTS",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.build_all_signature_defs",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.build_standardized_signature_def",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.extend_export_strategy",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.garbage_collect_exports",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.get_input_alternatives",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.get_most_recent_export",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.get_output_alternatives",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.get_temp_export_dir",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.get_timestamped_export_dir",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.make_best_model_export_strategy",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.make_export_strategy",
      "tensorflow_core.contrib.learn.python.learn.utils.saved_model_export_utils.make_parsing_export_strategy"
    ],
    "tensorflow_core/contrib/legacy_seq2seq/__init__.py": [],
    "tensorflow_core/contrib/legacy_seq2seq/python/__init__.py": [],
    "tensorflow_core/contrib/legacy_seq2seq/python/ops/__init__.py": [],
    "tensorflow_core/contrib/legacy_seq2seq/python/ops/seq2seq.py": [
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.Linear",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.attention_decoder",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.basic_rnn_seq2seq",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.embedding_attention_decoder",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.embedding_attention_seq2seq",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.embedding_rnn_decoder",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.embedding_rnn_seq2seq",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.embedding_tied_rnn_seq2seq",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.model_with_buckets",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.one2many_rnn_seq2seq",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.rnn_decoder",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.sequence_loss",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.sequence_loss_by_example",
      "tensorflow_core.contrib.legacy_seq2seq.python.ops.seq2seq.tied_rnn_seq2seq"
    ],
    "tensorflow_core/contrib/libsvm/__init__.py": [],
    "tensorflow_core/contrib/libsvm/ops/__init__.py": [],
    "tensorflow_core/contrib/libsvm/ops/gen_libsvm_ops.py": [
      "tensorflow_core.contrib.libsvm.ops.gen_libsvm_ops.DecodeLibsvm",
      "tensorflow_core.contrib.libsvm.ops.gen_libsvm_ops.decode_libsvm",
      "tensorflow_core.contrib.libsvm.ops.gen_libsvm_ops.decode_libsvm_eager_fallback"
    ],
    "tensorflow_core/contrib/libsvm/python/__init__.py": [],
    "tensorflow_core/contrib/libsvm/python/ops/__init__.py": [],
    "tensorflow_core/contrib/libsvm/python/ops/libsvm_ops.py": [
      "tensorflow_core.contrib.libsvm.python.ops.libsvm_ops.decode_libsvm"
    ],
    "tensorflow_core/contrib/linear_optimizer/__init__.py": [],
    "tensorflow_core/contrib/linear_optimizer/python/__init__.py": [],
    "tensorflow_core/contrib/linear_optimizer/python/ops/__init__.py": [],
    "tensorflow_core/contrib/linear_optimizer/python/ops/sdca_ops.py": [
      "tensorflow_core.contrib.linear_optimizer.python.ops.sdca_ops.SdcaModel"
    ],
    "tensorflow_core/contrib/linear_optimizer/python/ops/sharded_mutable_dense_hashtable.py": [
      "tensorflow_core.contrib.linear_optimizer.python.ops.sharded_mutable_dense_hashtable.ShardedMutableDenseHashTable"
    ],
    "tensorflow_core/contrib/linear_optimizer/python/ops/sparse_feature_column.py": [
      "tensorflow_core.contrib.linear_optimizer.python.ops.sparse_feature_column.SparseFeatureColumn"
    ],
    "tensorflow_core/contrib/linear_optimizer/python/sdca_estimator.py": [
      "tensorflow_core.contrib.linear_optimizer.python.sdca_estimator.SDCALinearRegressor",
      "tensorflow_core.contrib.linear_optimizer.python.sdca_estimator.SDCALogisticClassifier",
      "tensorflow_core.contrib.linear_optimizer.python.sdca_estimator.sdca_model_fn"
    ],
    "tensorflow_core/contrib/linear_optimizer/python/sdca_optimizer.py": [
      "tensorflow_core.contrib.linear_optimizer.python.sdca_optimizer.SDCAOptimizer"
    ],
    "tensorflow_core/contrib/lookup/__init__.py": [],
    "tensorflow_core/contrib/lookup/lookup_ops.py": [
      "tensorflow_core.contrib.lookup.lookup_ops.HashTable",
      "tensorflow_core.contrib.lookup.lookup_ops.MutableDenseHashTable",
      "tensorflow_core.contrib.lookup.lookup_ops.MutableHashTable",
      "tensorflow_core.contrib.lookup.lookup_ops.index_table_from_tensor",
      "tensorflow_core.contrib.lookup.lookup_ops.index_to_string",
      "tensorflow_core.contrib.lookup.lookup_ops.index_to_string_table_from_tensor",
      "tensorflow_core.contrib.lookup.lookup_ops.string_to_index",
      "tensorflow_core.contrib.lookup.lookup_ops.string_to_index_table_from_file",
      "tensorflow_core.contrib.lookup.lookup_ops.string_to_index_table_from_tensor"
    ],
    "tensorflow_core/contrib/losses/__init__.py": [],
    "tensorflow_core/contrib/losses/python/__init__.py": [],
    "tensorflow_core/contrib/losses/python/losses/__init__.py": [],
    "tensorflow_core/contrib/losses/python/losses/loss_ops.py": [
      "tensorflow_core.contrib.losses.python.losses.loss_ops.absolute_difference",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.add_loss",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.compute_weighted_loss",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.cosine_distance",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.get_losses",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.get_regularization_losses",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.get_total_loss",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.hinge_loss",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.log_loss",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.mean_pairwise_squared_error",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.mean_squared_error",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.sigmoid_cross_entropy",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.softmax_cross_entropy",
      "tensorflow_core.contrib.losses.python.losses.loss_ops.sparse_softmax_cross_entropy"
    ],
    "tensorflow_core/contrib/losses/python/metric_learning/__init__.py": [],
    "tensorflow_core/contrib/losses/python/metric_learning/metric_loss_ops.py": [
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.cluster_loss",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.compute_augmented_facility_locations",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.compute_augmented_facility_locations_pam",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.compute_clustering_score",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.compute_facility_energy",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.compute_gt_cluster_score",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.contrastive_loss",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.get_cluster_assignment",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.lifted_struct_loss",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.masked_maximum",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.masked_minimum",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.npairs_loss",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.npairs_loss_multilabel",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.pairwise_distance",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.triplet_semihard_loss",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.update_1d_tensor",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.update_all_medoids",
      "tensorflow_core.contrib.losses.python.metric_learning.metric_loss_ops.update_medoid_per_cluster"
    ],
    "tensorflow_core/contrib/memory_stats/__init__.py": [],
    "tensorflow_core/contrib/memory_stats/ops/__init__.py": [],
    "tensorflow_core/contrib/memory_stats/ops/gen_memory_stats_ops.py": [
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.BytesInUse",
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.BytesLimit",
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.MaxBytesInUse",
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.bytes_in_use",
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.bytes_in_use_eager_fallback",
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.bytes_limit",
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.bytes_limit_eager_fallback",
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.max_bytes_in_use",
      "tensorflow_core.contrib.memory_stats.ops.gen_memory_stats_ops.max_bytes_in_use_eager_fallback"
    ],
    "tensorflow_core/contrib/memory_stats/python/__init__.py": [],
    "tensorflow_core/contrib/memory_stats/python/ops/__init__.py": [],
    "tensorflow_core/contrib/memory_stats/python/ops/memory_stats_ops.py": [
      "tensorflow_core.contrib.memory_stats.python.ops.memory_stats_ops.BytesInUse",
      "tensorflow_core.contrib.memory_stats.python.ops.memory_stats_ops.BytesLimit",
      "tensorflow_core.contrib.memory_stats.python.ops.memory_stats_ops.MaxBytesInUse"
    ],
    "tensorflow_core/contrib/meta_graph_transform/__init__.py": [],
    "tensorflow_core/contrib/meta_graph_transform/meta_graph_transform.py": [
      "tensorflow_core.contrib.meta_graph_transform.meta_graph_transform.meta_graph_transform"
    ],
    "tensorflow_core/contrib/metrics/__init__.py": [],
    "tensorflow_core/contrib/metrics/python/__init__.py": [],
    "tensorflow_core/contrib/metrics/python/metrics/__init__.py": [],
    "tensorflow_core/contrib/metrics/python/metrics/classification.py": [
      "tensorflow_core.contrib.metrics.python.metrics.classification.accuracy",
      "tensorflow_core.contrib.metrics.python.metrics.classification.f1_score"
    ],
    "tensorflow_core/contrib/metrics/python/ops/__init__.py": [],
    "tensorflow_core/contrib/metrics/python/ops/confusion_matrix_ops.py": [
      "tensorflow_core.contrib.metrics.python.ops.confusion_matrix_ops.confusion_matrix"
    ],
    "tensorflow_core/contrib/metrics/python/ops/histogram_ops.py": [
      "tensorflow_core.contrib.metrics.python.ops.histogram_ops.auc_using_histogram"
    ],
    "tensorflow_core/contrib/metrics/python/ops/metric_ops.py": [
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.aggregate_metric_map",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.aggregate_metrics",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.auc_with_confidence_intervals",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.cohen_kappa",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.count",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.precision_at_recall",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.precision_recall_at_equal_thresholds",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.recall_at_precision",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.sparse_recall_at_top_k",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_accuracy",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_auc",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_concat",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_covariance",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_curve_points",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_dynamic_auc",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_false_negative_rate",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_false_negative_rate_at_thresholds",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_false_negatives",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_false_negatives_at_thresholds",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_false_positive_rate",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_false_positive_rate_at_thresholds",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_false_positives",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_false_positives_at_thresholds",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_mean",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_mean_absolute_error",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_mean_cosine_distance",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_mean_iou",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_mean_relative_error",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_mean_squared_error",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_mean_tensor",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_pearson_correlation",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_percentage_less",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_precision",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_precision_at_thresholds",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_recall",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_recall_at_k",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_recall_at_thresholds",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_root_mean_squared_error",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_sensitivity_at_specificity",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_sparse_average_precision_at_k",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_sparse_average_precision_at_top_k",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_sparse_precision_at_k",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_sparse_precision_at_top_k",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_sparse_recall_at_k",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_specificity_at_sensitivity",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_true_negatives",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_true_negatives_at_thresholds",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_true_positives",
      "tensorflow_core.contrib.metrics.python.ops.metric_ops.streaming_true_positives_at_thresholds"
    ],
    "tensorflow_core/contrib/metrics/python/ops/set_ops.py": [
      "tensorflow_core.contrib.metrics.python.ops.set_ops.set_difference",
      "tensorflow_core.contrib.metrics.python.ops.set_ops.set_intersection",
      "tensorflow_core.contrib.metrics.python.ops.set_ops.set_size",
      "tensorflow_core.contrib.metrics.python.ops.set_ops.set_union"
    ],
    "tensorflow_core/contrib/mixed_precision/__init__.py": [],
    "tensorflow_core/contrib/mixed_precision/python/__init__.py": [],
    "tensorflow_core/contrib/mixed_precision/python/loss_scale_manager.py": [
      "tensorflow_core.contrib.mixed_precision.python.loss_scale_manager.ExponentialUpdateLossScaleManager",
      "tensorflow_core.contrib.mixed_precision.python.loss_scale_manager.FixedLossScaleManager",
      "tensorflow_core.contrib.mixed_precision.python.loss_scale_manager.LossScaleManager"
    ],
    "tensorflow_core/contrib/mixed_precision/python/loss_scale_optimizer.py": [
      "tensorflow_core.contrib.mixed_precision.python.loss_scale_optimizer.LossScaleOptimizer"
    ],
    "tensorflow_core/contrib/model_pruning/__init__.py": [],
    "tensorflow_core/contrib/model_pruning/python/__init__.py": [],
    "tensorflow_core/contrib/model_pruning/python/layers/__init__.py": [],
    "tensorflow_core/contrib/model_pruning/python/layers/core_layers.py": [
      "tensorflow_core.contrib.model_pruning.python.layers.core_layers.MASKED_WEIGHT_COLLECTION",
      "tensorflow_core.contrib.model_pruning.python.layers.core_layers.MASKED_WEIGHT_NAME",
      "tensorflow_core.contrib.model_pruning.python.layers.core_layers.MASK_COLLECTION",
      "tensorflow_core.contrib.model_pruning.python.layers.core_layers.MaskedConv2D",
      "tensorflow_core.contrib.model_pruning.python.layers.core_layers.MaskedFullyConnected",
      "tensorflow_core.contrib.model_pruning.python.layers.core_layers.THRESHOLD_COLLECTION",
      "tensorflow_core.contrib.model_pruning.python.layers.core_layers.WEIGHT_COLLECTION"
    ],
    "tensorflow_core/contrib/model_pruning/python/layers/layers.py": [
      "tensorflow_core.contrib.model_pruning.python.layers.layers.masked_conv2d",
      "tensorflow_core.contrib.model_pruning.python.layers.layers.masked_convolution",
      "tensorflow_core.contrib.model_pruning.python.layers.layers.masked_fully_connected"
    ],
    "tensorflow_core/contrib/model_pruning/python/layers/rnn_cells.py": [
      "tensorflow_core.contrib.model_pruning.python.layers.rnn_cells.MaskedBasicLSTMCell",
      "tensorflow_core.contrib.model_pruning.python.layers.rnn_cells.MaskedLSTMCell"
    ],
    "tensorflow_core/contrib/model_pruning/python/learning.py": [
      "tensorflow_core.contrib.model_pruning.python.learning.train",
      "tensorflow_core.contrib.model_pruning.python.learning.train_step"
    ],
    "tensorflow_core/contrib/model_pruning/python/pruning.py": [
      "tensorflow_core.contrib.model_pruning.python.pruning.Pruning",
      "tensorflow_core.contrib.model_pruning.python.pruning.apply_mask",
      "tensorflow_core.contrib.model_pruning.python.pruning.get_masked_weights",
      "tensorflow_core.contrib.model_pruning.python.pruning.get_masks",
      "tensorflow_core.contrib.model_pruning.python.pruning.get_pruning_hparams",
      "tensorflow_core.contrib.model_pruning.python.pruning.get_thresholds",
      "tensorflow_core.contrib.model_pruning.python.pruning.get_weight_sparsity",
      "tensorflow_core.contrib.model_pruning.python.pruning.get_weights"
    ],
    "tensorflow_core/contrib/model_pruning/python/pruning_utils.py": [
      "tensorflow_core.contrib.model_pruning.python.pruning_utils.determine_partitioned_axis",
      "tensorflow_core.contrib.model_pruning.python.pruning_utils.expand_tensor",
      "tensorflow_core.contrib.model_pruning.python.pruning_utils.factorized_pool",
      "tensorflow_core.contrib.model_pruning.python.pruning_utils.kronecker_product",
      "tensorflow_core.contrib.model_pruning.python.pruning_utils.partitioned_variable_assign",
      "tensorflow_core.contrib.model_pruning.python.pruning_utils.variable_assign",
      "tensorflow_core.contrib.model_pruning.python.pruning_utils.weight_mask_variable",
      "tensorflow_core.contrib.model_pruning.python.pruning_utils.weight_threshold_variable"
    ],
    "tensorflow_core/contrib/model_pruning/python/strip_pruning_vars_lib.py": [
      "tensorflow_core.contrib.model_pruning.python.strip_pruning_vars_lib.graph_def_from_checkpoint",
      "tensorflow_core.contrib.model_pruning.python.strip_pruning_vars_lib.strip_pruning_vars_fn"
    ],
    "tensorflow_core/contrib/nearest_neighbor/__init__.py": [],
    "tensorflow_core/contrib/nearest_neighbor/python/__init__.py": [],
    "tensorflow_core/contrib/nearest_neighbor/python/ops/__init__.py": [],
    "tensorflow_core/contrib/nearest_neighbor/python/ops/nearest_neighbor_ops.py": [
      "tensorflow_core.contrib.nearest_neighbor.python.ops.nearest_neighbor_ops.hyperplane_lsh_probes"
    ],
    "tensorflow_core/contrib/nn/__init__.py": [],
    "tensorflow_core/contrib/nn/python/__init__.py": [],
    "tensorflow_core/contrib/nn/python/ops/__init__.py": [],
    "tensorflow_core/contrib/nn/python/ops/alpha_dropout.py": [
      "tensorflow_core.contrib.nn.python.ops.alpha_dropout.alpha_dropout"
    ],
    "tensorflow_core/contrib/nn/python/ops/cross_entropy.py": [
      "tensorflow_core.contrib.nn.python.ops.cross_entropy.deprecated_flipped_sigmoid_cross_entropy_with_logits",
      "tensorflow_core.contrib.nn.python.ops.cross_entropy.deprecated_flipped_softmax_cross_entropy_with_logits",
      "tensorflow_core.contrib.nn.python.ops.cross_entropy.deprecated_flipped_sparse_softmax_cross_entropy_with_logits"
    ],
    "tensorflow_core/contrib/nn/python/ops/fwd_gradients.py": [
      "tensorflow_core.contrib.nn.python.ops.fwd_gradients.fwd_gradients"
    ],
    "tensorflow_core/contrib/nn/python/ops/sampling_ops.py": [
      "tensorflow_core.contrib.nn.python.ops.sampling_ops.rank_sampled_softmax_loss",
      "tensorflow_core.contrib.nn.python.ops.sampling_ops.sampled_sparse_softmax_loss"
    ],
    "tensorflow_core/contrib/nn/python/ops/scaled_softplus.py": [
      "tensorflow_core.contrib.nn.python.ops.scaled_softplus.scaled_softplus"
    ],
    "tensorflow_core/contrib/opt/__init__.py": [],
    "tensorflow_core/contrib/opt/python/__init__.py": [],
    "tensorflow_core/contrib/opt/python/training/__init__.py": [],
    "tensorflow_core/contrib/opt/python/training/adam_gs_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.adam_gs_optimizer.AdamGSOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/adamax.py": [
      "tensorflow_core.contrib.opt.python.training.adamax.AdaMaxOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/addsign.py": [
      "tensorflow_core.contrib.opt.python.training.addsign.AddSignOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/agn_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.agn_optimizer.AGNCustomGetter",
      "tensorflow_core.contrib.opt.python.training.agn_optimizer.AGNOptimizer",
      "tensorflow_core.contrib.opt.python.training.agn_optimizer.GLOBAL_VARIABLE_NAME",
      "tensorflow_core.contrib.opt.python.training.agn_optimizer.GRAD_VARIABLE_NAME"
    ],
    "tensorflow_core/contrib/opt/python/training/drop_stale_gradient_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.drop_stale_gradient_optimizer.DropStaleGradientOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/elastic_average_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.elastic_average_optimizer.ElasticAverageCustomGetter",
      "tensorflow_core.contrib.opt.python.training.elastic_average_optimizer.ElasticAverageOptimizer",
      "tensorflow_core.contrib.opt.python.training.elastic_average_optimizer.GLOBAL_STEP",
      "tensorflow_core.contrib.opt.python.training.elastic_average_optimizer.GLOBAL_VARIABLE_NAME",
      "tensorflow_core.contrib.opt.python.training.elastic_average_optimizer.LOCAL_VARIABLE_NAME"
    ],
    "tensorflow_core/contrib/opt/python/training/external_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.external_optimizer.ExternalOptimizerInterface",
      "tensorflow_core.contrib.opt.python.training.external_optimizer.ScipyOptimizerInterface"
    ],
    "tensorflow_core/contrib/opt/python/training/ggt.py": [
      "tensorflow_core.contrib.opt.python.training.ggt.GGTOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/lars_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.lars_optimizer.LARSOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/lazy_adam_gs_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.lazy_adam_gs_optimizer.LazyAdamGSOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/lazy_adam_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.lazy_adam_optimizer.LazyAdamOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/matrix_functions.py": [
      "tensorflow_core.contrib.opt.python.training.matrix_functions.matrix_inverse_pth_root",
      "tensorflow_core.contrib.opt.python.training.matrix_functions.matrix_square_root"
    ],
    "tensorflow_core/contrib/opt/python/training/model_average_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.model_average_optimizer.GLOBAL_VARIABLE_NAME",
      "tensorflow_core.contrib.opt.python.training.model_average_optimizer.ModelAverageCustomGetter",
      "tensorflow_core.contrib.opt.python.training.model_average_optimizer.ModelAverageOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/moving_average_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.moving_average_optimizer.MovingAverageOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/multitask_optimizer_wrapper.py": [
      "tensorflow_core.contrib.opt.python.training.multitask_optimizer_wrapper.MultitaskOptimizerWrapper",
      "tensorflow_core.contrib.opt.python.training.multitask_optimizer_wrapper.clip_gradients_by_global_norm"
    ],
    "tensorflow_core/contrib/opt/python/training/nadam_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.nadam_optimizer.NadamOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/powersign.py": [
      "tensorflow_core.contrib.opt.python.training.powersign.PowerSignOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/reg_adagrad_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.reg_adagrad_optimizer.RegAdagradOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/shampoo.py": [
      "tensorflow_core.contrib.opt.python.training.shampoo.GetParam",
      "tensorflow_core.contrib.opt.python.training.shampoo.ShampooOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/sign_decay.py": [
      "tensorflow_core.contrib.opt.python.training.sign_decay.get_cosine_decay_fn",
      "tensorflow_core.contrib.opt.python.training.sign_decay.get_linear_decay_fn",
      "tensorflow_core.contrib.opt.python.training.sign_decay.get_restart_decay_fn"
    ],
    "tensorflow_core/contrib/opt/python/training/variable_clipping_optimizer.py": [
      "tensorflow_core.contrib.opt.python.training.variable_clipping_optimizer.VariableClippingOptimizer"
    ],
    "tensorflow_core/contrib/opt/python/training/weight_decay_optimizers.py": [
      "tensorflow_core.contrib.opt.python.training.weight_decay_optimizers.AdamWOptimizer",
      "tensorflow_core.contrib.opt.python.training.weight_decay_optimizers.DecoupledWeightDecayExtension",
      "tensorflow_core.contrib.opt.python.training.weight_decay_optimizers.MomentumWOptimizer",
      "tensorflow_core.contrib.opt.python.training.weight_decay_optimizers.ShampooWOptimizer",
      "tensorflow_core.contrib.opt.python.training.weight_decay_optimizers.extend_with_decoupled_weight_decay"
    ],
    "tensorflow_core/contrib/optimizer_v2/__init__.py": [],
    "tensorflow_core/contrib/optimizer_v2/adadelta.py": [
      "tensorflow_core.contrib.optimizer_v2.adadelta.AdadeltaOptimizer"
    ],
    "tensorflow_core/contrib/optimizer_v2/adagrad.py": [
      "tensorflow_core.contrib.optimizer_v2.adagrad.AdagradOptimizer"
    ],
    "tensorflow_core/contrib/optimizer_v2/adam.py": [
      "tensorflow_core.contrib.optimizer_v2.adam.AdamOptimizer"
    ],
    "tensorflow_core/contrib/optimizer_v2/gradient_descent.py": [
      "tensorflow_core.contrib.optimizer_v2.gradient_descent.GradientDescentOptimizer"
    ],
    "tensorflow_core/contrib/optimizer_v2/momentum.py": [
      "tensorflow_core.contrib.optimizer_v2.momentum.MomentumOptimizer"
    ],
    "tensorflow_core/contrib/optimizer_v2/optimizer_v2.py": [
      "tensorflow_core.contrib.optimizer_v2.optimizer_v2.OptimizerV2"
    ],
    "tensorflow_core/contrib/optimizer_v2/optimizer_v2_symbols.py": [],
    "tensorflow_core/contrib/optimizer_v2/rmsprop.py": [
      "tensorflow_core.contrib.optimizer_v2.rmsprop.RMSPropOptimizer"
    ],
    "tensorflow_core/contrib/periodic_resample/__init__.py": [],
    "tensorflow_core/contrib/periodic_resample/python/__init__.py": [],
    "tensorflow_core/contrib/periodic_resample/python/ops/__init__.py": [],
    "tensorflow_core/contrib/periodic_resample/python/ops/gen_periodic_resample_op.py": [
      "tensorflow_core.contrib.periodic_resample.python.ops.gen_periodic_resample_op.PeriodicResample",
      "tensorflow_core.contrib.periodic_resample.python.ops.gen_periodic_resample_op.PeriodicResampleOpGrad",
      "tensorflow_core.contrib.periodic_resample.python.ops.gen_periodic_resample_op.periodic_resample",
      "tensorflow_core.contrib.periodic_resample.python.ops.gen_periodic_resample_op.periodic_resample_eager_fallback",
      "tensorflow_core.contrib.periodic_resample.python.ops.gen_periodic_resample_op.periodic_resample_op_grad",
      "tensorflow_core.contrib.periodic_resample.python.ops.gen_periodic_resample_op.periodic_resample_op_grad_eager_fallback"
    ],
    "tensorflow_core/contrib/periodic_resample/python/ops/periodic_resample_op.py": [],
    "tensorflow_core/contrib/predictor/__init__.py": [],
    "tensorflow_core/contrib/predictor/contrib_estimator_predictor.py": [
      "tensorflow_core.contrib.predictor.contrib_estimator_predictor.ContribEstimatorPredictor"
    ],
    "tensorflow_core/contrib/predictor/core_estimator_predictor.py": [
      "tensorflow_core.contrib.predictor.core_estimator_predictor.CoreEstimatorPredictor"
    ],
    "tensorflow_core/contrib/predictor/predictor.py": [
      "tensorflow_core.contrib.predictor.predictor.Predictor"
    ],
    "tensorflow_core/contrib/predictor/predictor_factories.py": [
      "tensorflow_core.contrib.predictor.predictor_factories.from_contrib_estimator",
      "tensorflow_core.contrib.predictor.predictor_factories.from_estimator",
      "tensorflow_core.contrib.predictor.predictor_factories.from_saved_model"
    ],
    "tensorflow_core/contrib/predictor/saved_model_predictor.py": [
      "tensorflow_core.contrib.predictor.saved_model_predictor.DEFAULT_TAGS",
      "tensorflow_core.contrib.predictor.saved_model_predictor.SavedModelPredictor",
      "tensorflow_core.contrib.predictor.saved_model_predictor.get_meta_graph_def"
    ],
    "tensorflow_core/contrib/proto/__init__.py": [],
    "tensorflow_core/contrib/proto/python/__init__.py": [],
    "tensorflow_core/contrib/proto/python/ops/__init__.py": [],
    "tensorflow_core/contrib/proto/python/ops/decode_proto_op.py": [],
    "tensorflow_core/contrib/proto/python/ops/encode_proto_op.py": [],
    "tensorflow_core/contrib/quantization/__init__.py": [],
    "tensorflow_core/contrib/quantization/python/__init__.py": [],
    "tensorflow_core/contrib/quantization/python/array_ops.py": [],
    "tensorflow_core/contrib/quantization/python/math_ops.py": [],
    "tensorflow_core/contrib/quantization/python/nn_ops.py": [],
    "tensorflow_core/contrib/quantize/__init__.py": [],
    "tensorflow_core/contrib/quantize/python/__init__.py": [],
    "tensorflow_core/contrib/quantize/python/common.py": [
      "tensorflow_core.contrib.quantize.python.common.BatchNormGroups",
      "tensorflow_core.contrib.quantize.python.common.CreateOrGetQuantizationStep",
      "tensorflow_core.contrib.quantize.python.common.DropStringPrefix",
      "tensorflow_core.contrib.quantize.python.common.GetEndpointActivationOp",
      "tensorflow_core.contrib.quantize.python.common.RerouteTensor",
      "tensorflow_core.contrib.quantize.python.common.SKIPPED_PREFIXES"
    ],
    "tensorflow_core/contrib/quantize/python/fold_batch_norms.py": [
      "tensorflow_core.contrib.quantize.python.fold_batch_norms.FoldBatchNorms"
    ],
    "tensorflow_core/contrib/quantize/python/graph_matcher.py": [
      "tensorflow_core.contrib.quantize.python.graph_matcher.GraphMatcher",
      "tensorflow_core.contrib.quantize.python.graph_matcher.MatchResult",
      "tensorflow_core.contrib.quantize.python.graph_matcher.OneofPattern",
      "tensorflow_core.contrib.quantize.python.graph_matcher.OpTypePattern",
      "tensorflow_core.contrib.quantize.python.graph_matcher.Pattern"
    ],
    "tensorflow_core/contrib/quantize/python/input_to_ops.py": [
      "tensorflow_core.contrib.quantize.python.input_to_ops.InputToOps"
    ],
    "tensorflow_core/contrib/quantize/python/quant_ops.py": [
      "tensorflow_core.contrib.quantize.python.quant_ops.FixedQuantize",
      "tensorflow_core.contrib.quantize.python.quant_ops.LastValueQuantize",
      "tensorflow_core.contrib.quantize.python.quant_ops.MovingAvgQuantize"
    ],
    "tensorflow_core/contrib/quantize/python/quantize.py": [
      "tensorflow_core.contrib.quantize.python.quantize.Quantize"
    ],
    "tensorflow_core/contrib/quantize/python/quantize_graph.py": [
      "tensorflow_core.contrib.quantize.python.quantize_graph.create_eval_graph",
      "tensorflow_core.contrib.quantize.python.quantize_graph.create_training_graph",
      "tensorflow_core.contrib.quantize.python.quantize_graph.experimental_create_eval_graph",
      "tensorflow_core.contrib.quantize.python.quantize_graph.experimental_create_training_graph"
    ],
    "tensorflow_core/contrib/receptive_field/__init__.py": [],
    "tensorflow_core/contrib/receptive_field/python/__init__.py": [],
    "tensorflow_core/contrib/receptive_field/python/util/__init__.py": [],
    "tensorflow_core/contrib/receptive_field/python/util/graph_compute_order.py": [
      "tensorflow_core.contrib.receptive_field.python.util.graph_compute_order.get_compute_order",
      "tensorflow_core.contrib.receptive_field.python.util.graph_compute_order.parse_graph_nodes"
    ],
    "tensorflow_core/contrib/receptive_field/python/util/parse_layer_parameters.py": [
      "tensorflow_core.contrib.receptive_field.python.util.parse_layer_parameters.get_layer_params"
    ],
    "tensorflow_core/contrib/receptive_field/python/util/receptive_field.py": [
      "tensorflow_core.contrib.receptive_field.python.util.receptive_field.ReceptiveField",
      "tensorflow_core.contrib.receptive_field.python.util.receptive_field.compute_receptive_field_from_graph_def"
    ],
    "tensorflow_core/contrib/receptive_field/receptive_field_api.py": [],
    "tensorflow_core/contrib/recurrent/__init__.py": [],
    "tensorflow_core/contrib/recurrent/python/__init__.py": [],
    "tensorflow_core/contrib/recurrent/python/ops/__init__.py": [],
    "tensorflow_core/contrib/recurrent/python/ops/functional_rnn.py": [
      "tensorflow_core.contrib.recurrent.python.ops.functional_rnn.bidirectional_functional_rnn",
      "tensorflow_core.contrib.recurrent.python.ops.functional_rnn.functional_rnn"
    ],
    "tensorflow_core/contrib/recurrent/python/ops/recurrent.py": [
      "tensorflow_core.contrib.recurrent.python.ops.recurrent.Recurrent"
    ],
    "tensorflow_core/contrib/recurrent/python/recurrent_api.py": [],
    "tensorflow_core/contrib/reduce_slice_ops/__init__.py": [],
    "tensorflow_core/contrib/reduce_slice_ops/ops/__init__.py": [],
    "tensorflow_core/contrib/reduce_slice_ops/ops/gen_reduce_slice_ops.py": [
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.ReduceSliceMax",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.ReduceSliceMin",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.ReduceSliceProd",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.ReduceSliceSum",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.reduce_slice_max",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.reduce_slice_max_eager_fallback",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.reduce_slice_min",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.reduce_slice_min_eager_fallback",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.reduce_slice_prod",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.reduce_slice_prod_eager_fallback",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.reduce_slice_sum",
      "tensorflow_core.contrib.reduce_slice_ops.ops.gen_reduce_slice_ops.reduce_slice_sum_eager_fallback"
    ],
    "tensorflow_core/contrib/reduce_slice_ops/python/__init__.py": [],
    "tensorflow_core/contrib/reduce_slice_ops/python/ops/__init__.py": [],
    "tensorflow_core/contrib/reduce_slice_ops/python/ops/reduce_slice_ops.py": [
      "tensorflow_core.contrib.reduce_slice_ops.python.ops.reduce_slice_ops.reduce_slice_max",
      "tensorflow_core.contrib.reduce_slice_ops.python.ops.reduce_slice_ops.reduce_slice_min",
      "tensorflow_core.contrib.reduce_slice_ops.python.ops.reduce_slice_ops.reduce_slice_prod",
      "tensorflow_core.contrib.reduce_slice_ops.python.ops.reduce_slice_ops.reduce_slice_sum"
    ],
    "tensorflow_core/contrib/remote_fused_graph/__init__.py": [],
    "tensorflow_core/contrib/remote_fused_graph/pylib/__init__.py": [],
    "tensorflow_core/contrib/remote_fused_graph/pylib/python/__init__.py": [],
    "tensorflow_core/contrib/remote_fused_graph/pylib/python/ops/__init__.py": [],
    "tensorflow_core/contrib/remote_fused_graph/pylib/python/ops/gen_remote_fused_graph_ops.py": [
      "tensorflow_core.contrib.remote_fused_graph.pylib.python.ops.gen_remote_fused_graph_ops.RemoteFusedGraphExecute",
      "tensorflow_core.contrib.remote_fused_graph.pylib.python.ops.gen_remote_fused_graph_ops.remote_fused_graph_execute",
      "tensorflow_core.contrib.remote_fused_graph.pylib.python.ops.gen_remote_fused_graph_ops.remote_fused_graph_execute_eager_fallback"
    ],
    "tensorflow_core/contrib/remote_fused_graph/pylib/python/ops/remote_fused_graph_ops.py": [
      "tensorflow_core.contrib.remote_fused_graph.pylib.python.ops.remote_fused_graph_ops.remote_fused_graph_execute"
    ],
    "tensorflow_core/contrib/remote_fused_graph/pylib/python/ops/remote_fused_graph_ops_test.py": [
      "tensorflow_core.contrib.remote_fused_graph.pylib.python.ops.remote_fused_graph_ops_test.RemoteFusedGraphExecuteTest"
    ],
    "tensorflow_core/contrib/resampler/__init__.py": [],
    "tensorflow_core/contrib/resampler/ops/__init__.py": [],
    "tensorflow_core/contrib/resampler/ops/gen_resampler_ops.py": [
      "tensorflow_core.contrib.resampler.ops.gen_resampler_ops.Resampler",
      "tensorflow_core.contrib.resampler.ops.gen_resampler_ops.ResamplerGrad",
      "tensorflow_core.contrib.resampler.ops.gen_resampler_ops.resampler",
      "tensorflow_core.contrib.resampler.ops.gen_resampler_ops.resampler_eager_fallback",
      "tensorflow_core.contrib.resampler.ops.gen_resampler_ops.resampler_grad",
      "tensorflow_core.contrib.resampler.ops.gen_resampler_ops.resampler_grad_eager_fallback"
    ],
    "tensorflow_core/contrib/resampler/python/__init__.py": [],
    "tensorflow_core/contrib/resampler/python/ops/__init__.py": [],
    "tensorflow_core/contrib/resampler/python/ops/resampler_ops.py": [
      "tensorflow_core.contrib.resampler.python.ops.resampler_ops.resampler"
    ],
    "tensorflow_core/contrib/resampler/python/ops/resampler_ops_test.py": [
      "tensorflow_core.contrib.resampler.python.ops.resampler_ops_test.ResamplerTest"
    ],
    "tensorflow_core/contrib/rnn/__init__.py": [],
    "tensorflow_core/contrib/rnn/python/__init__.py": [],
    "tensorflow_core/contrib/rnn/python/kernel_tests/__init__.py": [],
    "tensorflow_core/contrib/rnn/python/kernel_tests/benchmarking.py": [
      "tensorflow_core.contrib.rnn.python.kernel_tests.benchmarking.device",
      "tensorflow_core.contrib.rnn.python.kernel_tests.benchmarking.dict_product",
      "tensorflow_core.contrib.rnn.python.kernel_tests.benchmarking.seconds_per_run"
    ],
    "tensorflow_core/contrib/rnn/python/ops/__init__.py": [],
    "tensorflow_core/contrib/rnn/python/ops/core_rnn_cell.py": [
      "tensorflow_core.contrib.rnn.python.ops.core_rnn_cell.EmbeddingWrapper",
      "tensorflow_core.contrib.rnn.python.ops.core_rnn_cell.InputProjectionWrapper",
      "tensorflow_core.contrib.rnn.python.ops.core_rnn_cell.OutputProjectionWrapper",
      "tensorflow_core.contrib.rnn.python.ops.core_rnn_cell.RNNCell"
    ],
    "tensorflow_core/contrib/rnn/python/ops/fused_rnn_cell.py": [
      "tensorflow_core.contrib.rnn.python.ops.fused_rnn_cell.FusedRNNCell",
      "tensorflow_core.contrib.rnn.python.ops.fused_rnn_cell.FusedRNNCellAdaptor",
      "tensorflow_core.contrib.rnn.python.ops.fused_rnn_cell.TimeReversedFusedRNN"
    ],
    "tensorflow_core/contrib/rnn/python/ops/gru_ops.py": [
      "tensorflow_core.contrib.rnn.python.ops.gru_ops.GRUBlockCell",
      "tensorflow_core.contrib.rnn.python.ops.gru_ops.GRUBlockCellV2",
      "tensorflow_core.contrib.rnn.python.ops.gru_ops.LayerRNNCell"
    ],
    "tensorflow_core/contrib/rnn/python/ops/lstm_ops.py": [
      "tensorflow_core.contrib.rnn.python.ops.lstm_ops.LSTMBlockCell",
      "tensorflow_core.contrib.rnn.python.ops.lstm_ops.LSTMBlockFusedCell",
      "tensorflow_core.contrib.rnn.python.ops.lstm_ops.LSTMBlockWrapper",
      "tensorflow_core.contrib.rnn.python.ops.lstm_ops.LayerRNNCell"
    ],
    "tensorflow_core/contrib/rnn/python/ops/rnn.py": [
      "tensorflow_core.contrib.rnn.python.ops.rnn.stack_bidirectional_dynamic_rnn",
      "tensorflow_core.contrib.rnn.python.ops.rnn.stack_bidirectional_rnn"
    ],
    "tensorflow_core/contrib/rnn/python/ops/rnn_cell.py": [
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.AttentionCellWrapper",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.BidirectionalGridLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.CFNCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.CompiledWrapper",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.Conv1DLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.Conv2DLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.Conv3DLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.ConvLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.CoupledInputForgetGateLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.GLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.GridLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.HighwayWrapper",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.IndRNNCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.IndyGRUCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.IndyLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.IntersectionRNNCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.LayerNormBasicLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.LayerNormLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.MinimalRNNCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.NASCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.NTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.NTMControllerState",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.PhasedLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.SRUCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.TimeFreqLSTMCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.UGRNNCell",
      "tensorflow_core.contrib.rnn.python.ops.rnn_cell.WeightNormLSTMCell"
    ],
    "tensorflow_core/contrib/rnn/python/tools/__init__.py": [],
    "tensorflow_core/contrib/rnn/python/tools/checkpoint_convert.py": [
      "tensorflow_core.contrib.rnn.python.tools.checkpoint_convert.RNN_NAME_REPLACEMENTS",
      "tensorflow_core.contrib.rnn.python.tools.checkpoint_convert.convert_names",
      "tensorflow_core.contrib.rnn.python.tools.checkpoint_convert.main"
    ],
    "tensorflow_core/contrib/rpc/__init__.py": [],
    "tensorflow_core/contrib/rpc/python/__init__.py": [],
    "tensorflow_core/contrib/rpc/python/ops/__init__.py": [],
    "tensorflow_core/contrib/rpc/python/ops/gen_rpc_op.py": [
      "tensorflow_core.contrib.rpc.python.ops.gen_rpc_op.Rpc",
      "tensorflow_core.contrib.rpc.python.ops.gen_rpc_op.TryRpc",
      "tensorflow_core.contrib.rpc.python.ops.gen_rpc_op.rpc",
      "tensorflow_core.contrib.rpc.python.ops.gen_rpc_op.rpc_eager_fallback",
      "tensorflow_core.contrib.rpc.python.ops.gen_rpc_op.try_rpc",
      "tensorflow_core.contrib.rpc.python.ops.gen_rpc_op.try_rpc_eager_fallback"
    ],
    "tensorflow_core/contrib/rpc/python/ops/rpc_op.py": [],
    "tensorflow_core/contrib/saved_model/__init__.py": [],
    "tensorflow_core/contrib/saved_model/python/__init__.py": [],
    "tensorflow_core/contrib/saved_model/python/saved_model/__init__.py": [],
    "tensorflow_core/contrib/saved_model/python/saved_model/keras_saved_model.py": [
      "tensorflow_core.contrib.saved_model.python.saved_model.keras_saved_model.load_keras_model",
      "tensorflow_core.contrib.saved_model.python.saved_model.keras_saved_model.save_keras_model"
    ],
    "tensorflow_core/contrib/saved_model/python/saved_model/reader.py": [
      "tensorflow_core.contrib.saved_model.python.saved_model.reader.get_saved_model_tag_sets",
      "tensorflow_core.contrib.saved_model.python.saved_model.reader.read_saved_model"
    ],
    "tensorflow_core/contrib/seq2seq/__init__.py": [],
    "tensorflow_core/contrib/seq2seq/ops/__init__.py": [],
    "tensorflow_core/contrib/seq2seq/ops/gen_beam_search_ops.py": [
      "tensorflow_core.contrib.seq2seq.ops.gen_beam_search_ops.GatherTree",
      "tensorflow_core.contrib.seq2seq.ops.gen_beam_search_ops.gather_tree",
      "tensorflow_core.contrib.seq2seq.ops.gen_beam_search_ops.gather_tree_eager_fallback"
    ],
    "tensorflow_core/contrib/seq2seq/python/__init__.py": [],
    "tensorflow_core/contrib/seq2seq/python/ops/__init__.py": [],
    "tensorflow_core/contrib/seq2seq/python/ops/attention_wrapper.py": [
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.AttentionMechanism",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.AttentionWrapper",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.AttentionWrapperState",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.BahdanauAttention",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.BahdanauAttentionV2",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.BahdanauMonotonicAttention",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.BahdanauMonotonicAttentionV2",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.LuongAttention",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.LuongAttentionV2",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.LuongMonotonicAttention",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.LuongMonotonicAttentionV2",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.hardmax",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.monotonic_attention",
      "tensorflow_core.contrib.seq2seq.python.ops.attention_wrapper.safe_cumprod"
    ],
    "tensorflow_core/contrib/seq2seq/python/ops/basic_decoder.py": [
      "tensorflow_core.contrib.seq2seq.python.ops.basic_decoder.BasicDecoder",
      "tensorflow_core.contrib.seq2seq.python.ops.basic_decoder.BasicDecoderOutput",
      "tensorflow_core.contrib.seq2seq.python.ops.basic_decoder.BasicDecoderV2"
    ],
    "tensorflow_core/contrib/seq2seq/python/ops/beam_search_decoder.py": [
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.BeamSearchDecoder",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.BeamSearchDecoderMixin",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.BeamSearchDecoderOutput",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.BeamSearchDecoderState",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.BeamSearchDecoderV2",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.FinalBeamSearchDecoderOutput",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.attention_probs_from_attn_state",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.gather_tree_from_array",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.get_attention_probs",
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_decoder.tile_batch"
    ],
    "tensorflow_core/contrib/seq2seq/python/ops/beam_search_ops.py": [
      "tensorflow_core.contrib.seq2seq.python.ops.beam_search_ops.gather_tree"
    ],
    "tensorflow_core/contrib/seq2seq/python/ops/decoder.py": [
      "tensorflow_core.contrib.seq2seq.python.ops.decoder.BaseDecoder",
      "tensorflow_core.contrib.seq2seq.python.ops.decoder.Decoder",
      "tensorflow_core.contrib.seq2seq.python.ops.decoder.dynamic_decode"
    ],
    "tensorflow_core/contrib/seq2seq/python/ops/helper.py": [
      "tensorflow_core.contrib.seq2seq.python.ops.helper.CustomHelper",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.GreedyEmbeddingHelper",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.Helper",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.InferenceHelper",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.SampleEmbeddingHelper",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.ScheduledEmbeddingTrainingHelper",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.ScheduledOutputTrainingHelper",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.TrainingHelper",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.bernoulli_sample",
      "tensorflow_core.contrib.seq2seq.python.ops.helper.categorical_sample"
    ],
    "tensorflow_core/contrib/seq2seq/python/ops/loss.py": [
      "tensorflow_core.contrib.seq2seq.python.ops.loss.SequenceLoss",
      "tensorflow_core.contrib.seq2seq.python.ops.loss.sequence_loss"
    ],
    "tensorflow_core/contrib/seq2seq/python/ops/sampler.py": [
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.CustomSampler",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.GreedyEmbeddingSampler",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.InferenceSampler",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.SampleEmbeddingSampler",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.Sampler",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.ScheduledEmbeddingTrainingSampler",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.ScheduledOutputTrainingSampler",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.TrainingSampler",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.bernoulli_sample",
      "tensorflow_core.contrib.seq2seq.python.ops.sampler.categorical_sample"
    ],
    "tensorflow_core/contrib/session_bundle/__init__.py": [],
    "tensorflow_core/contrib/session_bundle/constants.py": [
      "tensorflow_core.contrib.session_bundle.constants.ASSETS_DIRECTORY",
      "tensorflow_core.contrib.session_bundle.constants.ASSETS_KEY",
      "tensorflow_core.contrib.session_bundle.constants.CLASSIFICATION_SIGNATURE",
      "tensorflow_core.contrib.session_bundle.constants.EXPORT_BASE_NAME",
      "tensorflow_core.contrib.session_bundle.constants.EXPORT_SUFFIX_NAME",
      "tensorflow_core.contrib.session_bundle.constants.GENERIC_SIGNATURE",
      "tensorflow_core.contrib.session_bundle.constants.GRAPH_KEY",
      "tensorflow_core.contrib.session_bundle.constants.INIT_OP_KEY",
      "tensorflow_core.contrib.session_bundle.constants.META_GRAPH_DEF_FILENAME",
      "tensorflow_core.contrib.session_bundle.constants.REGRESSION_SIGNATURE",
      "tensorflow_core.contrib.session_bundle.constants.SIGNATURES_KEY",
      "tensorflow_core.contrib.session_bundle.constants.VARIABLES_FILENAME",
      "tensorflow_core.contrib.session_bundle.constants.VARIABLES_FILENAME_PATTERN",
      "tensorflow_core.contrib.session_bundle.constants.VARIABLES_FILENAME_PATTERN_V2",
      "tensorflow_core.contrib.session_bundle.constants.VARIABLES_INDEX_FILENAME_V2",
      "tensorflow_core.contrib.session_bundle.constants.VERSION_FORMAT_SPECIFIER"
    ],
    "tensorflow_core/contrib/session_bundle/exporter.py": [
      "tensorflow_core.contrib.session_bundle.exporter.Exporter",
      "tensorflow_core.contrib.session_bundle.exporter.classification_signature",
      "tensorflow_core.contrib.session_bundle.exporter.generic_signature",
      "tensorflow_core.contrib.session_bundle.exporter.gfile_copy_callback",
      "tensorflow_core.contrib.session_bundle.exporter.regression_signature"
    ],
    "tensorflow_core/contrib/session_bundle/gc.py": [
      "tensorflow_core.contrib.session_bundle.gc.Path",
      "tensorflow_core.contrib.session_bundle.gc.get_paths",
      "tensorflow_core.contrib.session_bundle.gc.largest_export_versions",
      "tensorflow_core.contrib.session_bundle.gc.mod_export_version",
      "tensorflow_core.contrib.session_bundle.gc.negation",
      "tensorflow_core.contrib.session_bundle.gc.one_of_every_n_export_versions",
      "tensorflow_core.contrib.session_bundle.gc.union"
    ],
    "tensorflow_core/contrib/session_bundle/manifest_pb2.py": [
      "tensorflow_core.contrib.session_bundle.manifest_pb2.AssetFile",
      "tensorflow_core.contrib.session_bundle.manifest_pb2.ClassificationSignature",
      "tensorflow_core.contrib.session_bundle.manifest_pb2.DESCRIPTOR",
      "tensorflow_core.contrib.session_bundle.manifest_pb2.GenericSignature",
      "tensorflow_core.contrib.session_bundle.manifest_pb2.RegressionSignature",
      "tensorflow_core.contrib.session_bundle.manifest_pb2.Signature",
      "tensorflow_core.contrib.session_bundle.manifest_pb2.Signatures",
      "tensorflow_core.contrib.session_bundle.manifest_pb2.TensorBinding"
    ],
    "tensorflow_core/contrib/signal/__init__.py": [
      "tensorflow_core.contrib.signal.__init__.frames"
    ],
    "tensorflow_core/contrib/slim/__init__.py": [],
    "tensorflow_core/contrib/slim/nets.py": [],
    "tensorflow_core/contrib/slim/python/__init__.py": [],
    "tensorflow_core/contrib/slim/python/slim/__init__.py": [],
    "tensorflow_core/contrib/slim/python/slim/data/__init__.py": [],
    "tensorflow_core/contrib/slim/python/slim/data/data_decoder.py": [
      "tensorflow_core.contrib.slim.python.slim.data.data_decoder.DataDecoder"
    ],
    "tensorflow_core/contrib/slim/python/slim/data/data_provider.py": [
      "tensorflow_core.contrib.slim.python.slim.data.data_provider.DataProvider"
    ],
    "tensorflow_core/contrib/slim/python/slim/data/dataset.py": [
      "tensorflow_core.contrib.slim.python.slim.data.dataset.Dataset"
    ],
    "tensorflow_core/contrib/slim/python/slim/data/dataset_data_provider.py": [
      "tensorflow_core.contrib.slim.python.slim.data.dataset_data_provider.DatasetDataProvider"
    ],
    "tensorflow_core/contrib/slim/python/slim/data/parallel_reader.py": [
      "tensorflow_core.contrib.slim.python.slim.data.parallel_reader.ParallelReader",
      "tensorflow_core.contrib.slim.python.slim.data.parallel_reader.get_data_files",
      "tensorflow_core.contrib.slim.python.slim.data.parallel_reader.parallel_read",
      "tensorflow_core.contrib.slim.python.slim.data.parallel_reader.single_pass_read"
    ],
    "tensorflow_core/contrib/slim/python/slim/data/prefetch_queue.py": [
      "tensorflow_core.contrib.slim.python.slim.data.prefetch_queue.prefetch_queue"
    ],
    "tensorflow_core/contrib/slim/python/slim/data/tfexample_decoder.py": [
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.BackupHandler",
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.BoundingBox",
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.Image",
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.ItemHandler",
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.ItemHandlerCallback",
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.LookupTensor",
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.SparseTensor",
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.TFExampleDecoder",
      "tensorflow_core.contrib.slim.python.slim.data.tfexample_decoder.Tensor"
    ],
    "tensorflow_core/contrib/slim/python/slim/evaluation.py": [
      "tensorflow_core.contrib.slim.python.slim.evaluation.checkpoints_iterator",
      "tensorflow_core.contrib.slim.python.slim.evaluation.evaluate_once",
      "tensorflow_core.contrib.slim.python.slim.evaluation.evaluation_loop",
      "tensorflow_core.contrib.slim.python.slim.evaluation.wait_for_new_checkpoint"
    ],
    "tensorflow_core/contrib/slim/python/slim/learning.py": [
      "tensorflow_core.contrib.slim.python.slim.learning.add_gradients_summaries",
      "tensorflow_core.contrib.slim.python.slim.learning.clip_gradient_norms",
      "tensorflow_core.contrib.slim.python.slim.learning.create_train_op",
      "tensorflow_core.contrib.slim.python.slim.learning.multiply_gradients",
      "tensorflow_core.contrib.slim.python.slim.learning.train",
      "tensorflow_core.contrib.slim.python.slim.learning.train_step"
    ],
    "tensorflow_core/contrib/slim/python/slim/model_analyzer.py": [
      "tensorflow_core.contrib.slim.python.slim.model_analyzer.analyze_ops",
      "tensorflow_core.contrib.slim.python.slim.model_analyzer.analyze_vars",
      "tensorflow_core.contrib.slim.python.slim.model_analyzer.tensor_description"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/__init__.py": [],
    "tensorflow_core/contrib/slim/python/slim/nets/alexnet.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.alexnet.alexnet_v2",
      "tensorflow_core.contrib.slim.python.slim.nets.alexnet.alexnet_v2_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.alexnet.trunc_normal"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/inception.py": [],
    "tensorflow_core/contrib/slim/python/slim/nets/inception_v1.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v1.inception_v1",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v1.inception_v1_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v1.inception_v1_base",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v1.trunc_normal"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/inception_v2.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v2.inception_v2",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v2.inception_v2_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v2.inception_v2_base",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v2.trunc_normal"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/inception_v3.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v3.inception_v3",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v3.inception_v3_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v3.inception_v3_base",
      "tensorflow_core.contrib.slim.python.slim.nets.inception_v3.trunc_normal"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/overfeat.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.overfeat.overfeat",
      "tensorflow_core.contrib.slim.python.slim.nets.overfeat.overfeat_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.overfeat.trunc_normal"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/resnet_utils.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_utils.Block",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_utils.conv2d_same",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_utils.resnet_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_utils.stack_blocks_dense",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_utils.subsample"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/resnet_v1.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v1.bottleneck",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v1.resnet_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v1.resnet_v1",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_101",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_152",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_200",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_50",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v1.resnet_v1_block"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/resnet_v2.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v2.bottleneck",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v2.resnet_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v2.resnet_v2",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_101",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_152",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_200",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_50",
      "tensorflow_core.contrib.slim.python.slim.nets.resnet_v2.resnet_v2_block"
    ],
    "tensorflow_core/contrib/slim/python/slim/nets/vgg.py": [
      "tensorflow_core.contrib.slim.python.slim.nets.vgg.vgg_16",
      "tensorflow_core.contrib.slim.python.slim.nets.vgg.vgg_19",
      "tensorflow_core.contrib.slim.python.slim.nets.vgg.vgg_a",
      "tensorflow_core.contrib.slim.python.slim.nets.vgg.vgg_arg_scope",
      "tensorflow_core.contrib.slim.python.slim.nets.vgg.vgg_d",
      "tensorflow_core.contrib.slim.python.slim.nets.vgg.vgg_e"
    ],
    "tensorflow_core/contrib/slim/python/slim/queues.py": [
      "tensorflow_core.contrib.slim.python.slim.queues.NestedQueueRunnerError",
      "tensorflow_core.contrib.slim.python.slim.queues.QueueRunners"
    ],
    "tensorflow_core/contrib/slim/python/slim/summaries.py": [
      "tensorflow_core.contrib.slim.python.slim.summaries.add_histogram_summaries",
      "tensorflow_core.contrib.slim.python.slim.summaries.add_histogram_summary",
      "tensorflow_core.contrib.slim.python.slim.summaries.add_image_summaries",
      "tensorflow_core.contrib.slim.python.slim.summaries.add_image_summary",
      "tensorflow_core.contrib.slim.python.slim.summaries.add_scalar_summaries",
      "tensorflow_core.contrib.slim.python.slim.summaries.add_scalar_summary",
      "tensorflow_core.contrib.slim.python.slim.summaries.add_zero_fraction_summaries",
      "tensorflow_core.contrib.slim.python.slim.summaries.add_zero_fraction_summary"
    ],
    "tensorflow_core/contrib/solvers/__init__.py": [],
    "tensorflow_core/contrib/solvers/python/__init__.py": [],
    "tensorflow_core/contrib/solvers/python/ops/__init__.py": [],
    "tensorflow_core/contrib/solvers/python/ops/lanczos.py": [
      "tensorflow_core.contrib.solvers.python.ops.lanczos.bidiag_matmul",
      "tensorflow_core.contrib.solvers.python.ops.lanczos.lanczos_bidiag"
    ],
    "tensorflow_core/contrib/solvers/python/ops/least_squares.py": [
      "tensorflow_core.contrib.solvers.python.ops.least_squares.cgls"
    ],
    "tensorflow_core/contrib/solvers/python/ops/linear_equations.py": [
      "tensorflow_core.contrib.solvers.python.ops.linear_equations.conjugate_gradient"
    ],
    "tensorflow_core/contrib/solvers/python/ops/util.py": [
      "tensorflow_core.contrib.solvers.python.ops.util.create_operator",
      "tensorflow_core.contrib.solvers.python.ops.util.dot",
      "tensorflow_core.contrib.solvers.python.ops.util.identity_operator",
      "tensorflow_core.contrib.solvers.python.ops.util.l2norm",
      "tensorflow_core.contrib.solvers.python.ops.util.l2norm_squared",
      "tensorflow_core.contrib.solvers.python.ops.util.l2normalize"
    ],
    "tensorflow_core/contrib/sparsemax/__init__.py": [],
    "tensorflow_core/contrib/sparsemax/python/__init__.py": [],
    "tensorflow_core/contrib/sparsemax/python/ops/__init__.py": [],
    "tensorflow_core/contrib/sparsemax/python/ops/sparsemax.py": [
      "tensorflow_core.contrib.sparsemax.python.ops.sparsemax.sparsemax"
    ],
    "tensorflow_core/contrib/sparsemax/python/ops/sparsemax_loss.py": [
      "tensorflow_core.contrib.sparsemax.python.ops.sparsemax_loss.sparsemax_loss"
    ],
    "tensorflow_core/contrib/specs/__init__.py": [],
    "tensorflow_core/contrib/specs/python/__init__.py": [],
    "tensorflow_core/contrib/specs/python/params_ops.py": [
      "tensorflow_core.contrib.specs.python.params_ops.Lf",
      "tensorflow_core.contrib.specs.python.params_ops.Li",
      "tensorflow_core.contrib.specs.python.params_ops.Nt",
      "tensorflow_core.contrib.specs.python.params_ops.Uf",
      "tensorflow_core.contrib.specs.python.params_ops.Ui"
    ],
    "tensorflow_core/contrib/specs/python/specs.py": [
      "tensorflow_core.contrib.specs.python.specs.LocalImport",
      "tensorflow_core.contrib.specs.python.specs.create_net",
      "tensorflow_core.contrib.specs.python.specs.create_net_fun",
      "tensorflow_core.contrib.specs.python.specs.eval_params",
      "tensorflow_core.contrib.specs.python.specs.eval_spec",
      "tensorflow_core.contrib.specs.python.specs.ops"
    ],
    "tensorflow_core/contrib/specs/python/specs_lib.py": [
      "tensorflow_core.contrib.specs.python.specs_lib.Callable",
      "tensorflow_core.contrib.specs.python.specs_lib.Composable",
      "tensorflow_core.contrib.specs.python.specs_lib.Composition",
      "tensorflow_core.contrib.specs.python.specs_lib.External",
      "tensorflow_core.contrib.specs.python.specs_lib.Function",
      "tensorflow_core.contrib.specs.python.specs_lib.Import",
      "tensorflow_core.contrib.specs.python.specs_lib.KEYWORDS",
      "tensorflow_core.contrib.specs.python.specs_lib.Operator",
      "tensorflow_core.contrib.specs.python.specs_lib.QUOTED",
      "tensorflow_core.contrib.specs.python.specs_lib.check_keywords",
      "tensorflow_core.contrib.specs.python.specs_lib.debug",
      "tensorflow_core.contrib.specs.python.specs_lib.debug_",
      "tensorflow_core.contrib.specs.python.specs_lib.get_positional"
    ],
    "tensorflow_core/contrib/specs/python/specs_ops.py": [
      "tensorflow_core.contrib.specs.python.specs_ops.Ap",
      "tensorflow_core.contrib.specs.python.specs_ops.Bn",
      "tensorflow_core.contrib.specs.python.specs_ops.Cl",
      "tensorflow_core.contrib.specs.python.specs_ops.Cm",
      "tensorflow_core.contrib.specs.python.specs_ops.Conc",
      "tensorflow_core.contrib.specs.python.specs_ops.Cr",
      "tensorflow_core.contrib.specs.python.specs_ops.Cs",
      "tensorflow_core.contrib.specs.python.specs_ops.Ct",
      "tensorflow_core.contrib.specs.python.specs_ops.Cx",
      "tensorflow_core.contrib.specs.python.specs_ops.Do",
      "tensorflow_core.contrib.specs.python.specs_ops.Dwm",
      "tensorflow_core.contrib.specs.python.specs_ops.Dws",
      "tensorflow_core.contrib.specs.python.specs_ops.Expand",
      "tensorflow_core.contrib.specs.python.specs_ops.External",
      "tensorflow_core.contrib.specs.python.specs_ops.Fl",
      "tensorflow_core.contrib.specs.python.specs_ops.Flat",
      "tensorflow_core.contrib.specs.python.specs_ops.Fm",
      "tensorflow_core.contrib.specs.python.specs_ops.Fr",
      "tensorflow_core.contrib.specs.python.specs_ops.Fs",
      "tensorflow_core.contrib.specs.python.specs_ops.Ft",
      "tensorflow_core.contrib.specs.python.specs_ops.Fun",
      "tensorflow_core.contrib.specs.python.specs_ops.Fx",
      "tensorflow_core.contrib.specs.python.specs_ops.Id",
      "tensorflow_core.contrib.specs.python.specs_ops.Idx",
      "tensorflow_core.contrib.specs.python.specs_ops.Import",
      "tensorflow_core.contrib.specs.python.specs_ops.Lrn",
      "tensorflow_core.contrib.specs.python.specs_ops.Mp",
      "tensorflow_core.contrib.specs.python.specs_ops.Print",
      "tensorflow_core.contrib.specs.python.specs_ops.Relu",
      "tensorflow_core.contrib.specs.python.specs_ops.Reshape",
      "tensorflow_core.contrib.specs.python.specs_ops.Shared",
      "tensorflow_core.contrib.specs.python.specs_ops.Sig",
      "tensorflow_core.contrib.specs.python.specs_ops.Smax",
      "tensorflow_core.contrib.specs.python.specs_ops.Squeeze",
      "tensorflow_core.contrib.specs.python.specs_ops.Tanh",
      "tensorflow_core.contrib.specs.python.specs_ops.Transpose",
      "tensorflow_core.contrib.specs.python.specs_ops.Unit",
      "tensorflow_core.contrib.specs.python.specs_ops.Var",
      "tensorflow_core.contrib.specs.python.specs_ops.debug"
    ],
    "tensorflow_core/contrib/specs/python/summaries.py": [
      "tensorflow_core.contrib.specs.python.summaries.SHORT_NAMES",
      "tensorflow_core.contrib.specs.python.summaries.SHORT_NAMES_SRC",
      "tensorflow_core.contrib.specs.python.summaries.tf_left_split",
      "tensorflow_core.contrib.specs.python.summaries.tf_num_params",
      "tensorflow_core.contrib.specs.python.summaries.tf_parameter_iter",
      "tensorflow_core.contrib.specs.python.summaries.tf_parameter_summary",
      "tensorflow_core.contrib.specs.python.summaries.tf_print",
      "tensorflow_core.contrib.specs.python.summaries.tf_spec_print",
      "tensorflow_core.contrib.specs.python.summaries.tf_spec_structure",
      "tensorflow_core.contrib.specs.python.summaries.tf_spec_summary",
      "tensorflow_core.contrib.specs.python.summaries.tf_structure"
    ],
    "tensorflow_core/contrib/staging/__init__.py": [],
    "tensorflow_core/contrib/stat_summarizer/__init__.py": [],
    "tensorflow_core/contrib/stateless/__init__.py": [],
    "tensorflow_core/contrib/summary/__init__.py": [],
    "tensorflow_core/contrib/summary/summary.py": [],
    "tensorflow_core/contrib/tensor_forest/__init__.py": [],
    "tensorflow_core/contrib/tensor_forest/client/__init__.py": [],
    "tensorflow_core/contrib/tensor_forest/client/eval_metrics.py": [
      "tensorflow_core.contrib.tensor_forest.client.eval_metrics.FEATURE_IMPORTANCE_NAME",
      "tensorflow_core.contrib.tensor_forest.client.eval_metrics.INFERENCE_PRED_NAME",
      "tensorflow_core.contrib.tensor_forest.client.eval_metrics.INFERENCE_PROB_NAME",
      "tensorflow_core.contrib.tensor_forest.client.eval_metrics.get_metric",
      "tensorflow_core.contrib.tensor_forest.client.eval_metrics.get_prediction_key"
    ],
    "tensorflow_core/contrib/tensor_forest/client/random_forest.py": [
      "tensorflow_core.contrib.tensor_forest.client.random_forest.ALL_SERVING_KEY",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.CoreTensorForestEstimator",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.EPSILON",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.KEYS_NAME",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.LOSS_NAME",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.ModelBuilderOutputType",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.MultiForestMultiHeadEstimator",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.TREE_PATHS_PREDICTION_KEY",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.TensorForestEstimator",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.TensorForestLossHook",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.TensorForestRunOpAtEndHook",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.VARIANCE_PREDICTION_KEY",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.get_combined_model_fn",
      "tensorflow_core.contrib.tensor_forest.client.random_forest.get_model_fn"
    ],
    "tensorflow_core/contrib/tensor_forest/proto/__init__.py": [],
    "tensorflow_core/contrib/tensor_forest/proto/fertile_stats_pb2.py": [
      "tensorflow_core.contrib.tensor_forest.proto.fertile_stats_pb2.DESCRIPTOR",
      "tensorflow_core.contrib.tensor_forest.proto.fertile_stats_pb2.FertileSlot",
      "tensorflow_core.contrib.tensor_forest.proto.fertile_stats_pb2.FertileStats",
      "tensorflow_core.contrib.tensor_forest.proto.fertile_stats_pb2.GiniStats",
      "tensorflow_core.contrib.tensor_forest.proto.fertile_stats_pb2.LeafStat",
      "tensorflow_core.contrib.tensor_forest.proto.fertile_stats_pb2.SplitCandidate",
      "tensorflow_core.contrib.tensor_forest.proto.fertile_stats_pb2.TreePath"
    ],
    "tensorflow_core/contrib/tensor_forest/proto/tensor_forest_params_pb2.py": [
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.COLLECTION_BASIC",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.DESCRIPTOR",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.DepthDependentParam",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.ExponentialParam",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.GRAPH_RUNNER_COLLECTION",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.LeafModelType",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.LinearParam",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.MODEL_DENSE_CLASSIFICATION",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.MODEL_REGRESSION",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.MODEL_SPARSE_CLASSIFICATION",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.MODEL_SPARSE_OR_DENSE_CLASSIFICATION",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SPLIT_FINISH_BASIC",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SPLIT_FINISH_DOMINATE_BOOTSTRAP",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SPLIT_FINISH_DOMINATE_HOEFFDING",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SPLIT_PRUNE_10_PERCENT",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SPLIT_PRUNE_HALF",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SPLIT_PRUNE_HOEFFDING",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SPLIT_PRUNE_NONE",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SPLIT_PRUNE_QUARTER",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.STATS_DENSE_GINI",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.STATS_FIXED_SIZE_SPARSE_GINI",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.STATS_LEAST_SQUARES_REGRESSION",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.STATS_SPARSE_GINI",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.STATS_SPARSE_THEN_DENSE_GINI",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SplitCollectionType",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SplitFinishConfig",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SplitFinishStrategyType",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SplitPruningConfig",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.SplitPruningStrategyType",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.StatsModelType",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.TensorForestParams",
      "tensorflow_core.contrib.tensor_forest.proto.tensor_forest_params_pb2.ThresholdParam"
    ],
    "tensorflow_core/contrib/tensor_forest/python/__init__.py": [],
    "tensorflow_core/contrib/tensor_forest/python/ops/__init__.py": [],
    "tensorflow_core/contrib/tensor_forest/python/ops/data_ops.py": [
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.CastToFloat",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.DATA_CATEGORICAL",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.DATA_FLOAT",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.DTYPE_TO_FTYPE",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.DataColumn",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.DataColumnCollection",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.GetColumnName",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.ParseDataTensorOrDict",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.ParseLabelTensorOrDict",
      "tensorflow_core.contrib.tensor_forest.python.ops.data_ops.TensorForestDataSpec"
    ],
    "tensorflow_core/contrib/tensor_forest/python/ops/gen_model_ops.py": [
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.CreateTreeVariable",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.DecisionTreeResourceHandleOp",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.FeatureUsageCounts",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.TraverseTreeV4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.TreeDeserialize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.TreeIsInitializedOp",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.TreePredictionsV4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.TreeSerialize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.TreeSize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.UpdateModelV4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.create_tree_variable",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.create_tree_variable_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.decision_tree_resource_handle_op",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.decision_tree_resource_handle_op_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.feature_usage_counts",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.feature_usage_counts_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.traverse_tree_v4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.traverse_tree_v4_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_deserialize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_deserialize_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_is_initialized_op",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_is_initialized_op_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_predictions_v4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_predictions_v4_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_serialize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_serialize_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_size",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.tree_size_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.update_model_v4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_model_ops.update_model_v4_eager_fallback"
    ],
    "tensorflow_core/contrib/tensor_forest/python/ops/gen_stats_ops.py": [
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.CreateFertileStatsVariable",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.FertileStatsDeserialize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.FertileStatsIsInitializedOp",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.FertileStatsResourceHandleOp",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.FertileStatsSerialize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.FinalizeTree",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.GrowTreeV4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.ProcessInputV4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.create_fertile_stats_variable",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.create_fertile_stats_variable_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.fertile_stats_deserialize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.fertile_stats_deserialize_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.fertile_stats_is_initialized_op",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.fertile_stats_is_initialized_op_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.fertile_stats_resource_handle_op",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.fertile_stats_resource_handle_op_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.fertile_stats_serialize",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.fertile_stats_serialize_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.finalize_tree",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.finalize_tree_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.grow_tree_v4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.grow_tree_v4_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.process_input_v4",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_stats_ops.process_input_v4_eager_fallback"
    ],
    "tensorflow_core/contrib/tensor_forest/python/ops/gen_tensor_forest_ops.py": [
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_tensor_forest_ops.ReinterpretStringToFloat",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_tensor_forest_ops.ScatterAddNdim",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_tensor_forest_ops.reinterpret_string_to_float",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_tensor_forest_ops.reinterpret_string_to_float_eager_fallback",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_tensor_forest_ops.scatter_add_ndim",
      "tensorflow_core.contrib.tensor_forest.python.ops.gen_tensor_forest_ops.scatter_add_ndim_eager_fallback"
    ],
    "tensorflow_core/contrib/tensor_forest/python/ops/model_ops.py": [
      "tensorflow_core.contrib.tensor_forest.python.ops.model_ops.TreeVariable",
      "tensorflow_core.contrib.tensor_forest.python.ops.model_ops.TreeVariableSavable",
      "tensorflow_core.contrib.tensor_forest.python.ops.model_ops.tree_variable"
    ],
    "tensorflow_core/contrib/tensor_forest/python/ops/stats_ops.py": [
      "tensorflow_core.contrib.tensor_forest.python.ops.stats_ops.FertileStatsVariable",
      "tensorflow_core.contrib.tensor_forest.python.ops.stats_ops.FertileStatsVariableSavable",
      "tensorflow_core.contrib.tensor_forest.python.ops.stats_ops.fertile_stats_variable"
    ],
    "tensorflow_core/contrib/tensor_forest/python/ops/tensor_forest_ops.py": [],
    "tensorflow_core/contrib/tensor_forest/python/tensor_forest.py": [
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.CLASSIFICATION_LEAF_MODEL_TYPES",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.FINISH_TYPES",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.ForestHParams",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.ForestVariables",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.PRUNING_TYPES",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.REGRESSION_MODEL_TYPE",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.RandomForestGraphs",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.RandomTreeGraphs",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.SPLIT_TYPES",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.TreeVariables",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.build_params_proto",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.get_epoch_variable",
      "tensorflow_core.contrib.tensor_forest.python.tensor_forest.parse_number_or_string_to_proto"
    ],
    "tensorflow_core/contrib/tensorboard/__init__.py": [],
    "tensorflow_core/contrib/tensorboard/plugins/__init__.py": [],
    "tensorflow_core/contrib/tensorboard/plugins/projector/__init__.py": [
      "tensorflow_core.contrib.tensorboard.plugins.projector.__init__.visualize_embeddings"
    ],
    "tensorflow_core/contrib/tensorboard/plugins/projector/projector_config_pb2.py": [
      "tensorflow_core.contrib.tensorboard.plugins.projector.projector_config_pb2.DESCRIPTOR",
      "tensorflow_core.contrib.tensorboard.plugins.projector.projector_config_pb2.EmbeddingInfo",
      "tensorflow_core.contrib.tensorboard.plugins.projector.projector_config_pb2.ProjectorConfig",
      "tensorflow_core.contrib.tensorboard.plugins.projector.projector_config_pb2.SpriteMetadata"
    ],
    "tensorflow_core/contrib/tensorrt/__init__.py": [],
    "tensorflow_core/contrib/tensorrt/python/__init__.py": [],
    "tensorflow_core/contrib/tensorrt/python/trt_convert.py": [
      "tensorflow_core.contrib.tensorrt.python.trt_convert.create_inference_graph"
    ],
    "tensorflow_core/contrib/testing/__init__.py": [],
    "tensorflow_core/contrib/testing/python/__init__.py": [],
    "tensorflow_core/contrib/testing/python/framework/__init__.py": [],
    "tensorflow_core/contrib/testing/python/framework/fake_summary_writer.py": [
      "tensorflow_core.contrib.testing.python.framework.fake_summary_writer.FakeSummaryWriter"
    ],
    "tensorflow_core/contrib/testing/python/framework/util_test.py": [
      "tensorflow_core.contrib.testing.python.framework.util_test.assert_summary",
      "tensorflow_core.contrib.testing.python.framework.util_test.latest_event_file",
      "tensorflow_core.contrib.testing.python.framework.util_test.latest_events",
      "tensorflow_core.contrib.testing.python.framework.util_test.latest_summaries",
      "tensorflow_core.contrib.testing.python.framework.util_test.simple_values_from_events",
      "tensorflow_core.contrib.testing.python.framework.util_test.to_summary_proto"
    ],
    "tensorflow_core/contrib/text/__init__.py": [],
    "tensorflow_core/contrib/text/python/__init__.py": [],
    "tensorflow_core/contrib/text/python/ops/__init__.py": [],
    "tensorflow_core/contrib/text/python/ops/gen_skip_gram_ops.py": [
      "tensorflow_core.contrib.text.python.ops.gen_skip_gram_ops.SkipGramGenerateCandidates",
      "tensorflow_core.contrib.text.python.ops.gen_skip_gram_ops.skip_gram_generate_candidates",
      "tensorflow_core.contrib.text.python.ops.gen_skip_gram_ops.skip_gram_generate_candidates_eager_fallback"
    ],
    "tensorflow_core/contrib/text/python/ops/skip_gram_ops.py": [
      "tensorflow_core.contrib.text.python.ops.skip_gram_ops.skip_gram_sample",
      "tensorflow_core.contrib.text.python.ops.skip_gram_ops.skip_gram_sample_with_text_vocab"
    ],
    "tensorflow_core/contrib/tfprof/__init__.py": [],
    "tensorflow_core/contrib/tfprof/model_analyzer.py": [
      "tensorflow_core.contrib.tfprof.model_analyzer.FLOAT_OPS_OPTIONS",
      "tensorflow_core.contrib.tfprof.model_analyzer.PRINT_ALL_TIMING_MEMORY",
      "tensorflow_core.contrib.tfprof.model_analyzer.TRAINABLE_VARS_PARAMS_STAT_OPTIONS",
      "tensorflow_core.contrib.tfprof.model_analyzer.advise",
      "tensorflow_core.contrib.tfprof.model_analyzer.print_model_analysis"
    ],
    "tensorflow_core/contrib/tfprof/tfprof_logger.py": [
      "tensorflow_core.contrib.tfprof.tfprof_logger.write_op_log"
    ],
    "tensorflow_core/contrib/timeseries/__init__.py": [],
    "tensorflow_core/contrib/timeseries/python/__init__.py": [],
    "tensorflow_core/contrib/timeseries/python/timeseries/__init__.py": [],
    "tensorflow_core/contrib/timeseries/python/timeseries/ar_model.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.ar_model.ARModel",
      "tensorflow_core.contrib.timeseries.python.timeseries.ar_model.AnomalyMixtureARModel",
      "tensorflow_core.contrib.timeseries.python.timeseries.ar_model.FlatPredictionModel",
      "tensorflow_core.contrib.timeseries.python.timeseries.ar_model.LSTMPredictionModel"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/estimators.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.estimators.ARRegressor",
      "tensorflow_core.contrib.timeseries.python.timeseries.estimators.LSTMAutoRegressor",
      "tensorflow_core.contrib.timeseries.python.timeseries.estimators.StateSpaceRegressor",
      "tensorflow_core.contrib.timeseries.python.timeseries.estimators.StructuralEnsembleRegressor",
      "tensorflow_core.contrib.timeseries.python.timeseries.estimators.TimeSeriesRegressor"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/feature_keys.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.FilteringFeatures",
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.FilteringResults",
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.PredictionFeatures",
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.PredictionResults",
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.SavedModelLabels",
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.State",
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.Times",
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.TrainEvalFeatures",
      "tensorflow_core.contrib.timeseries.python.timeseries.feature_keys.Values"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/head.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.head.OneShotPredictionHead",
      "tensorflow_core.contrib.timeseries.python.timeseries.head.TimeSeriesRegressionHead",
      "tensorflow_core.contrib.timeseries.python.timeseries.head.state_to_dictionary"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/input_pipeline.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.CSVReader",
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.NumpyReader",
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.RandomWindowInputFn",
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.ReaderBaseTimeSeriesParser",
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.TFExampleReader",
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.TimeSeriesInputFn",
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.TimeSeriesReader",
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.WholeDatasetInputFn",
      "tensorflow_core.contrib.timeseries.python.timeseries.input_pipeline.predict_continuation_input_fn"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/math_utils.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.InputStatistics",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.InputStatisticsFromMiniBatch",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.Moments",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.TensorValuedMutableDenseHashTable",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.TupleOfTensorsLookup",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.batch_end_time",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.batch_matrix_pow",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.batch_start_time",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.batch_times_matrix",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.block_diagonal",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.cauchy_log_prob",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.clip_covariance",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.entropy_matched_cauchy_scale",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.log_noninformative_covariance_prior",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.make_toeplitz_matrix",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.matrix_times_batch",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.matrix_to_powers",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.mvn_tril_log_prob",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.normal_log_prob",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.power_sums_tensor",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.replicate_state",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.sign_magnitude_positive_definite",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.transform_to_covariance_matrices",
      "tensorflow_core.contrib.timeseries.python.timeseries.math_utils.variable_covariance_matrix"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/model.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.model.ModelOutputs",
      "tensorflow_core.contrib.timeseries.python.timeseries.model.SequentialTimeSeriesModel",
      "tensorflow_core.contrib.timeseries.python.timeseries.model.TimeSeriesModel"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/model_utils.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.model_utils.canonicalize_times_or_steps_from_output",
      "tensorflow_core.contrib.timeseries.python.timeseries.model_utils.fully_connected",
      "tensorflow_core.contrib.timeseries.python.timeseries.model_utils.parameter_switch"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/saved_model_utils.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.saved_model_utils.cold_start_filter",
      "tensorflow_core.contrib.timeseries.python.timeseries.saved_model_utils.filter_continuation",
      "tensorflow_core.contrib.timeseries.python.timeseries.saved_model_utils.predict_continuation"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_management.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.state_management.ChainingStateManager",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_management.FilteringOnlyStateManager",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_management.PassthroughStateManager"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_space_models/__init__.py": [],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_space_models/filtering_postprocessor.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.filtering_postprocessor.FilteringStepPostprocessor",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.filtering_postprocessor.StateInterpolatingAnomalyDetector",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.filtering_postprocessor.cauchy_alternative_to_gaussian"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_space_models/kalman_filter.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.kalman_filter.KalmanFilter"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_space_models/level_trend.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.level_trend.AdderStateSpaceModel"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_space_models/periodic.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.periodic.CycleStateSpaceModel",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.periodic.ResolutionCycleModel"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_space_models/state_space_model.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.state_space_model.StateSpaceCorrelatedFeaturesEnsemble",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.state_space_model.StateSpaceEnsemble",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.state_space_model.StateSpaceIndependentEnsemble",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.state_space_model.StateSpaceModel",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.state_space_model.StateSpaceModelConfiguration"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_space_models/structural_ensemble.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.structural_ensemble.MultiResolutionStructuralEnsemble",
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.structural_ensemble.StructuralEnsemble"
    ],
    "tensorflow_core/contrib/timeseries/python/timeseries/state_space_models/varma.py": [
      "tensorflow_core.contrib.timeseries.python.timeseries.state_space_models.varma.VARMA"
    ],
    "tensorflow_core/contrib/tpu/__init__.py": [],
    "tensorflow_core/contrib/tpu/python/__init__.py": [],
    "tensorflow_core/contrib/tpu/python/ops/__init__.py": [],
    "tensorflow_core/contrib/tpu/python/ops/tpu_ops.py": [],
    "tensorflow_core/contrib/tpu/python/profiler/__init__.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/__init__.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/_tpu_estimator_embedding.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/async_checkpoint.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/bfloat16.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/datasets.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/device_assignment.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/error_handling.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/feature_column.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/functional.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/keras_support.py": [
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.KerasCrossShardOptimizer",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.KerasTPUModel",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.SizedInfeed",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUAssignment",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUDatasetInfeedManager",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUDistributionStrategy",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUEmbedding",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUFunction",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUInfeedInstance",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUInfeedManager",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUModelOp",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPUNumpyInfeedManager",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.TPURewriteContext",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.get_tpu_system_metadata",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.setup_tpu_session",
      "tensorflow_core.contrib.tpu.python.tpu.keras_support.tpu_model"
    ],
    "tensorflow_core/contrib/tpu/python/tpu/keras_tpu_variables.py": [
      "tensorflow_core.contrib.tpu.python.tpu.keras_tpu_variables.ReplicatedVariable",
      "tensorflow_core.contrib.tpu.python.tpu.keras_tpu_variables.replicated_fetch_function",
      "tensorflow_core.contrib.tpu.python.tpu.keras_tpu_variables.replicated_scope",
      "tensorflow_core.contrib.tpu.python.tpu.keras_tpu_variables.replicated_variable_for_optimizer"
    ],
    "tensorflow_core/contrib/tpu/python/tpu/session_support.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tensor_tracer.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/topology.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_config.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_context.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_embedding.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_embedding_gradient.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_estimator.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_feed.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_function.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_optimizer.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_sharding.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/tpu_system_metadata.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/training_loop.py": [],
    "tensorflow_core/contrib/tpu/python/tpu/util.py": [],
    "tensorflow_core/contrib/training/__init__.py": [],
    "tensorflow_core/contrib/training/python/__init__.py": [],
    "tensorflow_core/contrib/training/python/training/__init__.py": [],
    "tensorflow_core/contrib/training/python/training/bucket_ops.py": [
      "tensorflow_core.contrib.training.python.training.bucket_ops.bucket",
      "tensorflow_core.contrib.training.python.training.bucket_ops.bucket_by_sequence_length"
    ],
    "tensorflow_core/contrib/training/python/training/device_setter.py": [
      "tensorflow_core.contrib.training.python.training.device_setter.GreedyLoadBalancingStrategy",
      "tensorflow_core.contrib.training.python.training.device_setter.RandomStrategy",
      "tensorflow_core.contrib.training.python.training.device_setter.byte_size_load_fn"
    ],
    "tensorflow_core/contrib/training/python/training/evaluation.py": [
      "tensorflow_core.contrib.training.python.training.evaluation.StopAfterNEvalsHook",
      "tensorflow_core.contrib.training.python.training.evaluation.SummaryAtEndHook",
      "tensorflow_core.contrib.training.python.training.evaluation.checkpoints_iterator",
      "tensorflow_core.contrib.training.python.training.evaluation.evaluate_once",
      "tensorflow_core.contrib.training.python.training.evaluation.evaluate_repeatedly",
      "tensorflow_core.contrib.training.python.training.evaluation.get_or_create_eval_step",
      "tensorflow_core.contrib.training.python.training.evaluation.wait_for_new_checkpoint"
    ],
    "tensorflow_core/contrib/training/python/training/feeding_queue_runner.py": [],
    "tensorflow_core/contrib/training/python/training/hparam.py": [
      "tensorflow_core.contrib.training.python.training.hparam.HParams",
      "tensorflow_core.contrib.training.python.training.hparam.PARAM_RE",
      "tensorflow_core.contrib.training.python.training.hparam.parse_values"
    ],
    "tensorflow_core/contrib/training/python/training/hparam_pb2.py": [
      "tensorflow_core.contrib.training.python.training.hparam_pb2.DESCRIPTOR",
      "tensorflow_core.contrib.training.python.training.hparam_pb2.HParamDef"
    ],
    "tensorflow_core/contrib/training/python/training/resample.py": [
      "tensorflow_core.contrib.training.python.training.resample.resample_at_rate",
      "tensorflow_core.contrib.training.python.training.resample.weighted_resample"
    ],
    "tensorflow_core/contrib/training/python/training/sampling_ops.py": [
      "tensorflow_core.contrib.training.python.training.sampling_ops.rejection_sample",
      "tensorflow_core.contrib.training.python.training.sampling_ops.stratified_sample"
    ],
    "tensorflow_core/contrib/training/python/training/sequence_queueing_state_saver.py": [
      "tensorflow_core.contrib.training.python.training.sequence_queueing_state_saver.NextQueuedSequenceBatch",
      "tensorflow_core.contrib.training.python.training.sequence_queueing_state_saver.SequenceQueueingStateSaver",
      "tensorflow_core.contrib.training.python.training.sequence_queueing_state_saver.batch_sequences_with_states"
    ],
    "tensorflow_core/contrib/training/python/training/training.py": [
      "tensorflow_core.contrib.training.python.training.training.add_gradients_summaries",
      "tensorflow_core.contrib.training.python.training.training.clip_gradient_norms",
      "tensorflow_core.contrib.training.python.training.training.clip_gradient_norms_fn",
      "tensorflow_core.contrib.training.python.training.training.create_train_op",
      "tensorflow_core.contrib.training.python.training.training.multiply_gradients",
      "tensorflow_core.contrib.training.python.training.training.train"
    ],
    "tensorflow_core/contrib/training/python/training/tuner.py": [
      "tensorflow_core.contrib.training.python.training.tuner.Tuner"
    ],
    "tensorflow_core/contrib/util/__init__.py": [],
    "tensorflow_core/contrib/util/loader.py": [
      "tensorflow_core.contrib.util.loader.load_op_library"
    ],
    "tensorflow_core/core/__init__.py": [],
    "tensorflow_core/core/debug/__init__.py": [],
    "tensorflow_core/core/debug/debug_service_pb2.py": [
      "tensorflow_core.core.debug.debug_service_pb2.CallTraceback",
      "tensorflow_core.core.debug.debug_service_pb2.DESCRIPTOR",
      "tensorflow_core.core.debug.debug_service_pb2.EventReply"
    ],
    "tensorflow_core/core/debug/debug_service_pb2_grpc.py": [
      "tensorflow_core.core.debug.debug_service_pb2_grpc.EventListenerServicer",
      "tensorflow_core.core.debug.debug_service_pb2_grpc.EventListenerStub",
      "tensorflow_core.core.debug.debug_service_pb2_grpc.add_EventListenerServicer_to_server"
    ],
    "tensorflow_core/core/debug/debugger_event_metadata_pb2.py": [
      "tensorflow_core.core.debug.debugger_event_metadata_pb2.DESCRIPTOR",
      "tensorflow_core.core.debug.debugger_event_metadata_pb2.DebuggerEventMetadata"
    ],
    "tensorflow_core/core/example/__init__.py": [],
    "tensorflow_core/core/example/example_parser_configuration_pb2.py": [
      "tensorflow_core.core.example.example_parser_configuration_pb2.DESCRIPTOR",
      "tensorflow_core.core.example.example_parser_configuration_pb2.ExampleParserConfiguration",
      "tensorflow_core.core.example.example_parser_configuration_pb2.FeatureConfiguration",
      "tensorflow_core.core.example.example_parser_configuration_pb2.FixedLenFeatureProto",
      "tensorflow_core.core.example.example_parser_configuration_pb2.VarLenFeatureProto"
    ],
    "tensorflow_core/core/example/example_pb2.py": [
      "tensorflow_core.core.example.example_pb2.DESCRIPTOR",
      "tensorflow_core.core.example.example_pb2.Example",
      "tensorflow_core.core.example.example_pb2.SequenceExample"
    ],
    "tensorflow_core/core/example/feature_pb2.py": [
      "tensorflow_core.core.example.feature_pb2.BytesList",
      "tensorflow_core.core.example.feature_pb2.DESCRIPTOR",
      "tensorflow_core.core.example.feature_pb2.Feature",
      "tensorflow_core.core.example.feature_pb2.FeatureList",
      "tensorflow_core.core.example.feature_pb2.FeatureLists",
      "tensorflow_core.core.example.feature_pb2.Features",
      "tensorflow_core.core.example.feature_pb2.FloatList",
      "tensorflow_core.core.example.feature_pb2.Int64List"
    ],
    "tensorflow_core/core/framework/__init__.py": [],
    "tensorflow_core/core/framework/allocation_description_pb2.py": [
      "tensorflow_core.core.framework.allocation_description_pb2.AllocationDescription",
      "tensorflow_core.core.framework.allocation_description_pb2.DESCRIPTOR"
    ],
    "tensorflow_core/core/framework/api_def_pb2.py": [
      "tensorflow_core.core.framework.api_def_pb2.ApiDef",
      "tensorflow_core.core.framework.api_def_pb2.ApiDefs",
      "tensorflow_core.core.framework.api_def_pb2.DESCRIPTOR"
    ],
    "tensorflow_core/core/framework/attr_value_pb2.py": [
      "tensorflow_core.core.framework.attr_value_pb2.AttrValue",
      "tensorflow_core.core.framework.attr_value_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.attr_value_pb2.NameAttrList"
    ],
    "tensorflow_core/core/framework/cost_graph_pb2.py": [
      "tensorflow_core.core.framework.cost_graph_pb2.CostGraphDef",
      "tensorflow_core.core.framework.cost_graph_pb2.DESCRIPTOR"
    ],
    "tensorflow_core/core/framework/device_attributes_pb2.py": [
      "tensorflow_core.core.framework.device_attributes_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.device_attributes_pb2.DeviceAttributes",
      "tensorflow_core.core.framework.device_attributes_pb2.DeviceLocality",
      "tensorflow_core.core.framework.device_attributes_pb2.InterconnectLink",
      "tensorflow_core.core.framework.device_attributes_pb2.LocalLinks"
    ],
    "tensorflow_core/core/framework/function_pb2.py": [
      "tensorflow_core.core.framework.function_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.function_pb2.FunctionDef",
      "tensorflow_core.core.framework.function_pb2.FunctionDefLibrary",
      "tensorflow_core.core.framework.function_pb2.GradientDef"
    ],
    "tensorflow_core/core/framework/graph_pb2.py": [
      "tensorflow_core.core.framework.graph_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.graph_pb2.GraphDef"
    ],
    "tensorflow_core/core/framework/graph_transfer_info_pb2.py": [
      "tensorflow_core.core.framework.graph_transfer_info_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.graph_transfer_info_pb2.GraphTransferConstNodeInfo",
      "tensorflow_core.core.framework.graph_transfer_info_pb2.GraphTransferGraphInputNodeInfo",
      "tensorflow_core.core.framework.graph_transfer_info_pb2.GraphTransferGraphOutputNodeInfo",
      "tensorflow_core.core.framework.graph_transfer_info_pb2.GraphTransferInfo",
      "tensorflow_core.core.framework.graph_transfer_info_pb2.GraphTransferNodeInfo",
      "tensorflow_core.core.framework.graph_transfer_info_pb2.GraphTransferNodeInput",
      "tensorflow_core.core.framework.graph_transfer_info_pb2.GraphTransferNodeInputInfo",
      "tensorflow_core.core.framework.graph_transfer_info_pb2.GraphTransferNodeOutputInfo"
    ],
    "tensorflow_core/core/framework/kernel_def_pb2.py": [
      "tensorflow_core.core.framework.kernel_def_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.kernel_def_pb2.KernelDef",
      "tensorflow_core.core.framework.kernel_def_pb2.KernelList"
    ],
    "tensorflow_core/core/framework/log_memory_pb2.py": [
      "tensorflow_core.core.framework.log_memory_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.log_memory_pb2.MemoryLogRawAllocation",
      "tensorflow_core.core.framework.log_memory_pb2.MemoryLogRawDeallocation",
      "tensorflow_core.core.framework.log_memory_pb2.MemoryLogStep",
      "tensorflow_core.core.framework.log_memory_pb2.MemoryLogTensorAllocation",
      "tensorflow_core.core.framework.log_memory_pb2.MemoryLogTensorDeallocation",
      "tensorflow_core.core.framework.log_memory_pb2.MemoryLogTensorOutput"
    ],
    "tensorflow_core/core/framework/node_def_pb2.py": [
      "tensorflow_core.core.framework.node_def_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.node_def_pb2.NodeDef"
    ],
    "tensorflow_core/core/framework/op_def_pb2.py": [
      "tensorflow_core.core.framework.op_def_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.op_def_pb2.OpDef",
      "tensorflow_core.core.framework.op_def_pb2.OpDeprecation",
      "tensorflow_core.core.framework.op_def_pb2.OpList"
    ],
    "tensorflow_core/core/framework/reader_base_pb2.py": [
      "tensorflow_core.core.framework.reader_base_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.reader_base_pb2.ReaderBaseState"
    ],
    "tensorflow_core/core/framework/remote_fused_graph_execute_info_pb2.py": [
      "tensorflow_core.core.framework.remote_fused_graph_execute_info_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.remote_fused_graph_execute_info_pb2.RemoteFusedGraphExecuteInfo"
    ],
    "tensorflow_core/core/framework/resource_handle_pb2.py": [
      "tensorflow_core.core.framework.resource_handle_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.resource_handle_pb2.ResourceHandleProto"
    ],
    "tensorflow_core/core/framework/step_stats_pb2.py": [
      "tensorflow_core.core.framework.step_stats_pb2.AllocationRecord",
      "tensorflow_core.core.framework.step_stats_pb2.AllocatorMemoryUsed",
      "tensorflow_core.core.framework.step_stats_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.step_stats_pb2.DeviceStepStats",
      "tensorflow_core.core.framework.step_stats_pb2.MemoryStats",
      "tensorflow_core.core.framework.step_stats_pb2.NodeExecStats",
      "tensorflow_core.core.framework.step_stats_pb2.NodeOutput",
      "tensorflow_core.core.framework.step_stats_pb2.StepStats"
    ],
    "tensorflow_core/core/framework/summary_pb2.py": [
      "tensorflow_core.core.framework.summary_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.summary_pb2.HistogramProto",
      "tensorflow_core.core.framework.summary_pb2.Summary",
      "tensorflow_core.core.framework.summary_pb2.SummaryDescription",
      "tensorflow_core.core.framework.summary_pb2.SummaryMetadata"
    ],
    "tensorflow_core/core/framework/tensor_description_pb2.py": [
      "tensorflow_core.core.framework.tensor_description_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.tensor_description_pb2.TensorDescription"
    ],
    "tensorflow_core/core/framework/tensor_pb2.py": [
      "tensorflow_core.core.framework.tensor_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.tensor_pb2.TensorProto",
      "tensorflow_core.core.framework.tensor_pb2.VariantTensorDataProto"
    ],
    "tensorflow_core/core/framework/tensor_shape_pb2.py": [
      "tensorflow_core.core.framework.tensor_shape_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.tensor_shape_pb2.TensorShapeProto"
    ],
    "tensorflow_core/core/framework/tensor_slice_pb2.py": [
      "tensorflow_core.core.framework.tensor_slice_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.tensor_slice_pb2.TensorSliceProto"
    ],
    "tensorflow_core/core/framework/types_pb2.py": [
      "tensorflow_core.core.framework.types_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.types_pb2.DT_BFLOAT16",
      "tensorflow_core.core.framework.types_pb2.DT_BFLOAT16_REF",
      "tensorflow_core.core.framework.types_pb2.DT_BOOL",
      "tensorflow_core.core.framework.types_pb2.DT_BOOL_REF",
      "tensorflow_core.core.framework.types_pb2.DT_COMPLEX128",
      "tensorflow_core.core.framework.types_pb2.DT_COMPLEX128_REF",
      "tensorflow_core.core.framework.types_pb2.DT_COMPLEX64",
      "tensorflow_core.core.framework.types_pb2.DT_COMPLEX64_REF",
      "tensorflow_core.core.framework.types_pb2.DT_DOUBLE",
      "tensorflow_core.core.framework.types_pb2.DT_DOUBLE_REF",
      "tensorflow_core.core.framework.types_pb2.DT_FLOAT",
      "tensorflow_core.core.framework.types_pb2.DT_FLOAT_REF",
      "tensorflow_core.core.framework.types_pb2.DT_HALF",
      "tensorflow_core.core.framework.types_pb2.DT_HALF_REF",
      "tensorflow_core.core.framework.types_pb2.DT_INT16",
      "tensorflow_core.core.framework.types_pb2.DT_INT16_REF",
      "tensorflow_core.core.framework.types_pb2.DT_INT32",
      "tensorflow_core.core.framework.types_pb2.DT_INT32_REF",
      "tensorflow_core.core.framework.types_pb2.DT_INT64",
      "tensorflow_core.core.framework.types_pb2.DT_INT64_REF",
      "tensorflow_core.core.framework.types_pb2.DT_INT8",
      "tensorflow_core.core.framework.types_pb2.DT_INT8_REF",
      "tensorflow_core.core.framework.types_pb2.DT_INVALID",
      "tensorflow_core.core.framework.types_pb2.DT_QINT16",
      "tensorflow_core.core.framework.types_pb2.DT_QINT16_REF",
      "tensorflow_core.core.framework.types_pb2.DT_QINT32",
      "tensorflow_core.core.framework.types_pb2.DT_QINT32_REF",
      "tensorflow_core.core.framework.types_pb2.DT_QINT8",
      "tensorflow_core.core.framework.types_pb2.DT_QINT8_REF",
      "tensorflow_core.core.framework.types_pb2.DT_QUINT16",
      "tensorflow_core.core.framework.types_pb2.DT_QUINT16_REF",
      "tensorflow_core.core.framework.types_pb2.DT_QUINT8",
      "tensorflow_core.core.framework.types_pb2.DT_QUINT8_REF",
      "tensorflow_core.core.framework.types_pb2.DT_RESOURCE",
      "tensorflow_core.core.framework.types_pb2.DT_RESOURCE_REF",
      "tensorflow_core.core.framework.types_pb2.DT_STRING",
      "tensorflow_core.core.framework.types_pb2.DT_STRING_REF",
      "tensorflow_core.core.framework.types_pb2.DT_UINT16",
      "tensorflow_core.core.framework.types_pb2.DT_UINT16_REF",
      "tensorflow_core.core.framework.types_pb2.DT_UINT32",
      "tensorflow_core.core.framework.types_pb2.DT_UINT32_REF",
      "tensorflow_core.core.framework.types_pb2.DT_UINT64",
      "tensorflow_core.core.framework.types_pb2.DT_UINT64_REF",
      "tensorflow_core.core.framework.types_pb2.DT_UINT8",
      "tensorflow_core.core.framework.types_pb2.DT_UINT8_REF",
      "tensorflow_core.core.framework.types_pb2.DT_VARIANT",
      "tensorflow_core.core.framework.types_pb2.DT_VARIANT_REF",
      "tensorflow_core.core.framework.types_pb2.DataType"
    ],
    "tensorflow_core/core/framework/variable_pb2.py": [
      "tensorflow_core.core.framework.variable_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.variable_pb2.SaveSliceInfoDef",
      "tensorflow_core.core.framework.variable_pb2.VARIABLE_AGGREGATION_MEAN",
      "tensorflow_core.core.framework.variable_pb2.VARIABLE_AGGREGATION_NONE",
      "tensorflow_core.core.framework.variable_pb2.VARIABLE_AGGREGATION_ONLY_FIRST_REPLICA",
      "tensorflow_core.core.framework.variable_pb2.VARIABLE_AGGREGATION_SUM",
      "tensorflow_core.core.framework.variable_pb2.VARIABLE_SYNCHRONIZATION_AUTO",
      "tensorflow_core.core.framework.variable_pb2.VARIABLE_SYNCHRONIZATION_NONE",
      "tensorflow_core.core.framework.variable_pb2.VARIABLE_SYNCHRONIZATION_ON_READ",
      "tensorflow_core.core.framework.variable_pb2.VARIABLE_SYNCHRONIZATION_ON_WRITE",
      "tensorflow_core.core.framework.variable_pb2.VariableAggregation",
      "tensorflow_core.core.framework.variable_pb2.VariableDef",
      "tensorflow_core.core.framework.variable_pb2.VariableSynchronization"
    ],
    "tensorflow_core/core/framework/versions_pb2.py": [
      "tensorflow_core.core.framework.versions_pb2.DESCRIPTOR",
      "tensorflow_core.core.framework.versions_pb2.VersionDef"
    ],
    "tensorflow_core/core/grappler/__init__.py": [],
    "tensorflow_core/core/grappler/costs/__init__.py": [],
    "tensorflow_core/core/grappler/costs/op_performance_data_pb2.py": [
      "tensorflow_core.core.grappler.costs.op_performance_data_pb2.DESCRIPTOR",
      "tensorflow_core.core.grappler.costs.op_performance_data_pb2.LogNormalDistribution",
      "tensorflow_core.core.grappler.costs.op_performance_data_pb2.NormalDistribution",
      "tensorflow_core.core.grappler.costs.op_performance_data_pb2.OpInfo",
      "tensorflow_core.core.grappler.costs.op_performance_data_pb2.OpPerformance",
      "tensorflow_core.core.grappler.costs.op_performance_data_pb2.OpPerformanceList",
      "tensorflow_core.core.grappler.costs.op_performance_data_pb2.SessionInfo"
    ],
    "tensorflow_core/core/kernels/__init__.py": [],
    "tensorflow_core/core/kernels/boosted_trees/__init__.py": [],
    "tensorflow_core/core/kernels/boosted_trees/boosted_trees_pb2.py": [
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.BucketizedSplit",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.CategoricalSplit",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.DEFAULT_LEFT",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.DEFAULT_RIGHT",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.DESCRIPTOR",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.DebugOutput",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.DefaultDirection",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.DenseSplit",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.EQUALITY_DEFAULT_RIGHT",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.GrowingMetadata",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.INEQUALITY_DEFAULT_LEFT",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.INEQUALITY_DEFAULT_RIGHT",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.Leaf",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.Node",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.NodeMetadata",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.SparseVector",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.SplitTypeWithDefault",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.Tree",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.TreeEnsemble",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.TreeMetadata",
      "tensorflow_core.core.kernels.boosted_trees.boosted_trees_pb2.Vector"
    ],
    "tensorflow_core/core/lib/__init__.py": [],
    "tensorflow_core/core/lib/core/__init__.py": [],
    "tensorflow_core/core/lib/core/error_codes_pb2.py": [
      "tensorflow_core.core.lib.core.error_codes_pb2.ABORTED",
      "tensorflow_core.core.lib.core.error_codes_pb2.ALREADY_EXISTS",
      "tensorflow_core.core.lib.core.error_codes_pb2.CANCELLED",
      "tensorflow_core.core.lib.core.error_codes_pb2.Code",
      "tensorflow_core.core.lib.core.error_codes_pb2.DATA_LOSS",
      "tensorflow_core.core.lib.core.error_codes_pb2.DEADLINE_EXCEEDED",
      "tensorflow_core.core.lib.core.error_codes_pb2.DESCRIPTOR",
      "tensorflow_core.core.lib.core.error_codes_pb2.DO_NOT_USE_RESERVED_FOR_FUTURE_EXPANSION_USE_DEFAULT_IN_SWITCH_INSTEAD_",
      "tensorflow_core.core.lib.core.error_codes_pb2.FAILED_PRECONDITION",
      "tensorflow_core.core.lib.core.error_codes_pb2.INTERNAL",
      "tensorflow_core.core.lib.core.error_codes_pb2.INVALID_ARGUMENT",
      "tensorflow_core.core.lib.core.error_codes_pb2.NOT_FOUND",
      "tensorflow_core.core.lib.core.error_codes_pb2.OK",
      "tensorflow_core.core.lib.core.error_codes_pb2.OUT_OF_RANGE",
      "tensorflow_core.core.lib.core.error_codes_pb2.PERMISSION_DENIED",
      "tensorflow_core.core.lib.core.error_codes_pb2.RESOURCE_EXHAUSTED",
      "tensorflow_core.core.lib.core.error_codes_pb2.UNAUTHENTICATED",
      "tensorflow_core.core.lib.core.error_codes_pb2.UNAVAILABLE",
      "tensorflow_core.core.lib.core.error_codes_pb2.UNIMPLEMENTED",
      "tensorflow_core.core.lib.core.error_codes_pb2.UNKNOWN"
    ],
    "tensorflow_core/core/profiler/__init__.py": [],
    "tensorflow_core/core/profiler/op_profile_pb2.py": [
      "tensorflow_core.core.profiler.op_profile_pb2.DESCRIPTOR",
      "tensorflow_core.core.profiler.op_profile_pb2.Metrics",
      "tensorflow_core.core.profiler.op_profile_pb2.Node",
      "tensorflow_core.core.profiler.op_profile_pb2.Profile"
    ],
    "tensorflow_core/core/profiler/profile_pb2.py": [
      "tensorflow_core.core.profiler.profile_pb2.DESCRIPTOR",
      "tensorflow_core.core.profiler.profile_pb2.Function",
      "tensorflow_core.core.profiler.profile_pb2.Label",
      "tensorflow_core.core.profiler.profile_pb2.Line",
      "tensorflow_core.core.profiler.profile_pb2.Location",
      "tensorflow_core.core.profiler.profile_pb2.Mapping",
      "tensorflow_core.core.profiler.profile_pb2.Profile",
      "tensorflow_core.core.profiler.profile_pb2.Sample",
      "tensorflow_core.core.profiler.profile_pb2.ValueType"
    ],
    "tensorflow_core/core/profiler/profiler_analysis_pb2.py": [
      "tensorflow_core.core.profiler.profiler_analysis_pb2.DESCRIPTOR",
      "tensorflow_core.core.profiler.profiler_analysis_pb2.EnumProfileSessionsAndToolsRequest",
      "tensorflow_core.core.profiler.profiler_analysis_pb2.EnumProfileSessionsAndToolsResponse",
      "tensorflow_core.core.profiler.profiler_analysis_pb2.NewProfileSessionRequest",
      "tensorflow_core.core.profiler.profiler_analysis_pb2.NewProfileSessionResponse",
      "tensorflow_core.core.profiler.profiler_analysis_pb2.ProfileSessionDataRequest",
      "tensorflow_core.core.profiler.profiler_analysis_pb2.ProfileSessionDataResponse",
      "tensorflow_core.core.profiler.profiler_analysis_pb2.ProfileSessionInfo"
    ],
    "tensorflow_core/core/profiler/profiler_analysis_pb2_grpc.py": [
      "tensorflow_core.core.profiler.profiler_analysis_pb2_grpc.ProfileAnalysisServicer",
      "tensorflow_core.core.profiler.profiler_analysis_pb2_grpc.ProfileAnalysisStub",
      "tensorflow_core.core.profiler.profiler_analysis_pb2_grpc.add_ProfileAnalysisServicer_to_server"
    ],
    "tensorflow_core/core/profiler/profiler_service_pb2.py": [
      "tensorflow_core.core.profiler.profiler_service_pb2.DESCRIPTOR",
      "tensorflow_core.core.profiler.profiler_service_pb2.MonitorRequest",
      "tensorflow_core.core.profiler.profiler_service_pb2.MonitorResponse",
      "tensorflow_core.core.profiler.profiler_service_pb2.ProfileOptions",
      "tensorflow_core.core.profiler.profiler_service_pb2.ProfileRequest",
      "tensorflow_core.core.profiler.profiler_service_pb2.ProfileResponse",
      "tensorflow_core.core.profiler.profiler_service_pb2.ProfileToolData",
      "tensorflow_core.core.profiler.profiler_service_pb2.ToolRequestOptions"
    ],
    "tensorflow_core/core/profiler/profiler_service_pb2_grpc.py": [
      "tensorflow_core.core.profiler.profiler_service_pb2_grpc.ProfilerServiceServicer",
      "tensorflow_core.core.profiler.profiler_service_pb2_grpc.ProfilerServiceStub",
      "tensorflow_core.core.profiler.profiler_service_pb2_grpc.add_ProfilerServiceServicer_to_server"
    ],
    "tensorflow_core/core/profiler/tfprof_log_pb2.py": [
      "tensorflow_core.core.profiler.tfprof_log_pb2.CodeDef",
      "tensorflow_core.core.profiler.tfprof_log_pb2.DESCRIPTOR",
      "tensorflow_core.core.profiler.tfprof_log_pb2.ExecMemory",
      "tensorflow_core.core.profiler.tfprof_log_pb2.ExecProfile",
      "tensorflow_core.core.profiler.tfprof_log_pb2.ExecTime",
      "tensorflow_core.core.profiler.tfprof_log_pb2.Memory",
      "tensorflow_core.core.profiler.tfprof_log_pb2.OpLogEntry",
      "tensorflow_core.core.profiler.tfprof_log_pb2.OpLogProto",
      "tensorflow_core.core.profiler.tfprof_log_pb2.ProfileNode",
      "tensorflow_core.core.profiler.tfprof_log_pb2.ProfileProto",
      "tensorflow_core.core.profiler.tfprof_log_pb2.Tuple"
    ],
    "tensorflow_core/core/profiler/tfprof_options_pb2.py": [
      "tensorflow_core.core.profiler.tfprof_options_pb2.AdvisorOptionsProto",
      "tensorflow_core.core.profiler.tfprof_options_pb2.DESCRIPTOR",
      "tensorflow_core.core.profiler.tfprof_options_pb2.OptionsProto"
    ],
    "tensorflow_core/core/profiler/tfprof_output_pb2.py": [
      "tensorflow_core.core.profiler.tfprof_output_pb2.AdviceProto",
      "tensorflow_core.core.profiler.tfprof_output_pb2.DESCRIPTOR",
      "tensorflow_core.core.profiler.tfprof_output_pb2.GraphNodeProto",
      "tensorflow_core.core.profiler.tfprof_output_pb2.MultiGraphNodeProto",
      "tensorflow_core.core.profiler.tfprof_output_pb2.TFProfTensorProto"
    ],
    "tensorflow_core/core/protobuf/__init__.py": [],
    "tensorflow_core/core/protobuf/cluster_pb2.py": [
      "tensorflow_core.core.protobuf.cluster_pb2.ClusterDef",
      "tensorflow_core.core.protobuf.cluster_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.cluster_pb2.JobDef"
    ],
    "tensorflow_core/core/protobuf/config_pb2.py": [
      "tensorflow_core.core.protobuf.config_pb2.CallableOptions",
      "tensorflow_core.core.protobuf.config_pb2.ConfigProto",
      "tensorflow_core.core.protobuf.config_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.config_pb2.GPUOptions",
      "tensorflow_core.core.protobuf.config_pb2.GraphOptions",
      "tensorflow_core.core.protobuf.config_pb2.OptimizerOptions",
      "tensorflow_core.core.protobuf.config_pb2.RPCOptions",
      "tensorflow_core.core.protobuf.config_pb2.RunMetadata",
      "tensorflow_core.core.protobuf.config_pb2.RunOptions",
      "tensorflow_core.core.protobuf.config_pb2.SessionMetadata",
      "tensorflow_core.core.protobuf.config_pb2.TensorConnection",
      "tensorflow_core.core.protobuf.config_pb2.ThreadPoolOptionProto"
    ],
    "tensorflow_core/core/protobuf/control_flow_pb2.py": [
      "tensorflow_core.core.protobuf.control_flow_pb2.CondContextDef",
      "tensorflow_core.core.protobuf.control_flow_pb2.ControlFlowContextDef",
      "tensorflow_core.core.protobuf.control_flow_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.control_flow_pb2.ValuesDef",
      "tensorflow_core.core.protobuf.control_flow_pb2.WhileContextDef"
    ],
    "tensorflow_core/core/protobuf/data/__init__.py": [],
    "tensorflow_core/core/protobuf/data/experimental/__init__.py": [],
    "tensorflow_core/core/protobuf/data/experimental/snapshot_pb2.py": [
      "tensorflow_core.core.protobuf.data.experimental.snapshot_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.data.experimental.snapshot_pb2.SnapshotMetadataRecord",
      "tensorflow_core.core.protobuf.data.experimental.snapshot_pb2.SnapshotRecord"
    ],
    "tensorflow_core/core/protobuf/debug_pb2.py": [
      "tensorflow_core.core.protobuf.debug_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.debug_pb2.DebugOptions",
      "tensorflow_core.core.protobuf.debug_pb2.DebugTensorWatch",
      "tensorflow_core.core.protobuf.debug_pb2.DebuggedSourceFile",
      "tensorflow_core.core.protobuf.debug_pb2.DebuggedSourceFiles"
    ],
    "tensorflow_core/core/protobuf/device_properties_pb2.py": [
      "tensorflow_core.core.protobuf.device_properties_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.device_properties_pb2.DeviceProperties",
      "tensorflow_core.core.protobuf.device_properties_pb2.NamedDevice"
    ],
    "tensorflow_core/core/protobuf/graph_debug_info_pb2.py": [
      "tensorflow_core.core.protobuf.graph_debug_info_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.graph_debug_info_pb2.GraphDebugInfo"
    ],
    "tensorflow_core/core/protobuf/meta_graph_pb2.py": [
      "tensorflow_core.core.protobuf.meta_graph_pb2.AssetFileDef",
      "tensorflow_core.core.protobuf.meta_graph_pb2.CollectionDef",
      "tensorflow_core.core.protobuf.meta_graph_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.meta_graph_pb2.MetaGraphDef",
      "tensorflow_core.core.protobuf.meta_graph_pb2.SignatureDef",
      "tensorflow_core.core.protobuf.meta_graph_pb2.TensorInfo"
    ],
    "tensorflow_core/core/protobuf/named_tensor_pb2.py": [
      "tensorflow_core.core.protobuf.named_tensor_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.named_tensor_pb2.NamedTensorProto"
    ],
    "tensorflow_core/core/protobuf/queue_runner_pb2.py": [
      "tensorflow_core.core.protobuf.queue_runner_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.queue_runner_pb2.QueueRunnerDef"
    ],
    "tensorflow_core/core/protobuf/rewriter_config_pb2.py": [
      "tensorflow_core.core.protobuf.rewriter_config_pb2.AutoParallelOptions",
      "tensorflow_core.core.protobuf.rewriter_config_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.rewriter_config_pb2.RewriterConfig",
      "tensorflow_core.core.protobuf.rewriter_config_pb2.ScopedAllocatorOptions"
    ],
    "tensorflow_core/core/protobuf/saved_model_pb2.py": [
      "tensorflow_core.core.protobuf.saved_model_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.saved_model_pb2.SavedModel"
    ],
    "tensorflow_core/core/protobuf/saved_object_graph_pb2.py": [
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.FunctionSpec",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedAsset",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedBareConcreteFunction",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedConcreteFunction",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedConstant",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedFunction",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedObject",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedObjectGraph",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedResource",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedUserObject",
      "tensorflow_core.core.protobuf.saved_object_graph_pb2.SavedVariable"
    ],
    "tensorflow_core/core/protobuf/saver_pb2.py": [
      "tensorflow_core.core.protobuf.saver_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.saver_pb2.SaverDef"
    ],
    "tensorflow_core/core/protobuf/struct_pb2.py": [
      "tensorflow_core.core.protobuf.struct_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.struct_pb2.DictValue",
      "tensorflow_core.core.protobuf.struct_pb2.ListValue",
      "tensorflow_core.core.protobuf.struct_pb2.NamedTupleValue",
      "tensorflow_core.core.protobuf.struct_pb2.NoneValue",
      "tensorflow_core.core.protobuf.struct_pb2.PairValue",
      "tensorflow_core.core.protobuf.struct_pb2.StructuredValue",
      "tensorflow_core.core.protobuf.struct_pb2.TensorSpecProto",
      "tensorflow_core.core.protobuf.struct_pb2.TupleValue",
      "tensorflow_core.core.protobuf.struct_pb2.TypeSpecProto"
    ],
    "tensorflow_core/core/protobuf/tensor_bundle_pb2.py": [
      "tensorflow_core.core.protobuf.tensor_bundle_pb2.BundleEntryProto",
      "tensorflow_core.core.protobuf.tensor_bundle_pb2.BundleHeaderProto",
      "tensorflow_core.core.protobuf.tensor_bundle_pb2.DESCRIPTOR"
    ],
    "tensorflow_core/core/protobuf/tensorflow_server_pb2.py": [
      "tensorflow_core.core.protobuf.tensorflow_server_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.tensorflow_server_pb2.ServerDef"
    ],
    "tensorflow_core/core/protobuf/tpu/__init__.py": [],
    "tensorflow_core/core/protobuf/tpu/compilation_result_pb2.py": [
      "tensorflow_core.core.protobuf.tpu.compilation_result_pb2.CompilationResultProto",
      "tensorflow_core.core.protobuf.tpu.compilation_result_pb2.DESCRIPTOR"
    ],
    "tensorflow_core/core/protobuf/tpu/dynamic_padding_pb2.py": [
      "tensorflow_core.core.protobuf.tpu.dynamic_padding_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.tpu.dynamic_padding_pb2.PaddingMap"
    ],
    "tensorflow_core/core/protobuf/tpu/optimization_parameters_pb2.py": [
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.AdadeltaParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.AdagradParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.AdamParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.BoundedAdagradParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.CenteredRmsPropParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.ClippingLimits",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.DynamicLearningRate",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.FtrlParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.GradientAccumulationStatus",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.HotIdReplicationConfiguration",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.LearningRate",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.MdlAdagradLightParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.MomentumParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.OnlineYogiParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.OptimizationParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.ProximalAdagradParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.RmsPropParameters",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.StateVariableSpecification",
      "tensorflow_core.core.protobuf.tpu.optimization_parameters_pb2.StochasticGradientDescentParameters"
    ],
    "tensorflow_core/core/protobuf/tpu/topology_pb2.py": [
      "tensorflow_core.core.protobuf.tpu.topology_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.tpu.topology_pb2.TopologyProto"
    ],
    "tensorflow_core/core/protobuf/tpu/tpu_embedding_configuration_pb2.py": [
      "tensorflow_core.core.protobuf.tpu.tpu_embedding_configuration_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.tpu.tpu_embedding_configuration_pb2.TPUEmbeddingConfiguration"
    ],
    "tensorflow_core/core/protobuf/tpu/tpu_embedding_output_layout_pb2.py": [
      "tensorflow_core.core.protobuf.tpu.tpu_embedding_output_layout_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.tpu.tpu_embedding_output_layout_pb2.TPUEmbeddingOutputLayout"
    ],
    "tensorflow_core/core/protobuf/trace_events_pb2.py": [
      "tensorflow_core.core.protobuf.trace_events_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.trace_events_pb2.Device",
      "tensorflow_core.core.protobuf.trace_events_pb2.Resource",
      "tensorflow_core.core.protobuf.trace_events_pb2.Trace",
      "tensorflow_core.core.protobuf.trace_events_pb2.TraceEvent"
    ],
    "tensorflow_core/core/protobuf/trackable_object_graph_pb2.py": [
      "tensorflow_core.core.protobuf.trackable_object_graph_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.trackable_object_graph_pb2.TrackableObjectGraph"
    ],
    "tensorflow_core/core/protobuf/transport_options_pb2.py": [
      "tensorflow_core.core.protobuf.transport_options_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.transport_options_pb2.RecvBufRespExtra"
    ],
    "tensorflow_core/core/protobuf/verifier_config_pb2.py": [
      "tensorflow_core.core.protobuf.verifier_config_pb2.DESCRIPTOR",
      "tensorflow_core.core.protobuf.verifier_config_pb2.VerifierConfig"
    ],
    "tensorflow_core/core/util/__init__.py": [],
    "tensorflow_core/core/util/event_pb2.py": [
      "tensorflow_core.core.util.event_pb2.DEFAULT",
      "tensorflow_core.core.util.event_pb2.DESCRIPTOR",
      "tensorflow_core.core.util.event_pb2.Event",
      "tensorflow_core.core.util.event_pb2.INTERNAL_ERROR",
      "tensorflow_core.core.util.event_pb2.LogMessage",
      "tensorflow_core.core.util.event_pb2.NOT_CONFIGURED",
      "tensorflow_core.core.util.event_pb2.OK",
      "tensorflow_core.core.util.event_pb2.RECEIVED_SHUTDOWN_SIGNAL",
      "tensorflow_core.core.util.event_pb2.SHUTDOWN_AFTER_TIMEOUT",
      "tensorflow_core.core.util.event_pb2.SHUTTING_DOWN",
      "tensorflow_core.core.util.event_pb2.SessionLog",
      "tensorflow_core.core.util.event_pb2.TaggedRunMetadata",
      "tensorflow_core.core.util.event_pb2.WAIT_FOR_COORDINATOR",
      "tensorflow_core.core.util.event_pb2.WatchdogConfig",
      "tensorflow_core.core.util.event_pb2.WorkerHealth",
      "tensorflow_core.core.util.event_pb2.WorkerHeartbeatRequest",
      "tensorflow_core.core.util.event_pb2.WorkerHeartbeatResponse",
      "tensorflow_core.core.util.event_pb2.WorkerShutdownMode"
    ],
    "tensorflow_core/core/util/memmapped_file_system_pb2.py": [
      "tensorflow_core.core.util.memmapped_file_system_pb2.DESCRIPTOR",
      "tensorflow_core.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectory",
      "tensorflow_core.core.util.memmapped_file_system_pb2.MemmappedFileSystemDirectoryElement"
    ],
    "tensorflow_core/core/util/saved_tensor_slice_pb2.py": [
      "tensorflow_core.core.util.saved_tensor_slice_pb2.DESCRIPTOR",
      "tensorflow_core.core.util.saved_tensor_slice_pb2.SavedSlice",
      "tensorflow_core.core.util.saved_tensor_slice_pb2.SavedSliceMeta",
      "tensorflow_core.core.util.saved_tensor_slice_pb2.SavedTensorSliceMeta",
      "tensorflow_core.core.util.saved_tensor_slice_pb2.SavedTensorSlices"
    ],
    "tensorflow_core/core/util/test_log_pb2.py": [
      "tensorflow_core.core.util.test_log_pb2.AvailableDeviceInfo",
      "tensorflow_core.core.util.test_log_pb2.BenchmarkEntries",
      "tensorflow_core.core.util.test_log_pb2.BenchmarkEntry",
      "tensorflow_core.core.util.test_log_pb2.BuildConfiguration",
      "tensorflow_core.core.util.test_log_pb2.CPUInfo",
      "tensorflow_core.core.util.test_log_pb2.CommitId",
      "tensorflow_core.core.util.test_log_pb2.DESCRIPTOR",
      "tensorflow_core.core.util.test_log_pb2.EntryValue",
      "tensorflow_core.core.util.test_log_pb2.GPUInfo",
      "tensorflow_core.core.util.test_log_pb2.MachineConfiguration",
      "tensorflow_core.core.util.test_log_pb2.MemoryInfo",
      "tensorflow_core.core.util.test_log_pb2.MetricEntry",
      "tensorflow_core.core.util.test_log_pb2.PlatformInfo",
      "tensorflow_core.core.util.test_log_pb2.RunConfiguration",
      "tensorflow_core.core.util.test_log_pb2.TestResults"
    ],
    "tensorflow_core/examples/__init__.py": [],
    "tensorflow_core/examples/saved_model/__init__.py": [],
    "tensorflow_core/examples/saved_model/integration_tests/__init__.py": [],
    "tensorflow_core/examples/saved_model/integration_tests/mnist_util.py": [
      "tensorflow_core.examples.saved_model.integration_tests.mnist_util.INPUT_SHAPE",
      "tensorflow_core.examples.saved_model.integration_tests.mnist_util.NUM_CLASSES",
      "tensorflow_core.examples.saved_model.integration_tests.mnist_util.load_reshaped_data"
    ],
    "tensorflow_core/examples/tutorials/__init__.py": [],
    "tensorflow_core/examples/tutorials/mnist/__init__.py": [],
    "tensorflow_core/examples/tutorials/mnist/input_data.py": [],
    "tensorflow_core/lite/__init__.py": [],
    "tensorflow_core/lite/experimental/__init__.py": [],
    "tensorflow_core/lite/experimental/examples/__init__.py": [],
    "tensorflow_core/lite/experimental/examples/lstm/__init__.py": [],
    "tensorflow_core/lite/experimental/examples/lstm/rnn.py": [
      "tensorflow_core.lite.experimental.examples.lstm.rnn.bidirectional_dynamic_rnn",
      "tensorflow_core.lite.experimental.examples.lstm.rnn.dynamic_rnn"
    ],
    "tensorflow_core/lite/experimental/examples/lstm/rnn_cell.py": [
      "tensorflow_core.lite.experimental.examples.lstm.rnn_cell.TFLiteLSTMCell",
      "tensorflow_core.lite.experimental.examples.lstm.rnn_cell.TfLiteRNNCell"
    ],
    "tensorflow_core/lite/experimental/microfrontend/__init__.py": [],
    "tensorflow_core/lite/experimental/microfrontend/ops/__init__.py": [],
    "tensorflow_core/lite/experimental/microfrontend/ops/gen_audio_microfrontend_op.py": [
      "tensorflow_core.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op.AudioMicrofrontend",
      "tensorflow_core.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op.audio_microfrontend",
      "tensorflow_core.lite.experimental.microfrontend.ops.gen_audio_microfrontend_op.audio_microfrontend_eager_fallback"
    ],
    "tensorflow_core/lite/experimental/microfrontend/python/__init__.py": [],
    "tensorflow_core/lite/experimental/microfrontend/python/ops/__init__.py": [],
    "tensorflow_core/lite/experimental/microfrontend/python/ops/audio_microfrontend_op.py": [
      "tensorflow_core.lite.experimental.microfrontend.python.ops.audio_microfrontend_op.audio_microfrontend"
    ],
    "tensorflow_core/lite/experimental/tensorboard/__init__.py": [],
    "tensorflow_core/lite/experimental/tensorboard/ops_util.py": [
      "tensorflow_core.lite.experimental.tensorboard.ops_util.SupportedOp",
      "tensorflow_core.lite.experimental.tensorboard.ops_util.get_potentially_supported_ops"
    ],
    "tensorflow_core/lite/python/__init__.py": [],
    "tensorflow_core/lite/python/convert.py": [
      "tensorflow_core.lite.python.convert.ConverterError",
      "tensorflow_core.lite.python.convert.OpsSet",
      "tensorflow_core.lite.python.convert.build_toco_convert_protos",
      "tensorflow_core.lite.python.convert.toco_convert",
      "tensorflow_core.lite.python.convert.toco_convert_graph_def",
      "tensorflow_core.lite.python.convert.toco_convert_impl",
      "tensorflow_core.lite.python.convert.toco_convert_protos"
    ],
    "tensorflow_core/lite/python/convert_saved_model.py": [
      "tensorflow_core.lite.python.convert_saved_model.freeze_saved_model",
      "tensorflow_core.lite.python.convert_saved_model.get_inputs_outputs",
      "tensorflow_core.lite.python.convert_saved_model.get_meta_graph_def",
      "tensorflow_core.lite.python.convert_saved_model.get_signature_def"
    ],
    "tensorflow_core/lite/python/interpreter.py": [
      "tensorflow_core.lite.python.interpreter.Delegate",
      "tensorflow_core.lite.python.interpreter.Interpreter",
      "tensorflow_core.lite.python.interpreter.load_delegate"
    ],
    "tensorflow_core/lite/python/interpreter_wrapper/__init__.py": [],
    "tensorflow_core/lite/python/interpreter_wrapper/tensorflow_wrap_interpreter_wrapper.py": [
      "tensorflow_core.lite.python.interpreter_wrapper.tensorflow_wrap_interpreter_wrapper.InterpreterWrapper",
      "tensorflow_core.lite.python.interpreter_wrapper.tensorflow_wrap_interpreter_wrapper.InterpreterWrapper_CreateWrapperCPPFromBuffer",
      "tensorflow_core.lite.python.interpreter_wrapper.tensorflow_wrap_interpreter_wrapper.InterpreterWrapper_CreateWrapperCPPFromFile",
      "tensorflow_core.lite.python.interpreter_wrapper.tensorflow_wrap_interpreter_wrapper.InterpreterWrapper_swigregister"
    ],
    "tensorflow_core/lite/python/lite.py": [
      "tensorflow_core.lite.python.lite.Optimize",
      "tensorflow_core.lite.python.lite.RepresentativeDataset",
      "tensorflow_core.lite.python.lite.TFLiteConverter",
      "tensorflow_core.lite.python.lite.TFLiteConverterBase",
      "tensorflow_core.lite.python.lite.TFLiteConverterV2",
      "tensorflow_core.lite.python.lite.TargetSpec",
      "tensorflow_core.lite.python.lite.TocoConverter"
    ],
    "tensorflow_core/lite/python/lite_constants.py": [
      "tensorflow_core.lite.python.lite_constants.COMPLEX64",
      "tensorflow_core.lite.python.lite_constants.EXPERIMENTAL_USE_TOCO_API_DIRECTLY",
      "tensorflow_core.lite.python.lite_constants.FLOAT",
      "tensorflow_core.lite.python.lite_constants.FLOAT16",
      "tensorflow_core.lite.python.lite_constants.GRAPHVIZ_DOT",
      "tensorflow_core.lite.python.lite_constants.INT32",
      "tensorflow_core.lite.python.lite_constants.INT64",
      "tensorflow_core.lite.python.lite_constants.INT8",
      "tensorflow_core.lite.python.lite_constants.QUANTIZED_UINT8",
      "tensorflow_core.lite.python.lite_constants.STRING",
      "tensorflow_core.lite.python.lite_constants.TENSORFLOW_GRAPHDEF",
      "tensorflow_core.lite.python.lite_constants.TFLITE"
    ],
    "tensorflow_core/lite/python/op_hint.py": [
      "tensorflow_core.lite.python.op_hint.OpHint",
      "tensorflow_core.lite.python.op_hint.convert_op_hints_to_stubs",
      "tensorflow_core.lite.python.op_hint.find_all_hinted_output_nodes"
    ],
    "tensorflow_core/lite/python/optimize/__init__.py": [],
    "tensorflow_core/lite/python/optimize/calibrator.py": [
      "tensorflow_core.lite.python.optimize.calibrator.Calibrator"
    ],
    "tensorflow_core/lite/python/optimize/tensorflow_lite_wrap_calibration_wrapper.py": [
      "tensorflow_core.lite.python.optimize.tensorflow_lite_wrap_calibration_wrapper.CalibrationWrapper",
      "tensorflow_core.lite.python.optimize.tensorflow_lite_wrap_calibration_wrapper.CalibrationWrapper_CreateWrapperCPPFromBuffer",
      "tensorflow_core.lite.python.optimize.tensorflow_lite_wrap_calibration_wrapper.CalibrationWrapper_swigregister"
    ],
    "tensorflow_core/lite/python/tflite_convert.py": [
      "tensorflow_core.lite.python.tflite_convert.main",
      "tensorflow_core.lite.python.tflite_convert.run_main"
    ],
    "tensorflow_core/lite/python/util.py": [
      "tensorflow_core.lite.python.util.build_debug_info_func",
      "tensorflow_core.lite.python.util.convert_dtype_to_tflite_type",
      "tensorflow_core.lite.python.util.freeze_graph",
      "tensorflow_core.lite.python.util.get_debug_info",
      "tensorflow_core.lite.python.util.get_grappler_config",
      "tensorflow_core.lite.python.util.get_tensor_name",
      "tensorflow_core.lite.python.util.get_tensors_from_tensor_names",
      "tensorflow_core.lite.python.util.is_frozen_graph",
      "tensorflow_core.lite.python.util.run_graph_optimizations",
      "tensorflow_core.lite.python.util.set_tensor_shapes"
    ],
    "tensorflow_core/lite/python/wrap_toco.py": [
      "tensorflow_core.lite.python.wrap_toco.wrapped_get_potentially_supported_ops",
      "tensorflow_core.lite.python.wrap_toco.wrapped_toco_convert"
    ],
    "tensorflow_core/lite/toco/__init__.py": [],
    "tensorflow_core/lite/toco/model_flags_pb2.py": [
      "tensorflow_core.lite.toco.model_flags_pb2.ArraysExtraInfo",
      "tensorflow_core.lite.toco.model_flags_pb2.DESCRIPTOR",
      "tensorflow_core.lite.toco.model_flags_pb2.InputArray",
      "tensorflow_core.lite.toco.model_flags_pb2.InputArrayShape",
      "tensorflow_core.lite.toco.model_flags_pb2.ModelFlags",
      "tensorflow_core.lite.toco.model_flags_pb2.RnnState"
    ],
    "tensorflow_core/lite/toco/python/__init__.py": [],
    "tensorflow_core/lite/toco/python/toco_from_protos.py": [
      "tensorflow_core.lite.toco.python.toco_from_protos.FLAGS",
      "tensorflow_core.lite.toco.python.toco_from_protos.execute",
      "tensorflow_core.lite.toco.python.toco_from_protos.main"
    ],
    "tensorflow_core/lite/toco/toco_flags_pb2.py": [
      "tensorflow_core.lite.toco.toco_flags_pb2.DESCRIPTOR",
      "tensorflow_core.lite.toco.toco_flags_pb2.FILE_FORMAT_UNKNOWN",
      "tensorflow_core.lite.toco.toco_flags_pb2.FileFormat",
      "tensorflow_core.lite.toco.toco_flags_pb2.GRAPHVIZ_DOT",
      "tensorflow_core.lite.toco.toco_flags_pb2.TENSORFLOW_GRAPHDEF",
      "tensorflow_core.lite.toco.toco_flags_pb2.TFLITE",
      "tensorflow_core.lite.toco.toco_flags_pb2.TocoFlags"
    ],
    "tensorflow_core/lite/toco/types_pb2.py": [
      "tensorflow_core.lite.toco.types_pb2.BOOL",
      "tensorflow_core.lite.toco.types_pb2.COMPLEX64",
      "tensorflow_core.lite.toco.types_pb2.DESCRIPTOR",
      "tensorflow_core.lite.toco.types_pb2.FLOAT",
      "tensorflow_core.lite.toco.types_pb2.FLOAT16",
      "tensorflow_core.lite.toco.types_pb2.INT32",
      "tensorflow_core.lite.toco.types_pb2.INT64",
      "tensorflow_core.lite.toco.types_pb2.INT8",
      "tensorflow_core.lite.toco.types_pb2.IODataType",
      "tensorflow_core.lite.toco.types_pb2.IO_DATA_TYPE_UNKNOWN",
      "tensorflow_core.lite.toco.types_pb2.QUANTIZED_INT16",
      "tensorflow_core.lite.toco.types_pb2.QUANTIZED_UINT8",
      "tensorflow_core.lite.toco.types_pb2.STRING"
    ],
    "tensorflow_core/python/__init__.py": [],
    "tensorflow_core/python/autograph/__init__.py": [],
    "tensorflow_core/python/autograph/converters/__init__.py": [],
    "tensorflow_core/python/autograph/converters/arg_defaults.py": [
      "tensorflow_core.python.autograph.converters.arg_defaults.ArgDefaultsTransformer",
      "tensorflow_core.python.autograph.converters.arg_defaults.transform"
    ],
    "tensorflow_core/python/autograph/converters/asserts.py": [
      "tensorflow_core.python.autograph.converters.asserts.AssertTransformer",
      "tensorflow_core.python.autograph.converters.asserts.transform"
    ],
    "tensorflow_core/python/autograph/converters/break_statements.py": [
      "tensorflow_core.python.autograph.converters.break_statements.BreakTransformer",
      "tensorflow_core.python.autograph.converters.break_statements.transform"
    ],
    "tensorflow_core/python/autograph/converters/call_trees.py": [
      "tensorflow_core.python.autograph.converters.call_trees.CallTreeTransformer",
      "tensorflow_core.python.autograph.converters.call_trees.set_trace_warned",
      "tensorflow_core.python.autograph.converters.call_trees.transform"
    ],
    "tensorflow_core/python/autograph/converters/conditional_expressions.py": [
      "tensorflow_core.python.autograph.converters.conditional_expressions.ConditionalExpressionTransformer",
      "tensorflow_core.python.autograph.converters.conditional_expressions.transform"
    ],
    "tensorflow_core/python/autograph/converters/continue_statements.py": [
      "tensorflow_core.python.autograph.converters.continue_statements.ContinueCanonicalizationTransformer",
      "tensorflow_core.python.autograph.converters.continue_statements.transform"
    ],
    "tensorflow_core/python/autograph/converters/control_flow.py": [
      "tensorflow_core.python.autograph.converters.control_flow.ControlFlowTransformer",
      "tensorflow_core.python.autograph.converters.control_flow.transform"
    ],
    "tensorflow_core/python/autograph/converters/directives.py": [
      "tensorflow_core.python.autograph.converters.directives.DirectivesTransformer",
      "tensorflow_core.python.autograph.converters.directives.ENCLOSING_LOOP",
      "tensorflow_core.python.autograph.converters.directives.STATIC_VALUE",
      "tensorflow_core.python.autograph.converters.directives.transform"
    ],
    "tensorflow_core/python/autograph/converters/function_scopes.py": [
      "tensorflow_core.python.autograph.converters.function_scopes.FunctionBodyTransformer",
      "tensorflow_core.python.autograph.converters.function_scopes.transform"
    ],
    "tensorflow_core/python/autograph/converters/list_comprehensions.py": [
      "tensorflow_core.python.autograph.converters.list_comprehensions.ListCompTransformer",
      "tensorflow_core.python.autograph.converters.list_comprehensions.transform"
    ],
    "tensorflow_core/python/autograph/converters/lists.py": [
      "tensorflow_core.python.autograph.converters.lists.ListTransformer",
      "tensorflow_core.python.autograph.converters.lists.POP_USES",
      "tensorflow_core.python.autograph.converters.lists.transform"
    ],
    "tensorflow_core/python/autograph/converters/logical_expressions.py": [
      "tensorflow_core.python.autograph.converters.logical_expressions.EQUALITY_OPERATORS",
      "tensorflow_core.python.autograph.converters.logical_expressions.LOGICAL_OPERATORS",
      "tensorflow_core.python.autograph.converters.logical_expressions.LogicalExpressionTransformer",
      "tensorflow_core.python.autograph.converters.logical_expressions.SAFE_BOOLEAN_OPERAND",
      "tensorflow_core.python.autograph.converters.logical_expressions.transform"
    ],
    "tensorflow_core/python/autograph/converters/return_statements.py": [
      "tensorflow_core.python.autograph.converters.return_statements.BODY_DEFINITELY_RETURNS",
      "tensorflow_core.python.autograph.converters.return_statements.ConditionalReturnRewriter",
      "tensorflow_core.python.autograph.converters.return_statements.ORELSE_DEFINITELY_RETURNS",
      "tensorflow_core.python.autograph.converters.return_statements.ReturnStatementsTransformer",
      "tensorflow_core.python.autograph.converters.return_statements.STMT_DEFINITELY_RETURNS",
      "tensorflow_core.python.autograph.converters.return_statements.transform"
    ],
    "tensorflow_core/python/autograph/converters/slices.py": [
      "tensorflow_core.python.autograph.converters.slices.SliceTransformer",
      "tensorflow_core.python.autograph.converters.slices.transform"
    ],
    "tensorflow_core/python/autograph/core/__init__.py": [],
    "tensorflow_core/python/autograph/core/ag_ctx.py": [
      "tensorflow_core.python.autograph.core.ag_ctx.ControlStatusCtx",
      "tensorflow_core.python.autograph.core.ag_ctx.Status",
      "tensorflow_core.python.autograph.core.ag_ctx.control_status_ctx",
      "tensorflow_core.python.autograph.core.ag_ctx.stacks"
    ],
    "tensorflow_core/python/autograph/core/config.py": [
      "tensorflow_core.python.autograph.core.config.Action",
      "tensorflow_core.python.autograph.core.config.CONVERSION_RULES",
      "tensorflow_core.python.autograph.core.config.Convert",
      "tensorflow_core.python.autograph.core.config.DoNotConvert"
    ],
    "tensorflow_core/python/autograph/core/config_lib.py": [
      "tensorflow_core.python.autograph.core.config_lib.Action",
      "tensorflow_core.python.autograph.core.config_lib.Convert",
      "tensorflow_core.python.autograph.core.config_lib.DoNotConvert",
      "tensorflow_core.python.autograph.core.config_lib.Rule"
    ],
    "tensorflow_core/python/autograph/core/converter.py": [
      "tensorflow_core.python.autograph.core.converter.AgAnno",
      "tensorflow_core.python.autograph.core.converter.AnnotatedDef",
      "tensorflow_core.python.autograph.core.converter.Base",
      "tensorflow_core.python.autograph.core.converter.ConversionOptions",
      "tensorflow_core.python.autograph.core.converter.EntityContext",
      "tensorflow_core.python.autograph.core.converter.Feature",
      "tensorflow_core.python.autograph.core.converter.ProgramContext",
      "tensorflow_core.python.autograph.core.converter.STANDARD_OPTIONS",
      "tensorflow_core.python.autograph.core.converter.apply_",
      "tensorflow_core.python.autograph.core.converter.standard_analysis"
    ],
    "tensorflow_core/python/autograph/core/converter_testing.py": [
      "tensorflow_core.python.autograph.core.converter_testing.TestCase"
    ],
    "tensorflow_core/python/autograph/core/function_wrappers.py": [
      "tensorflow_core.python.autograph.core.function_wrappers.FunctionScope",
      "tensorflow_core.python.autograph.core.function_wrappers.with_function_scope"
    ],
    "tensorflow_core/python/autograph/core/naming.py": [
      "tensorflow_core.python.autograph.core.naming.Namer"
    ],
    "tensorflow_core/python/autograph/core/unsupported_features_checker.py": [
      "tensorflow_core.python.autograph.core.unsupported_features_checker.UnsupportedFeaturesChecker",
      "tensorflow_core.python.autograph.core.unsupported_features_checker.verify"
    ],
    "tensorflow_core/python/autograph/impl/__init__.py": [],
    "tensorflow_core/python/autograph/impl/api.py": [
      "tensorflow_core.python.autograph.impl.api.AutoGraphError",
      "tensorflow_core.python.autograph.impl.api.ConversionError",
      "tensorflow_core.python.autograph.impl.api.StackTraceMapper",
      "tensorflow_core.python.autograph.impl.api.StagingError",
      "tensorflow_core.python.autograph.impl.api.call_with_unspecified_conversion_status",
      "tensorflow_core.python.autograph.impl.api.convert",
      "tensorflow_core.python.autograph.impl.api.converted_call",
      "tensorflow_core.python.autograph.impl.api.do_not_convert",
      "tensorflow_core.python.autograph.impl.api.do_not_convert_internal",
      "tensorflow_core.python.autograph.impl.api.is_autograph_strict_conversion_mode",
      "tensorflow_core.python.autograph.impl.api.tf_convert",
      "tensorflow_core.python.autograph.impl.api.to_code",
      "tensorflow_core.python.autograph.impl.api.to_code_v1",
      "tensorflow_core.python.autograph.impl.api.to_graph",
      "tensorflow_core.python.autograph.impl.api.to_graph_v1"
    ],
    "tensorflow_core/python/autograph/impl/conversion.py": [
      "tensorflow_core.python.autograph.impl.conversion.ag_internal",
      "tensorflow_core.python.autograph.impl.conversion.cache_unconverted",
      "tensorflow_core.python.autograph.impl.conversion.check_cached_unconverted",
      "tensorflow_core.python.autograph.impl.conversion.convert",
      "tensorflow_core.python.autograph.impl.conversion.convert_class_to_ast",
      "tensorflow_core.python.autograph.impl.conversion.convert_entity_to_ast",
      "tensorflow_core.python.autograph.impl.conversion.convert_func_to_ast",
      "tensorflow_core.python.autograph.impl.conversion.is_whitelisted_for_graph",
      "tensorflow_core.python.autograph.impl.conversion.node_to_graph"
    ],
    "tensorflow_core/python/autograph/lang/__init__.py": [],
    "tensorflow_core/python/autograph/lang/directives.py": [
      "tensorflow_core.python.autograph.lang.directives.UNSPECIFIED",
      "tensorflow_core.python.autograph.lang.directives.set_element_type",
      "tensorflow_core.python.autograph.lang.directives.set_loop_options"
    ],
    "tensorflow_core/python/autograph/lang/special_functions.py": [
      "tensorflow_core.python.autograph.lang.special_functions.match_staging_level",
      "tensorflow_core.python.autograph.lang.special_functions.stack",
      "tensorflow_core.python.autograph.lang.special_functions.tensor_list"
    ],
    "tensorflow_core/python/autograph/operators/__init__.py": [],
    "tensorflow_core/python/autograph/operators/control_flow.py": [
      "tensorflow_core.python.autograph.operators.control_flow.INEFFICIENT_UNROLL_MIN_ITERATIONS",
      "tensorflow_core.python.autograph.operators.control_flow.INEFFICIENT_UNROLL_MIN_OPS",
      "tensorflow_core.python.autograph.operators.control_flow.LIMIT_PYTHON_ITERATIONS",
      "tensorflow_core.python.autograph.operators.control_flow.PYTHON_MAX_ITERATIONS",
      "tensorflow_core.python.autograph.operators.control_flow.WARN_INEFFICIENT_UNROLL",
      "tensorflow_core.python.autograph.operators.control_flow.for_stmt",
      "tensorflow_core.python.autograph.operators.control_flow.if_stmt",
      "tensorflow_core.python.autograph.operators.control_flow.tf_if_stmt",
      "tensorflow_core.python.autograph.operators.control_flow.while_stmt"
    ],
    "tensorflow_core/python/autograph/operators/data_structures.py": [
      "tensorflow_core.python.autograph.operators.data_structures.ListPopOpts",
      "tensorflow_core.python.autograph.operators.data_structures.ListStackOpts",
      "tensorflow_core.python.autograph.operators.data_structures.list_append",
      "tensorflow_core.python.autograph.operators.data_structures.list_pop",
      "tensorflow_core.python.autograph.operators.data_structures.list_stack",
      "tensorflow_core.python.autograph.operators.data_structures.new_list",
      "tensorflow_core.python.autograph.operators.data_structures.tf_tensor_array_new",
      "tensorflow_core.python.autograph.operators.data_structures.tf_tensor_list_new"
    ],
    "tensorflow_core/python/autograph/operators/exceptions.py": [
      "tensorflow_core.python.autograph.operators.exceptions.assert_stmt"
    ],
    "tensorflow_core/python/autograph/operators/logical.py": [
      "tensorflow_core.python.autograph.operators.logical.and_",
      "tensorflow_core.python.autograph.operators.logical.eq",
      "tensorflow_core.python.autograph.operators.logical.not_",
      "tensorflow_core.python.autograph.operators.logical.not_eq",
      "tensorflow_core.python.autograph.operators.logical.or_"
    ],
    "tensorflow_core/python/autograph/operators/py_builtins.py": [
      "tensorflow_core.python.autograph.operators.py_builtins.BUILTIN_FUINCTIONS_MAP",
      "tensorflow_core.python.autograph.operators.py_builtins.SUPPORTED_BUILTINS",
      "tensorflow_core.python.autograph.operators.py_builtins.UNSPECIFIED",
      "tensorflow_core.python.autograph.operators.py_builtins.abs_",
      "tensorflow_core.python.autograph.operators.py_builtins.enumerate_",
      "tensorflow_core.python.autograph.operators.py_builtins.eval_in_original_context",
      "tensorflow_core.python.autograph.operators.py_builtins.float_",
      "tensorflow_core.python.autograph.operators.py_builtins.int_",
      "tensorflow_core.python.autograph.operators.py_builtins.len_",
      "tensorflow_core.python.autograph.operators.py_builtins.overload_of",
      "tensorflow_core.python.autograph.operators.py_builtins.print_",
      "tensorflow_core.python.autograph.operators.py_builtins.range_",
      "tensorflow_core.python.autograph.operators.py_builtins.super_in_original_context",
      "tensorflow_core.python.autograph.operators.py_builtins.zip_"
    ],
    "tensorflow_core/python/autograph/operators/slices.py": [
      "tensorflow_core.python.autograph.operators.slices.GetItemOpts",
      "tensorflow_core.python.autograph.operators.slices.get_item",
      "tensorflow_core.python.autograph.operators.slices.set_item"
    ],
    "tensorflow_core/python/autograph/operators/special_values.py": [
      "tensorflow_core.python.autograph.operators.special_values.Undefined",
      "tensorflow_core.python.autograph.operators.special_values.UndefinedReturnValue",
      "tensorflow_core.python.autograph.operators.special_values.is_undefined",
      "tensorflow_core.python.autograph.operators.special_values.is_undefined_return",
      "tensorflow_core.python.autograph.operators.special_values.retval"
    ],
    "tensorflow_core/python/autograph/operators/symbols.py": [
      "tensorflow_core.python.autograph.operators.symbols.AttributeAccessSymbol",
      "tensorflow_core.python.autograph.operators.symbols.SubscriptSymbol",
      "tensorflow_core.python.autograph.operators.symbols.Symbol",
      "tensorflow_core.python.autograph.operators.symbols.Undefined",
      "tensorflow_core.python.autograph.operators.symbols.ValueSymbol",
      "tensorflow_core.python.autograph.operators.symbols.is_undefined"
    ],
    "tensorflow_core/python/autograph/pyct/__init__.py": [],
    "tensorflow_core/python/autograph/pyct/anno.py": [
      "tensorflow_core.python.autograph.pyct.anno.Basic",
      "tensorflow_core.python.autograph.pyct.anno.FAIL",
      "tensorflow_core.python.autograph.pyct.anno.NoValue",
      "tensorflow_core.python.autograph.pyct.anno.Static",
      "tensorflow_core.python.autograph.pyct.anno.copyanno",
      "tensorflow_core.python.autograph.pyct.anno.delanno",
      "tensorflow_core.python.autograph.pyct.anno.dup",
      "tensorflow_core.python.autograph.pyct.anno.getanno",
      "tensorflow_core.python.autograph.pyct.anno.hasanno",
      "tensorflow_core.python.autograph.pyct.anno.keys",
      "tensorflow_core.python.autograph.pyct.anno.setanno"
    ],
    "tensorflow_core/python/autograph/pyct/ast_util.py": [
      "tensorflow_core.python.autograph.pyct.ast_util.CleanCopier",
      "tensorflow_core.python.autograph.pyct.ast_util.LambdaDefinitionMatcher",
      "tensorflow_core.python.autograph.pyct.ast_util.PatternMatcher",
      "tensorflow_core.python.autograph.pyct.ast_util.SymbolRenamer",
      "tensorflow_core.python.autograph.pyct.ast_util.apply_to_single_assignments",
      "tensorflow_core.python.autograph.pyct.ast_util.copy_clean",
      "tensorflow_core.python.autograph.pyct.ast_util.find_matching_definitions",
      "tensorflow_core.python.autograph.pyct.ast_util.keywords_to_dict",
      "tensorflow_core.python.autograph.pyct.ast_util.matches",
      "tensorflow_core.python.autograph.pyct.ast_util.parallel_walk",
      "tensorflow_core.python.autograph.pyct.ast_util.rename_symbols"
    ],
    "tensorflow_core/python/autograph/pyct/cfg.py": [
      "tensorflow_core.python.autograph.pyct.cfg.AstToCfg",
      "tensorflow_core.python.autograph.pyct.cfg.Graph",
      "tensorflow_core.python.autograph.pyct.cfg.GraphBuilder",
      "tensorflow_core.python.autograph.pyct.cfg.GraphVisitor",
      "tensorflow_core.python.autograph.pyct.cfg.Node",
      "tensorflow_core.python.autograph.pyct.cfg.build"
    ],
    "tensorflow_core/python/autograph/pyct/common_transformers/__init__.py": [],
    "tensorflow_core/python/autograph/pyct/common_transformers/anf.py": [
      "tensorflow_core.python.autograph.pyct.common_transformers.anf.ANY",
      "tensorflow_core.python.autograph.pyct.common_transformers.anf.ASTEdgePattern",
      "tensorflow_core.python.autograph.pyct.common_transformers.anf.AnfTransformer",
      "tensorflow_core.python.autograph.pyct.common_transformers.anf.DummyGensym",
      "tensorflow_core.python.autograph.pyct.common_transformers.anf.LEAVE",
      "tensorflow_core.python.autograph.pyct.common_transformers.anf.REPLACE",
      "tensorflow_core.python.autograph.pyct.common_transformers.anf.transform"
    ],
    "tensorflow_core/python/autograph/pyct/compiler.py": [
      "tensorflow_core.python.autograph.pyct.compiler.ast_to_object",
      "tensorflow_core.python.autograph.pyct.compiler.ast_to_source",
      "tensorflow_core.python.autograph.pyct.compiler.source_to_entity"
    ],
    "tensorflow_core/python/autograph/pyct/errors.py": [
      "tensorflow_core.python.autograph.pyct.errors.ErrorMetadataBase",
      "tensorflow_core.python.autograph.pyct.errors.FrameInfo",
      "tensorflow_core.python.autograph.pyct.errors.KNOWN_STRING_CONSTRUCTOR_ERRORS",
      "tensorflow_core.python.autograph.pyct.errors.MultilineMessageKeyError"
    ],
    "tensorflow_core/python/autograph/pyct/inspect_utils.py": [
      "tensorflow_core.python.autograph.pyct.inspect_utils.SPECIAL_BUILTINS",
      "tensorflow_core.python.autograph.pyct.inspect_utils.getdefiningclass",
      "tensorflow_core.python.autograph.pyct.inspect_utils.getfutureimports",
      "tensorflow_core.python.autograph.pyct.inspect_utils.getimmediatesource",
      "tensorflow_core.python.autograph.pyct.inspect_utils.getmethodclass",
      "tensorflow_core.python.autograph.pyct.inspect_utils.getmethodself",
      "tensorflow_core.python.autograph.pyct.inspect_utils.getnamespace",
      "tensorflow_core.python.autograph.pyct.inspect_utils.getqualifiedname",
      "tensorflow_core.python.autograph.pyct.inspect_utils.isbuiltin",
      "tensorflow_core.python.autograph.pyct.inspect_utils.islambda",
      "tensorflow_core.python.autograph.pyct.inspect_utils.isnamedtuple",
      "tensorflow_core.python.autograph.pyct.inspect_utils.istfmethodtarget"
    ],
    "tensorflow_core/python/autograph/pyct/origin_info.py": [
      "tensorflow_core.python.autograph.pyct.origin_info.LineLocation",
      "tensorflow_core.python.autograph.pyct.origin_info.Location",
      "tensorflow_core.python.autograph.pyct.origin_info.OriginInfo",
      "tensorflow_core.python.autograph.pyct.origin_info.OriginResolver",
      "tensorflow_core.python.autograph.pyct.origin_info.create_source_map",
      "tensorflow_core.python.autograph.pyct.origin_info.resolve",
      "tensorflow_core.python.autograph.pyct.origin_info.resolve_entity"
    ],
    "tensorflow_core/python/autograph/pyct/parser.py": [
      "tensorflow_core.python.autograph.pyct.parser.STANDARD_PREAMBLE",
      "tensorflow_core.python.autograph.pyct.parser.STANDARD_PREAMBLE_LEN",
      "tensorflow_core.python.autograph.pyct.parser.parse_entity",
      "tensorflow_core.python.autograph.pyct.parser.parse_expression",
      "tensorflow_core.python.autograph.pyct.parser.parse_str"
    ],
    "tensorflow_core/python/autograph/pyct/pretty_printer.py": [
      "tensorflow_core.python.autograph.pyct.pretty_printer.PrettyPrinter",
      "tensorflow_core.python.autograph.pyct.pretty_printer.fmt"
    ],
    "tensorflow_core/python/autograph/pyct/qual_names.py": [
      "tensorflow_core.python.autograph.pyct.qual_names.NumberLiteral",
      "tensorflow_core.python.autograph.pyct.qual_names.QN",
      "tensorflow_core.python.autograph.pyct.qual_names.QnResolver",
      "tensorflow_core.python.autograph.pyct.qual_names.StringLiteral",
      "tensorflow_core.python.autograph.pyct.qual_names.Symbol",
      "tensorflow_core.python.autograph.pyct.qual_names.from_str",
      "tensorflow_core.python.autograph.pyct.qual_names.resolve"
    ],
    "tensorflow_core/python/autograph/pyct/static_analysis/__init__.py": [],
    "tensorflow_core/python/autograph/pyct/static_analysis/activity.py": [
      "tensorflow_core.python.autograph.pyct.static_analysis.activity.ActivityAnalyzer",
      "tensorflow_core.python.autograph.pyct.static_analysis.activity.Scope",
      "tensorflow_core.python.autograph.pyct.static_analysis.activity.resolve"
    ],
    "tensorflow_core/python/autograph/pyct/static_analysis/annos.py": [
      "tensorflow_core.python.autograph.pyct.static_analysis.annos.NoValue",
      "tensorflow_core.python.autograph.pyct.static_analysis.annos.NodeAnno"
    ],
    "tensorflow_core/python/autograph/pyct/static_analysis/liveness.py": [
      "tensorflow_core.python.autograph.pyct.static_analysis.liveness.Analyzer",
      "tensorflow_core.python.autograph.pyct.static_analysis.liveness.Annotator",
      "tensorflow_core.python.autograph.pyct.static_analysis.liveness.WholeTreeAnalyzer",
      "tensorflow_core.python.autograph.pyct.static_analysis.liveness.resolve"
    ],
    "tensorflow_core/python/autograph/pyct/static_analysis/reaching_definitions.py": [
      "tensorflow_core.python.autograph.pyct.static_analysis.reaching_definitions.Analyzer",
      "tensorflow_core.python.autograph.pyct.static_analysis.reaching_definitions.Definition",
      "tensorflow_core.python.autograph.pyct.static_analysis.reaching_definitions.TreeAnnotator",
      "tensorflow_core.python.autograph.pyct.static_analysis.reaching_definitions.resolve"
    ],
    "tensorflow_core/python/autograph/pyct/templates.py": [
      "tensorflow_core.python.autograph.pyct.templates.ContextAdjuster",
      "tensorflow_core.python.autograph.pyct.templates.ReplaceTransformer",
      "tensorflow_core.python.autograph.pyct.templates.replace",
      "tensorflow_core.python.autograph.pyct.templates.replace_as_expression"
    ],
    "tensorflow_core/python/autograph/pyct/testing/__init__.py": [],
    "tensorflow_core/python/autograph/pyct/testing/basic_definitions.py": [
      "tensorflow_core.python.autograph.pyct.testing.basic_definitions.SimpleClass",
      "tensorflow_core.python.autograph.pyct.testing.basic_definitions.function_with_multiline_call",
      "tensorflow_core.python.autograph.pyct.testing.basic_definitions.function_with_print",
      "tensorflow_core.python.autograph.pyct.testing.basic_definitions.nested_functions",
      "tensorflow_core.python.autograph.pyct.testing.basic_definitions.simple_function",
      "tensorflow_core.python.autograph.pyct.testing.basic_definitions.simple_lambda"
    ],
    "tensorflow_core/python/autograph/pyct/testing/decorators.py": [
      "tensorflow_core.python.autograph.pyct.testing.decorators.functional_decorator",
      "tensorflow_core.python.autograph.pyct.testing.decorators.standalone_decorator",
      "tensorflow_core.python.autograph.pyct.testing.decorators.wrapping_decorator"
    ],
    "tensorflow_core/python/autograph/pyct/transformer.py": [
      "tensorflow_core.python.autograph.pyct.transformer.Base",
      "tensorflow_core.python.autograph.pyct.transformer.Context",
      "tensorflow_core.python.autograph.pyct.transformer.EntityInfo"
    ],
    "tensorflow_core/python/autograph/utils/__init__.py": [],
    "tensorflow_core/python/autograph/utils/ag_logging.py": [
      "tensorflow_core.python.autograph.utils.ag_logging.DEFAULT_VERBOSITY",
      "tensorflow_core.python.autograph.utils.ag_logging.VERBOSITY_VAR_NAME",
      "tensorflow_core.python.autograph.utils.ag_logging.echo_log_to_stdout",
      "tensorflow_core.python.autograph.utils.ag_logging.error",
      "tensorflow_core.python.autograph.utils.ag_logging.get_verbosity",
      "tensorflow_core.python.autograph.utils.ag_logging.has_verbosity",
      "tensorflow_core.python.autograph.utils.ag_logging.log",
      "tensorflow_core.python.autograph.utils.ag_logging.set_verbosity",
      "tensorflow_core.python.autograph.utils.ag_logging.trace",
      "tensorflow_core.python.autograph.utils.ag_logging.verbosity_level",
      "tensorflow_core.python.autograph.utils.ag_logging.warn"
    ],
    "tensorflow_core/python/autograph/utils/context_managers.py": [
      "tensorflow_core.python.autograph.utils.context_managers.control_dependency_on_returns"
    ],
    "tensorflow_core/python/autograph/utils/misc.py": [
      "tensorflow_core.python.autograph.utils.misc.alias_tensors",
      "tensorflow_core.python.autograph.utils.misc.capitalize_initial",
      "tensorflow_core.python.autograph.utils.misc.get_range_len"
    ],
    "tensorflow_core/python/autograph/utils/py_func.py": [
      "tensorflow_core.python.autograph.utils.py_func.MatchDType",
      "tensorflow_core.python.autograph.utils.py_func.wrap_py_func"
    ],
    "tensorflow_core/python/autograph/utils/tensor_list.py": [
      "tensorflow_core.python.autograph.utils.tensor_list.TensorList",
      "tensorflow_core.python.autograph.utils.tensor_list.dynamic_list_append"
    ],
    "tensorflow_core/python/autograph/utils/tensors.py": [
      "tensorflow_core.python.autograph.utils.tensors.is_dense_tensor",
      "tensorflow_core.python.autograph.utils.tensors.is_range_tensor",
      "tensorflow_core.python.autograph.utils.tensors.is_tensor_array",
      "tensorflow_core.python.autograph.utils.tensors.is_tensor_list"
    ],
    "tensorflow_core/python/autograph/utils/testing.py": [
      "tensorflow_core.python.autograph.utils.testing.fake_tf"
    ],
    "tensorflow_core/python/autograph/utils/type_check.py": [
      "tensorflow_core.python.autograph.utils.type_check.is_tensor"
    ],
    "tensorflow_core/python/client/__init__.py": [],
    "tensorflow_core/python/client/client_lib.py": [],
    "tensorflow_core/python/client/device_lib.py": [
      "tensorflow_core.python.client.device_lib.list_local_devices"
    ],
    "tensorflow_core/python/client/session.py": [
      "tensorflow_core.python.client.session.BaseSession",
      "tensorflow_core.python.client.session.InteractiveSession",
      "tensorflow_core.python.client.session.Session",
      "tensorflow_core.python.client.session.SessionInterface",
      "tensorflow_core.python.client.session.register_session_run_conversion_functions"
    ],
    "tensorflow_core/python/client/timeline.py": [
      "tensorflow_core.python.client.timeline.AllocationMaximum",
      "tensorflow_core.python.client.timeline.StepStatsAnalysis",
      "tensorflow_core.python.client.timeline.Timeline"
    ],
    "tensorflow_core/python/compat/__init__.py": [],
    "tensorflow_core/python/compat/compat.py": [
      "tensorflow_core.python.compat.compat.forward_compatibility_horizon",
      "tensorflow_core.python.compat.compat.forward_compatible"
    ],
    "tensorflow_core/python/compat/v2_compat.py": [
      "tensorflow_core.python.compat.v2_compat.disable_v2_behavior",
      "tensorflow_core.python.compat.v2_compat.enable_v2_behavior"
    ],
    "tensorflow_core/python/compiler/__init__.py": [],
    "tensorflow_core/python/compiler/tensorrt/__init__.py": [],
    "tensorflow_core/python/compiler/tensorrt/test/__init__.py": [],
    "tensorflow_core/python/compiler/tensorrt/test/tf_trt_integration_test_base.py": [
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.FP16",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.FP32",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.GraphState",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.INT8",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.IsQuantizationMode",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.IsQuantizationWithCalibration",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.OptimizerDisabledRewriterConfig",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.PRECISION_MODES",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.RunParams",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.TfTrtIntegrationTestBase",
      "tensorflow_core.python.compiler.tensorrt.test.tf_trt_integration_test_base.TfTrtIntegrationTestParams"
    ],
    "tensorflow_core/python/compiler/tensorrt/trt_convert.py": [
      "tensorflow_core.python.compiler.tensorrt.trt_convert.DEFAULT_TRT_CONVERSION_PARAMS",
      "tensorflow_core.python.compiler.tensorrt.trt_convert.DEFAULT_TRT_MAX_WORKSPACE_SIZE_BYTES",
      "tensorflow_core.python.compiler.tensorrt.trt_convert.TrtConversionParams",
      "tensorflow_core.python.compiler.tensorrt.trt_convert.TrtGraphConverter",
      "tensorflow_core.python.compiler.tensorrt.trt_convert.TrtGraphConverterV2",
      "tensorflow_core.python.compiler.tensorrt.trt_convert.TrtPrecisionMode",
      "tensorflow_core.python.compiler.tensorrt.trt_convert.create_inference_graph",
      "tensorflow_core.python.compiler.tensorrt.trt_convert.gen_trt_ops",
      "tensorflow_core.python.compiler.tensorrt.trt_convert.get_tensorrt_rewriter_config"
    ],
    "tensorflow_core/python/compiler/xla/__init__.py": [],
    "tensorflow_core/python/compiler/xla/jit.py": [
      "tensorflow_core.python.compiler.xla.jit.experimental_jit_scope"
    ],
    "tensorflow_core/python/compiler/xla/xla.py": [
      "tensorflow_core.python.compiler.xla.xla.XLACompileContext",
      "tensorflow_core.python.compiler.xla.xla.check_function_argument_count",
      "tensorflow_core.python.compiler.xla.xla.compile",
      "tensorflow_core.python.compiler.xla.xla.is_flat"
    ],
    "tensorflow_core/python/data/__init__.py": [],
    "tensorflow_core/python/data/benchmarks/__init__.py": [],
    "tensorflow_core/python/data/benchmarks/benchmark_base.py": [
      "tensorflow_core.python.data.benchmarks.benchmark_base.DatasetBenchmarkBase"
    ],
    "tensorflow_core/python/data/experimental/__init__.py": [],
    "tensorflow_core/python/data/experimental/kernel_tests/__init__.py": [],
    "tensorflow_core/python/data/experimental/kernel_tests/reader_dataset_ops_test_base.py": [
      "tensorflow_core.python.data.experimental.kernel_tests.reader_dataset_ops_test_base.FixedLengthRecordDatasetTestBase",
      "tensorflow_core.python.data.experimental.kernel_tests.reader_dataset_ops_test_base.MakeBatchedFeaturesDatasetTestBase",
      "tensorflow_core.python.data.experimental.kernel_tests.reader_dataset_ops_test_base.TFRecordDatasetTestBase",
      "tensorflow_core.python.data.experimental.kernel_tests.reader_dataset_ops_test_base.TextLineDatasetTestBase"
    ],
    "tensorflow_core/python/data/experimental/kernel_tests/serialization/__init__.py": [],
    "tensorflow_core/python/data/experimental/kernel_tests/serialization/dataset_serialization_test_base.py": [
      "tensorflow_core.python.data.experimental.kernel_tests.serialization.dataset_serialization_test_base.DatasetSerializationTestBase",
      "tensorflow_core.python.data.experimental.kernel_tests.serialization.dataset_serialization_test_base.remove_variants"
    ],
    "tensorflow_core/python/data/experimental/kernel_tests/stats_dataset_test_base.py": [
      "tensorflow_core.python.data.experimental.kernel_tests.stats_dataset_test_base.StatsDatasetTestBase"
    ],
    "tensorflow_core/python/data/experimental/ops/__init__.py": [],
    "tensorflow_core/python/data/experimental/ops/batching.py": [
      "tensorflow_core.python.data.experimental.ops.batching.dense_to_sparse_batch",
      "tensorflow_core.python.data.experimental.ops.batching.map_and_batch",
      "tensorflow_core.python.data.experimental.ops.batching.map_and_batch_with_legacy_function",
      "tensorflow_core.python.data.experimental.ops.batching.unbatch"
    ],
    "tensorflow_core/python/data/experimental/ops/cardinality.py": [
      "tensorflow_core.python.data.experimental.ops.cardinality.INFINITE",
      "tensorflow_core.python.data.experimental.ops.cardinality.UNKNOWN",
      "tensorflow_core.python.data.experimental.ops.cardinality.cardinality"
    ],
    "tensorflow_core/python/data/experimental/ops/counter.py": [
      "tensorflow_core.python.data.experimental.ops.counter.Counter",
      "tensorflow_core.python.data.experimental.ops.counter.CounterV1",
      "tensorflow_core.python.data.experimental.ops.counter.CounterV2"
    ],
    "tensorflow_core/python/data/experimental/ops/distribute.py": [
      "tensorflow_core.python.data.experimental.ops.distribute.replicate"
    ],
    "tensorflow_core/python/data/experimental/ops/distribute_options.py": [
      "tensorflow_core.python.data.experimental.ops.distribute_options.DistributeOptions"
    ],
    "tensorflow_core/python/data/experimental/ops/enumerate_ops.py": [
      "tensorflow_core.python.data.experimental.ops.enumerate_ops.enumerate_dataset"
    ],
    "tensorflow_core/python/data/experimental/ops/error_ops.py": [
      "tensorflow_core.python.data.experimental.ops.error_ops.ignore_errors"
    ],
    "tensorflow_core/python/data/experimental/ops/get_single_element.py": [
      "tensorflow_core.python.data.experimental.ops.get_single_element.get_single_element"
    ],
    "tensorflow_core/python/data/experimental/ops/grouping.py": [
      "tensorflow_core.python.data.experimental.ops.grouping.Reducer",
      "tensorflow_core.python.data.experimental.ops.grouping.bucket_by_sequence_length",
      "tensorflow_core.python.data.experimental.ops.grouping.group_by_reducer",
      "tensorflow_core.python.data.experimental.ops.grouping.group_by_window"
    ],
    "tensorflow_core/python/data/experimental/ops/interleave_ops.py": [
      "tensorflow_core.python.data.experimental.ops.interleave_ops.choose_from_datasets",
      "tensorflow_core.python.data.experimental.ops.interleave_ops.choose_from_datasets_v1",
      "tensorflow_core.python.data.experimental.ops.interleave_ops.choose_from_datasets_v2",
      "tensorflow_core.python.data.experimental.ops.interleave_ops.parallel_interleave",
      "tensorflow_core.python.data.experimental.ops.interleave_ops.sample_from_datasets",
      "tensorflow_core.python.data.experimental.ops.interleave_ops.sample_from_datasets_v1",
      "tensorflow_core.python.data.experimental.ops.interleave_ops.sample_from_datasets_v2"
    ],
    "tensorflow_core/python/data/experimental/ops/iterator_ops.py": [
      "tensorflow_core.python.data.experimental.ops.iterator_ops.CheckpointInputPipelineHook",
      "tensorflow_core.python.data.experimental.ops.iterator_ops.make_saveable_from_iterator"
    ],
    "tensorflow_core/python/data/experimental/ops/map_defun.py": [
      "tensorflow_core.python.data.experimental.ops.map_defun.map_defun"
    ],
    "tensorflow_core/python/data/experimental/ops/matching_files.py": [
      "tensorflow_core.python.data.experimental.ops.matching_files.MatchingFilesDataset"
    ],
    "tensorflow_core/python/data/experimental/ops/optimization.py": [
      "tensorflow_core.python.data.experimental.ops.optimization.assert_next",
      "tensorflow_core.python.data.experimental.ops.optimization.model",
      "tensorflow_core.python.data.experimental.ops.optimization.non_serializable",
      "tensorflow_core.python.data.experimental.ops.optimization.optimize"
    ],
    "tensorflow_core/python/data/experimental/ops/optimization_options.py": [
      "tensorflow_core.python.data.experimental.ops.optimization_options.MapVectorizationOptions",
      "tensorflow_core.python.data.experimental.ops.optimization_options.OptimizationOptions"
    ],
    "tensorflow_core/python/data/experimental/ops/parsing_ops.py": [
      "tensorflow_core.python.data.experimental.ops.parsing_ops.parse_example_dataset"
    ],
    "tensorflow_core/python/data/experimental/ops/prefetching_ops.py": [
      "tensorflow_core.python.data.experimental.ops.prefetching_ops.copy_to_device",
      "tensorflow_core.python.data.experimental.ops.prefetching_ops.map_on_gpu",
      "tensorflow_core.python.data.experimental.ops.prefetching_ops.prefetch_to_device"
    ],
    "tensorflow_core/python/data/experimental/ops/random_ops.py": [
      "tensorflow_core.python.data.experimental.ops.random_ops.RandomDataset",
      "tensorflow_core.python.data.experimental.ops.random_ops.RandomDatasetV1",
      "tensorflow_core.python.data.experimental.ops.random_ops.RandomDatasetV2"
    ],
    "tensorflow_core/python/data/experimental/ops/readers.py": [
      "tensorflow_core.python.data.experimental.ops.readers.CsvDataset",
      "tensorflow_core.python.data.experimental.ops.readers.CsvDatasetV1",
      "tensorflow_core.python.data.experimental.ops.readers.CsvDatasetV2",
      "tensorflow_core.python.data.experimental.ops.readers.SqlDataset",
      "tensorflow_core.python.data.experimental.ops.readers.SqlDatasetV1",
      "tensorflow_core.python.data.experimental.ops.readers.SqlDatasetV2",
      "tensorflow_core.python.data.experimental.ops.readers.make_batched_features_dataset",
      "tensorflow_core.python.data.experimental.ops.readers.make_batched_features_dataset_v1",
      "tensorflow_core.python.data.experimental.ops.readers.make_batched_features_dataset_v2",
      "tensorflow_core.python.data.experimental.ops.readers.make_csv_dataset",
      "tensorflow_core.python.data.experimental.ops.readers.make_csv_dataset_v1",
      "tensorflow_core.python.data.experimental.ops.readers.make_csv_dataset_v2",
      "tensorflow_core.python.data.experimental.ops.readers.make_tf_record_dataset"
    ],
    "tensorflow_core/python/data/experimental/ops/resampling.py": [
      "tensorflow_core.python.data.experimental.ops.resampling.rejection_resample"
    ],
    "tensorflow_core/python/data/experimental/ops/scan_ops.py": [
      "tensorflow_core.python.data.experimental.ops.scan_ops.scan"
    ],
    "tensorflow_core/python/data/experimental/ops/shuffle_ops.py": [
      "tensorflow_core.python.data.experimental.ops.shuffle_ops.shuffle_and_repeat"
    ],
    "tensorflow_core/python/data/experimental/ops/sleep.py": [
      "tensorflow_core.python.data.experimental.ops.sleep.sleep"
    ],
    "tensorflow_core/python/data/experimental/ops/snapshot.py": [
      "tensorflow_core.python.data.experimental.ops.snapshot.COMPRESSION_GZIP",
      "tensorflow_core.python.data.experimental.ops.snapshot.COMPRESSION_NONE",
      "tensorflow_core.python.data.experimental.ops.snapshot.snapshot"
    ],
    "tensorflow_core/python/data/experimental/ops/stats_aggregator.py": [
      "tensorflow_core.python.data.experimental.ops.stats_aggregator.StatsAggregator",
      "tensorflow_core.python.data.experimental.ops.stats_aggregator.StatsAggregatorV1",
      "tensorflow_core.python.data.experimental.ops.stats_aggregator.StatsAggregatorV2"
    ],
    "tensorflow_core/python/data/experimental/ops/stats_ops.py": [
      "tensorflow_core.python.data.experimental.ops.stats_ops.bytes_produced_stats",
      "tensorflow_core.python.data.experimental.ops.stats_ops.latency_stats",
      "tensorflow_core.python.data.experimental.ops.stats_ops.set_stats_aggregator"
    ],
    "tensorflow_core/python/data/experimental/ops/stats_options.py": [
      "tensorflow_core.python.data.experimental.ops.stats_options.StatsOptions"
    ],
    "tensorflow_core/python/data/experimental/ops/take_while_ops.py": [
      "tensorflow_core.python.data.experimental.ops.take_while_ops.take_while"
    ],
    "tensorflow_core/python/data/experimental/ops/threading_options.py": [
      "tensorflow_core.python.data.experimental.ops.threading_options.ThreadingOptions"
    ],
    "tensorflow_core/python/data/experimental/ops/threadpool.py": [
      "tensorflow_core.python.data.experimental.ops.threadpool.PrivateThreadPool",
      "tensorflow_core.python.data.experimental.ops.threadpool.override_threadpool"
    ],
    "tensorflow_core/python/data/experimental/ops/unique.py": [
      "tensorflow_core.python.data.experimental.ops.unique.unique"
    ],
    "tensorflow_core/python/data/experimental/ops/writers.py": [
      "tensorflow_core.python.data.experimental.ops.writers.TFRecordWriter"
    ],
    "tensorflow_core/python/data/kernel_tests/__init__.py": [],
    "tensorflow_core/python/data/kernel_tests/test_base.py": [
      "tensorflow_core.python.data.kernel_tests.test_base.DatasetTestBase",
      "tensorflow_core.python.data.kernel_tests.test_base.default_test_combinations"
    ],
    "tensorflow_core/python/data/ops/__init__.py": [],
    "tensorflow_core/python/data/ops/dataset_ops.py": [
      "tensorflow_core.python.data.ops.dataset_ops.AUTOTUNE",
      "tensorflow_core.python.data.ops.dataset_ops.AutotuneAlgorithm",
      "tensorflow_core.python.data.ops.dataset_ops.BatchDataset",
      "tensorflow_core.python.data.ops.dataset_ops.CacheDataset",
      "tensorflow_core.python.data.ops.dataset_ops.ConcatenateDataset",
      "tensorflow_core.python.data.ops.dataset_ops.Dataset",
      "tensorflow_core.python.data.ops.dataset_ops.DatasetSource",
      "tensorflow_core.python.data.ops.dataset_ops.DatasetSpec",
      "tensorflow_core.python.data.ops.dataset_ops.DatasetV1",
      "tensorflow_core.python.data.ops.dataset_ops.DatasetV1Adapter",
      "tensorflow_core.python.data.ops.dataset_ops.DatasetV2",
      "tensorflow_core.python.data.ops.dataset_ops.FilterDataset",
      "tensorflow_core.python.data.ops.dataset_ops.FlatMapDataset",
      "tensorflow_core.python.data.ops.dataset_ops.InterleaveDataset",
      "tensorflow_core.python.data.ops.dataset_ops.MapDataset",
      "tensorflow_core.python.data.ops.dataset_ops.Options",
      "tensorflow_core.python.data.ops.dataset_ops.PaddedBatchDataset",
      "tensorflow_core.python.data.ops.dataset_ops.ParallelInterleaveDataset",
      "tensorflow_core.python.data.ops.dataset_ops.ParallelMapDataset",
      "tensorflow_core.python.data.ops.dataset_ops.PrefetchDataset",
      "tensorflow_core.python.data.ops.dataset_ops.RangeDataset",
      "tensorflow_core.python.data.ops.dataset_ops.RepeatDataset",
      "tensorflow_core.python.data.ops.dataset_ops.ShardDataset",
      "tensorflow_core.python.data.ops.dataset_ops.ShuffleDataset",
      "tensorflow_core.python.data.ops.dataset_ops.SkipDataset",
      "tensorflow_core.python.data.ops.dataset_ops.SparseTensorSliceDataset",
      "tensorflow_core.python.data.ops.dataset_ops.StructuredFunctionWrapper",
      "tensorflow_core.python.data.ops.dataset_ops.TakeDataset",
      "tensorflow_core.python.data.ops.dataset_ops.TensorDataset",
      "tensorflow_core.python.data.ops.dataset_ops.TensorSliceDataset",
      "tensorflow_core.python.data.ops.dataset_ops.UnaryDataset",
      "tensorflow_core.python.data.ops.dataset_ops.UnaryUnchangedStructureDataset",
      "tensorflow_core.python.data.ops.dataset_ops.WindowDataset",
      "tensorflow_core.python.data.ops.dataset_ops.ZipDataset",
      "tensorflow_core.python.data.ops.dataset_ops.autograph",
      "tensorflow_core.python.data.ops.dataset_ops.autograph_ctx",
      "tensorflow_core.python.data.ops.dataset_ops.from_variant",
      "tensorflow_core.python.data.ops.dataset_ops.get_legacy_output_classes",
      "tensorflow_core.python.data.ops.dataset_ops.get_legacy_output_shapes",
      "tensorflow_core.python.data.ops.dataset_ops.get_legacy_output_types",
      "tensorflow_core.python.data.ops.dataset_ops.get_structure",
      "tensorflow_core.python.data.ops.dataset_ops.make_initializable_iterator",
      "tensorflow_core.python.data.ops.dataset_ops.make_one_shot_iterator",
      "tensorflow_core.python.data.ops.dataset_ops.to_variant",
      "tensorflow_core.python.data.ops.dataset_ops.wrap_function"
    ],
    "tensorflow_core/python/data/ops/iterator_ops.py": [
      "tensorflow_core.python.data.ops.iterator_ops.GET_NEXT_CALL_WARNING_MESSAGE",
      "tensorflow_core.python.data.ops.iterator_ops.GET_NEXT_CALL_WARNING_THRESHOLD",
      "tensorflow_core.python.data.ops.iterator_ops.GLOBAL_ITERATORS",
      "tensorflow_core.python.data.ops.iterator_ops.Iterator",
      "tensorflow_core.python.data.ops.iterator_ops.IteratorResourceDeleter",
      "tensorflow_core.python.data.ops.iterator_ops.IteratorSpec",
      "tensorflow_core.python.data.ops.iterator_ops.IteratorV2",
      "tensorflow_core.python.data.ops.iterator_ops.get_next_as_optional"
    ],
    "tensorflow_core/python/data/ops/multi_device_iterator_ops.py": [
      "tensorflow_core.python.data.ops.multi_device_iterator_ops.MultiDeviceIterator",
      "tensorflow_core.python.data.ops.multi_device_iterator_ops.MultiDeviceIteratorResourceDeleter",
      "tensorflow_core.python.data.ops.multi_device_iterator_ops.MultiDeviceIteratorSpec",
      "tensorflow_core.python.data.ops.multi_device_iterator_ops.MultiDeviceIteratorV2"
    ],
    "tensorflow_core/python/data/ops/optional_ops.py": [
      "tensorflow_core.python.data.ops.optional_ops.Optional",
      "tensorflow_core.python.data.ops.optional_ops.OptionalSpec"
    ],
    "tensorflow_core/python/data/ops/readers.py": [
      "tensorflow_core.python.data.ops.readers.FixedLengthRecordDataset",
      "tensorflow_core.python.data.ops.readers.FixedLengthRecordDatasetV1",
      "tensorflow_core.python.data.ops.readers.FixedLengthRecordDatasetV2",
      "tensorflow_core.python.data.ops.readers.ParallelInterleaveDataset",
      "tensorflow_core.python.data.ops.readers.TFRecordDataset",
      "tensorflow_core.python.data.ops.readers.TFRecordDatasetV1",
      "tensorflow_core.python.data.ops.readers.TFRecordDatasetV2",
      "tensorflow_core.python.data.ops.readers.TextLineDataset",
      "tensorflow_core.python.data.ops.readers.TextLineDatasetV1",
      "tensorflow_core.python.data.ops.readers.TextLineDatasetV2"
    ],
    "tensorflow_core/python/data/util/__init__.py": [],
    "tensorflow_core/python/data/util/convert.py": [
      "tensorflow_core.python.data.util.convert.optional_param_to_tensor",
      "tensorflow_core.python.data.util.convert.partial_shape_to_tensor"
    ],
    "tensorflow_core/python/data/util/nest.py": [
      "tensorflow_core.python.data.util.nest.assert_same_structure",
      "tensorflow_core.python.data.util.nest.assert_shallow_structure",
      "tensorflow_core.python.data.util.nest.flatten",
      "tensorflow_core.python.data.util.nest.flatten_up_to",
      "tensorflow_core.python.data.util.nest.is_sequence",
      "tensorflow_core.python.data.util.nest.map_structure",
      "tensorflow_core.python.data.util.nest.map_structure_up_to",
      "tensorflow_core.python.data.util.nest.pack_sequence_as"
    ],
    "tensorflow_core/python/data/util/options.py": [
      "tensorflow_core.python.data.util.options.OptionsBase",
      "tensorflow_core.python.data.util.options.create_option",
      "tensorflow_core.python.data.util.options.merge_options"
    ],
    "tensorflow_core/python/data/util/random_seed.py": [
      "tensorflow_core.python.data.util.random_seed.get_seed"
    ],
    "tensorflow_core/python/data/util/sparse.py": [
      "tensorflow_core.python.data.util.sparse.any_sparse",
      "tensorflow_core.python.data.util.sparse.as_dense_shapes",
      "tensorflow_core.python.data.util.sparse.as_dense_types",
      "tensorflow_core.python.data.util.sparse.deserialize_sparse_tensors",
      "tensorflow_core.python.data.util.sparse.get_classes",
      "tensorflow_core.python.data.util.sparse.serialize_many_sparse_tensors",
      "tensorflow_core.python.data.util.sparse.serialize_sparse_tensors"
    ],
    "tensorflow_core/python/data/util/structure.py": [
      "tensorflow_core.python.data.util.structure.are_compatible",
      "tensorflow_core.python.data.util.structure.convert_legacy_structure",
      "tensorflow_core.python.data.util.structure.from_compatible_tensor_list",
      "tensorflow_core.python.data.util.structure.from_tensor_list",
      "tensorflow_core.python.data.util.structure.get_flat_tensor_shapes",
      "tensorflow_core.python.data.util.structure.get_flat_tensor_specs",
      "tensorflow_core.python.data.util.structure.get_flat_tensor_types",
      "tensorflow_core.python.data.util.structure.normalize_element",
      "tensorflow_core.python.data.util.structure.to_batched_tensor_list",
      "tensorflow_core.python.data.util.structure.to_tensor_list",
      "tensorflow_core.python.data.util.structure.type_spec_from_value"
    ],
    "tensorflow_core/python/data/util/traverse.py": [
      "tensorflow_core.python.data.util.traverse.obtain_all_variant_tensor_ops"
    ],
    "tensorflow_core/python/debug/__init__.py": [],
    "tensorflow_core/python/debug/cli/__init__.py": [],
    "tensorflow_core/python/debug/cli/analyzer_cli.py": [
      "tensorflow_core.python.debug.cli.analyzer_cli.CTRL_LABEL",
      "tensorflow_core.python.debug.cli.analyzer_cli.DEPTH_TEMPLATE",
      "tensorflow_core.python.debug.cli.analyzer_cli.DebugAnalyzer",
      "tensorflow_core.python.debug.cli.analyzer_cli.ELLIPSIS",
      "tensorflow_core.python.debug.cli.analyzer_cli.HANG_FINISHED",
      "tensorflow_core.python.debug.cli.analyzer_cli.HANG_SUFFIX",
      "tensorflow_core.python.debug.cli.analyzer_cli.HANG_UNFINISHED",
      "tensorflow_core.python.debug.cli.analyzer_cli.OP_TYPE_TEMPLATE",
      "tensorflow_core.python.debug.cli.analyzer_cli.RL",
      "tensorflow_core.python.debug.cli.analyzer_cli.SORT_TENSORS_BY_DUMP_SIZE",
      "tensorflow_core.python.debug.cli.analyzer_cli.SORT_TENSORS_BY_OP_TYPE",
      "tensorflow_core.python.debug.cli.analyzer_cli.SORT_TENSORS_BY_TENSOR_NAME",
      "tensorflow_core.python.debug.cli.analyzer_cli.SORT_TENSORS_BY_TIMESTAMP",
      "tensorflow_core.python.debug.cli.analyzer_cli.create_analyzer_ui"
    ],
    "tensorflow_core/python/debug/cli/base_ui.py": [
      "tensorflow_core.python.debug.cli.base_ui.BaseUI"
    ],
    "tensorflow_core/python/debug/cli/cli_config.py": [
      "tensorflow_core.python.debug.cli.cli_config.CLIConfig",
      "tensorflow_core.python.debug.cli.cli_config.RL"
    ],
    "tensorflow_core/python/debug/cli/cli_shared.py": [
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_BLACK",
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_BLUE",
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_CYAN",
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_GRAY",
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_GREEN",
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_MAGENTA",
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_RED",
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_WHITE",
      "tensorflow_core.python.debug.cli.cli_shared.COLOR_YELLOW",
      "tensorflow_core.python.debug.cli.cli_shared.DEFAULT_NDARRAY_DISPLAY_THRESHOLD",
      "tensorflow_core.python.debug.cli.cli_shared.RL",
      "tensorflow_core.python.debug.cli.cli_shared.TIME_UNITS",
      "tensorflow_core.python.debug.cli.cli_shared.TIME_UNIT_MS",
      "tensorflow_core.python.debug.cli.cli_shared.TIME_UNIT_S",
      "tensorflow_core.python.debug.cli.cli_shared.TIME_UNIT_US",
      "tensorflow_core.python.debug.cli.cli_shared.bytes_to_readable_str",
      "tensorflow_core.python.debug.cli.cli_shared.error",
      "tensorflow_core.python.debug.cli.cli_shared.format_tensor",
      "tensorflow_core.python.debug.cli.cli_shared.get_error_intro",
      "tensorflow_core.python.debug.cli.cli_shared.get_run_short_description",
      "tensorflow_core.python.debug.cli.cli_shared.get_run_start_intro",
      "tensorflow_core.python.debug.cli.cli_shared.get_tfdbg_logo",
      "tensorflow_core.python.debug.cli.cli_shared.numpy_printoptions_from_screen_info",
      "tensorflow_core.python.debug.cli.cli_shared.parse_ranges_highlight",
      "tensorflow_core.python.debug.cli.cli_shared.time_to_readable_str"
    ],
    "tensorflow_core/python/debug/cli/cli_test_utils.py": [
      "tensorflow_core.python.debug.cli.cli_test_utils.assert_array_lines_close",
      "tensorflow_core.python.debug.cli.cli_test_utils.assert_lines_equal_ignoring_whitespace"
    ],
    "tensorflow_core/python/debug/cli/command_parser.py": [
      "tensorflow_core.python.debug.cli.command_parser.Interval",
      "tensorflow_core.python.debug.cli.command_parser.evaluate_tensor_slice",
      "tensorflow_core.python.debug.cli.command_parser.extract_output_file_path",
      "tensorflow_core.python.debug.cli.command_parser.get_print_tensor_argparser",
      "tensorflow_core.python.debug.cli.command_parser.parse_command",
      "tensorflow_core.python.debug.cli.command_parser.parse_indices",
      "tensorflow_core.python.debug.cli.command_parser.parse_memory_interval",
      "tensorflow_core.python.debug.cli.command_parser.parse_ranges",
      "tensorflow_core.python.debug.cli.command_parser.parse_readable_size_str",
      "tensorflow_core.python.debug.cli.command_parser.parse_readable_time_str",
      "tensorflow_core.python.debug.cli.command_parser.parse_tensor_name_with_slicing",
      "tensorflow_core.python.debug.cli.command_parser.parse_time_interval",
      "tensorflow_core.python.debug.cli.command_parser.validate_slicing_string"
    ],
    "tensorflow_core/python/debug/cli/curses_ui.py": [
      "tensorflow_core.python.debug.cli.curses_ui.CursesUI",
      "tensorflow_core.python.debug.cli.curses_ui.ScrollBar"
    ],
    "tensorflow_core/python/debug/cli/curses_widgets.py": [
      "tensorflow_core.python.debug.cli.curses_widgets.CursesNavigationHistory",
      "tensorflow_core.python.debug.cli.curses_widgets.NavigationHistoryItem",
      "tensorflow_core.python.debug.cli.curses_widgets.RL"
    ],
    "tensorflow_core/python/debug/cli/debugger_cli_common.py": [
      "tensorflow_core.python.debug.cli.debugger_cli_common.CommandHandlerRegistry",
      "tensorflow_core.python.debug.cli.debugger_cli_common.CommandHistory",
      "tensorflow_core.python.debug.cli.debugger_cli_common.CommandLineExit",
      "tensorflow_core.python.debug.cli.debugger_cli_common.EXPLICIT_USER_EXIT",
      "tensorflow_core.python.debug.cli.debugger_cli_common.HELP_INDENT",
      "tensorflow_core.python.debug.cli.debugger_cli_common.INIT_SCROLL_POS_KEY",
      "tensorflow_core.python.debug.cli.debugger_cli_common.MAIN_MENU_KEY",
      "tensorflow_core.python.debug.cli.debugger_cli_common.Menu",
      "tensorflow_core.python.debug.cli.debugger_cli_common.MenuItem",
      "tensorflow_core.python.debug.cli.debugger_cli_common.REGEX_MATCH_LINES_KEY",
      "tensorflow_core.python.debug.cli.debugger_cli_common.RichLine",
      "tensorflow_core.python.debug.cli.debugger_cli_common.RichTextLines",
      "tensorflow_core.python.debug.cli.debugger_cli_common.TabCompletionRegistry",
      "tensorflow_core.python.debug.cli.debugger_cli_common.get_tensorflow_version_lines",
      "tensorflow_core.python.debug.cli.debugger_cli_common.regex_find",
      "tensorflow_core.python.debug.cli.debugger_cli_common.rich_text_lines_from_rich_line_list",
      "tensorflow_core.python.debug.cli.debugger_cli_common.wrap_rich_text_lines"
    ],
    "tensorflow_core/python/debug/cli/evaluator.py": [
      "tensorflow_core.python.debug.cli.evaluator.ExpressionEvaluator"
    ],
    "tensorflow_core/python/debug/cli/offline_analyzer.py": [
      "tensorflow_core.python.debug.cli.offline_analyzer.main"
    ],
    "tensorflow_core/python/debug/cli/profile_analyzer_cli.py": [
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.ProfileAnalyzer",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.ProfileDataTableView",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.RL",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.SORT_OPS_BY_EXEC_TIME",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.SORT_OPS_BY_LINE",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.SORT_OPS_BY_OP_NAME",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.SORT_OPS_BY_OP_TIME",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.SORT_OPS_BY_OP_TYPE",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.SORT_OPS_BY_START_TIME",
      "tensorflow_core.python.debug.cli.profile_analyzer_cli.create_profiler_ui"
    ],
    "tensorflow_core/python/debug/cli/readline_ui.py": [
      "tensorflow_core.python.debug.cli.readline_ui.ReadlineUI"
    ],
    "tensorflow_core/python/debug/cli/tensor_format.py": [
      "tensorflow_core.python.debug.cli.tensor_format.BEGIN_INDICES_KEY",
      "tensorflow_core.python.debug.cli.tensor_format.DEFAULT_TENSOR_ELEMENT_HIGHLIGHT_FONT_ATTR",
      "tensorflow_core.python.debug.cli.tensor_format.HighlightOptions",
      "tensorflow_core.python.debug.cli.tensor_format.OMITTED_INDICES_KEY",
      "tensorflow_core.python.debug.cli.tensor_format.format_tensor",
      "tensorflow_core.python.debug.cli.tensor_format.locate_tensor_element",
      "tensorflow_core.python.debug.cli.tensor_format.numeric_summary"
    ],
    "tensorflow_core/python/debug/cli/ui_factory.py": [
      "tensorflow_core.python.debug.cli.ui_factory.SUPPORTED_UI_TYPES",
      "tensorflow_core.python.debug.cli.ui_factory.get_ui"
    ],
    "tensorflow_core/python/debug/examples/__init__.py": [],
    "tensorflow_core/python/debug/examples/debug_errors.py": [
      "tensorflow_core.python.debug.examples.debug_errors.main",
      "tensorflow_core.python.debug.examples.debug_errors.tf"
    ],
    "tensorflow_core/python/debug/examples/debug_fibonacci.py": [
      "tensorflow_core.python.debug.examples.debug_fibonacci.FLAGS",
      "tensorflow_core.python.debug.examples.debug_fibonacci.main",
      "tensorflow_core.python.debug.examples.debug_fibonacci.tf"
    ],
    "tensorflow_core/python/debug/examples/debug_keras.py": [
      "tensorflow_core.python.debug.examples.debug_keras.main",
      "tensorflow_core.python.debug.examples.debug_keras.tf"
    ],
    "tensorflow_core/python/debug/examples/debug_mnist.py": [
      "tensorflow_core.python.debug.examples.debug_mnist.HIDDEN_SIZE",
      "tensorflow_core.python.debug.examples.debug_mnist.IMAGE_SIZE",
      "tensorflow_core.python.debug.examples.debug_mnist.NUM_LABELS",
      "tensorflow_core.python.debug.examples.debug_mnist.RAND_SEED",
      "tensorflow_core.python.debug.examples.debug_mnist.main",
      "tensorflow_core.python.debug.examples.debug_mnist.tf"
    ],
    "tensorflow_core/python/debug/examples/debug_tflearn_iris.py": [
      "tensorflow_core.python.debug.examples.debug_tflearn_iris.main",
      "tensorflow_core.python.debug.examples.debug_tflearn_iris.tf"
    ],
    "tensorflow_core/python/debug/lib/__init__.py": [],
    "tensorflow_core/python/debug/lib/common.py": [
      "tensorflow_core.python.debug.lib.common.GRPC_URL_PREFIX",
      "tensorflow_core.python.debug.lib.common.RunKey",
      "tensorflow_core.python.debug.lib.common.get_flattened_names",
      "tensorflow_core.python.debug.lib.common.get_graph_element_name",
      "tensorflow_core.python.debug.lib.common.get_run_key"
    ],
    "tensorflow_core/python/debug/lib/debug_data.py": [
      "tensorflow_core.python.debug.lib.debug_data.CORE_METADATA_TAG",
      "tensorflow_core.python.debug.lib.debug_data.DEVICE_TAG",
      "tensorflow_core.python.debug.lib.debug_data.DebugDumpDir",
      "tensorflow_core.python.debug.lib.debug_data.DebugTensorDatum",
      "tensorflow_core.python.debug.lib.debug_data.FEED_KEYS_INFO_FILE_TAG",
      "tensorflow_core.python.debug.lib.debug_data.FETCHES_INFO_FILE_TAG",
      "tensorflow_core.python.debug.lib.debug_data.GRAPH_FILE_TAG",
      "tensorflow_core.python.debug.lib.debug_data.HASH_TAG",
      "tensorflow_core.python.debug.lib.debug_data.InconvertibleTensorProto",
      "tensorflow_core.python.debug.lib.debug_data.METADATA_FILE_PREFIX",
      "tensorflow_core.python.debug.lib.debug_data.WatchKeyDoesNotExistInDebugDumpDirError",
      "tensorflow_core.python.debug.lib.debug_data.device_name_to_device_path",
      "tensorflow_core.python.debug.lib.debug_data.device_path_to_device_name",
      "tensorflow_core.python.debug.lib.debug_data.extract_core_metadata_from_event_proto",
      "tensorflow_core.python.debug.lib.debug_data.has_inf_or_nan",
      "tensorflow_core.python.debug.lib.debug_data.load_tensor_from_event",
      "tensorflow_core.python.debug.lib.debug_data.load_tensor_from_event_file"
    ],
    "tensorflow_core/python/debug/lib/debug_gradients.py": [
      "tensorflow_core.python.debug.lib.debug_gradients.GradientsDebugger",
      "tensorflow_core.python.debug.lib.debug_gradients.clear_gradient_debuggers",
      "tensorflow_core.python.debug.lib.debug_gradients.gradient_values_from_dump"
    ],
    "tensorflow_core/python/debug/lib/debug_graphs.py": [
      "tensorflow_core.python.debug.lib.debug_graphs.DFSGraphTracer",
      "tensorflow_core.python.debug.lib.debug_graphs.DebugGraph",
      "tensorflow_core.python.debug.lib.debug_graphs.GraphTracingReachedDestination",
      "tensorflow_core.python.debug.lib.debug_graphs.get_node_name",
      "tensorflow_core.python.debug.lib.debug_graphs.get_output_slot",
      "tensorflow_core.python.debug.lib.debug_graphs.is_copy_node",
      "tensorflow_core.python.debug.lib.debug_graphs.is_debug_node",
      "tensorflow_core.python.debug.lib.debug_graphs.parse_debug_node_name",
      "tensorflow_core.python.debug.lib.debug_graphs.parse_node_or_tensor_name",
      "tensorflow_core.python.debug.lib.debug_graphs.reconstruct_non_debug_graph_def"
    ],
    "tensorflow_core/python/debug/lib/debug_service_pb2_grpc.py": [
      "tensorflow_core.python.debug.lib.debug_service_pb2_grpc.EventListenerServicer",
      "tensorflow_core.python.debug.lib.debug_service_pb2_grpc.EventListenerStub",
      "tensorflow_core.python.debug.lib.debug_service_pb2_grpc.add_EventListenerServicer_to_server"
    ],
    "tensorflow_core/python/debug/lib/debug_utils.py": [
      "tensorflow_core.python.debug.lib.debug_utils.add_debug_tensor_watch",
      "tensorflow_core.python.debug.lib.debug_utils.watch_graph",
      "tensorflow_core.python.debug.lib.debug_utils.watch_graph_with_blacklists"
    ],
    "tensorflow_core/python/debug/lib/grpc_debug_server.py": [
      "tensorflow_core.python.debug.lib.grpc_debug_server.DebugWatch",
      "tensorflow_core.python.debug.lib.grpc_debug_server.EventListenerBaseServicer",
      "tensorflow_core.python.debug.lib.grpc_debug_server.EventListenerBaseStreamHandler"
    ],
    "tensorflow_core/python/debug/lib/grpc_debug_test_server.py": [
      "tensorflow_core.python.debug.lib.grpc_debug_test_server.EventListenerTestServicer",
      "tensorflow_core.python.debug.lib.grpc_debug_test_server.EventListenerTestStreamHandler",
      "tensorflow_core.python.debug.lib.grpc_debug_test_server.start_server_on_separate_thread"
    ],
    "tensorflow_core/python/debug/lib/grpc_tensorflow_server.py": [
      "tensorflow_core.python.debug.lib.grpc_tensorflow_server.main",
      "tensorflow_core.python.debug.lib.grpc_tensorflow_server.parse_cluster_spec"
    ],
    "tensorflow_core/python/debug/lib/profiling.py": [
      "tensorflow_core.python.debug.lib.profiling.AggregateProfile",
      "tensorflow_core.python.debug.lib.profiling.ProfileDatum"
    ],
    "tensorflow_core/python/debug/lib/session_debug_testlib.py": [
      "tensorflow_core.python.debug.lib.session_debug_testlib.DebugConcurrentRunCallsTest",
      "tensorflow_core.python.debug.lib.session_debug_testlib.SessionDebugTestBase",
      "tensorflow_core.python.debug.lib.session_debug_testlib.no_rewrite_session_config"
    ],
    "tensorflow_core/python/debug/lib/source_remote.py": [
      "tensorflow_core.python.debug.lib.source_remote.send_eager_tracebacks",
      "tensorflow_core.python.debug.lib.source_remote.send_graph_tracebacks"
    ],
    "tensorflow_core/python/debug/lib/source_utils.py": [
      "tensorflow_core.python.debug.lib.source_utils.COMPILED_SOURCE_SUFFIXES",
      "tensorflow_core.python.debug.lib.source_utils.UNCOMPILED_SOURCE_SUFFIXES",
      "tensorflow_core.python.debug.lib.source_utils.annotate_source",
      "tensorflow_core.python.debug.lib.source_utils.annotate_source_against_profile",
      "tensorflow_core.python.debug.lib.source_utils.guess_is_tensorflow_py_library",
      "tensorflow_core.python.debug.lib.source_utils.is_extension_compiled_python_source",
      "tensorflow_core.python.debug.lib.source_utils.is_extension_uncompiled_python_source",
      "tensorflow_core.python.debug.lib.source_utils.list_source_files_against_dump",
      "tensorflow_core.python.debug.lib.source_utils.load_source"
    ],
    "tensorflow_core/python/debug/wrappers/__init__.py": [],
    "tensorflow_core/python/debug/wrappers/dumping_wrapper.py": [
      "tensorflow_core.python.debug.wrappers.dumping_wrapper.DumpingDebugWrapperSession"
    ],
    "tensorflow_core/python/debug/wrappers/framework.py": [
      "tensorflow_core.python.debug.wrappers.framework.BaseDebugWrapperSession",
      "tensorflow_core.python.debug.wrappers.framework.NonInteractiveDebugWrapperSession",
      "tensorflow_core.python.debug.wrappers.framework.OnRunEndRequest",
      "tensorflow_core.python.debug.wrappers.framework.OnRunEndResponse",
      "tensorflow_core.python.debug.wrappers.framework.OnRunStartAction",
      "tensorflow_core.python.debug.wrappers.framework.OnRunStartRequest",
      "tensorflow_core.python.debug.wrappers.framework.OnRunStartResponse",
      "tensorflow_core.python.debug.wrappers.framework.OnSessionInitAction",
      "tensorflow_core.python.debug.wrappers.framework.OnSessionInitRequest",
      "tensorflow_core.python.debug.wrappers.framework.OnSessionInitResponse",
      "tensorflow_core.python.debug.wrappers.framework.WatchOptions"
    ],
    "tensorflow_core/python/debug/wrappers/grpc_wrapper.py": [
      "tensorflow_core.python.debug.wrappers.grpc_wrapper.GrpcDebugWrapperSession",
      "tensorflow_core.python.debug.wrappers.grpc_wrapper.TensorBoardDebugWrapperSession",
      "tensorflow_core.python.debug.wrappers.grpc_wrapper.publish_traceback",
      "tensorflow_core.python.debug.wrappers.grpc_wrapper.register_signal_handler"
    ],
    "tensorflow_core/python/debug/wrappers/hooks.py": [
      "tensorflow_core.python.debug.wrappers.hooks.DumpingDebugHook",
      "tensorflow_core.python.debug.wrappers.hooks.GrpcDebugHook",
      "tensorflow_core.python.debug.wrappers.hooks.LocalCLIDebugHook",
      "tensorflow_core.python.debug.wrappers.hooks.TensorBoardDebugHook"
    ],
    "tensorflow_core/python/debug/wrappers/local_cli_wrapper.py": [
      "tensorflow_core.python.debug.wrappers.local_cli_wrapper.LocalCLIDebugWrapperSession"
    ],
    "tensorflow_core/python/distribute/__init__.py": [],
    "tensorflow_core/python/distribute/all_reduce.py": [
      "tensorflow_core.python.distribute.all_reduce.build_nccl_all_reduce",
      "tensorflow_core.python.distribute.all_reduce.build_nccl_then_recursive_hd",
      "tensorflow_core.python.distribute.all_reduce.build_nccl_then_ring",
      "tensorflow_core.python.distribute.all_reduce.build_nccl_then_shuffle",
      "tensorflow_core.python.distribute.all_reduce.build_recursive_hd_all_reduce",
      "tensorflow_core.python.distribute.all_reduce.build_ring_all_reduce",
      "tensorflow_core.python.distribute.all_reduce.build_shuffle_all_reduce",
      "tensorflow_core.python.distribute.all_reduce.build_shuffle_then_ring",
      "tensorflow_core.python.distribute.all_reduce.build_shuffle_then_shuffle"
    ],
    "tensorflow_core/python/distribute/central_storage_strategy.py": [
      "tensorflow_core.python.distribute.central_storage_strategy.CentralStorageStrategy",
      "tensorflow_core.python.distribute.central_storage_strategy.CentralStorageStrategyV1"
    ],
    "tensorflow_core/python/distribute/cluster_resolver/__init__.py": [],
    "tensorflow_core/python/distribute/cluster_resolver/cluster_resolver.py": [
      "tensorflow_core.python.distribute.cluster_resolver.cluster_resolver.ClusterResolver",
      "tensorflow_core.python.distribute.cluster_resolver.cluster_resolver.DEVICE_TYPE_REGEX",
      "tensorflow_core.python.distribute.cluster_resolver.cluster_resolver.SimpleClusterResolver",
      "tensorflow_core.python.distribute.cluster_resolver.cluster_resolver.UnionClusterResolver",
      "tensorflow_core.python.distribute.cluster_resolver.cluster_resolver.format_master_url",
      "tensorflow_core.python.distribute.cluster_resolver.cluster_resolver.get_accelerator_devices"
    ],
    "tensorflow_core/python/distribute/cluster_resolver/gce_cluster_resolver.py": [
      "tensorflow_core.python.distribute.cluster_resolver.gce_cluster_resolver.GCEClusterResolver"
    ],
    "tensorflow_core/python/distribute/cluster_resolver/kubernetes_cluster_resolver.py": [
      "tensorflow_core.python.distribute.cluster_resolver.kubernetes_cluster_resolver.KubernetesClusterResolver"
    ],
    "tensorflow_core/python/distribute/cluster_resolver/slurm_cluster_resolver.py": [
      "tensorflow_core.python.distribute.cluster_resolver.slurm_cluster_resolver.SlurmClusterResolver"
    ],
    "tensorflow_core/python/distribute/cluster_resolver/tfconfig_cluster_resolver.py": [
      "tensorflow_core.python.distribute.cluster_resolver.tfconfig_cluster_resolver.TFConfigClusterResolver",
      "tensorflow_core.python.distribute.cluster_resolver.tfconfig_cluster_resolver.format_master_url"
    ],
    "tensorflow_core/python/distribute/cluster_resolver/tpu_cluster_resolver.py": [
      "tensorflow_core.python.distribute.cluster_resolver.tpu_cluster_resolver.DeviceDetails",
      "tensorflow_core.python.distribute.cluster_resolver.tpu_cluster_resolver.TPUClusterResolver",
      "tensorflow_core.python.distribute.cluster_resolver.tpu_cluster_resolver.is_running_in_gce"
    ],
    "tensorflow_core/python/distribute/collective_all_reduce_strategy.py": [
      "tensorflow_core.python.distribute.collective_all_reduce_strategy.CollectiveAllReduceExtended",
      "tensorflow_core.python.distribute.collective_all_reduce_strategy.CollectiveAllReduceStrategy",
      "tensorflow_core.python.distribute.collective_all_reduce_strategy.CollectiveAllReduceStrategyV1"
    ],
    "tensorflow_core/python/distribute/combinations.py": [
      "tensorflow_core.python.distribute.combinations.DistributionParameter",
      "tensorflow_core.python.distribute.combinations.GPUCombination",
      "tensorflow_core.python.distribute.combinations.NamedDistribution",
      "tensorflow_core.python.distribute.combinations.NamedGPUCombination",
      "tensorflow_core.python.distribute.combinations.NamedObject",
      "tensorflow_core.python.distribute.combinations.NamedTPUCombination",
      "tensorflow_core.python.distribute.combinations.TPUCombination",
      "tensorflow_core.python.distribute.combinations.combine",
      "tensorflow_core.python.distribute.combinations.generate",
      "tensorflow_core.python.distribute.combinations.times"
    ],
    "tensorflow_core/python/distribute/cross_device_ops.py": [
      "tensorflow_core.python.distribute.cross_device_ops.AllReduceCrossDeviceOps",
      "tensorflow_core.python.distribute.cross_device_ops.AllReduceCrossTowerOps",
      "tensorflow_core.python.distribute.cross_device_ops.AllReduceSpecTuple",
      "tensorflow_core.python.distribute.cross_device_ops.CollectiveAllReduce",
      "tensorflow_core.python.distribute.cross_device_ops.CollectiveCommunication",
      "tensorflow_core.python.distribute.cross_device_ops.CrossDeviceOps",
      "tensorflow_core.python.distribute.cross_device_ops.HierarchicalCopyAllReduce",
      "tensorflow_core.python.distribute.cross_device_ops.MultiWorkerAllReduce",
      "tensorflow_core.python.distribute.cross_device_ops.NcclAllReduce",
      "tensorflow_core.python.distribute.cross_device_ops.ReductionToOneDevice",
      "tensorflow_core.python.distribute.cross_device_ops.check_destinations",
      "tensorflow_core.python.distribute.cross_device_ops.choose_the_best",
      "tensorflow_core.python.distribute.cross_device_ops.get_device_map_from",
      "tensorflow_core.python.distribute.cross_device_ops.get_devices_from",
      "tensorflow_core.python.distribute.cross_device_ops.reduce_non_distributed_value",
      "tensorflow_core.python.distribute.cross_device_ops.simple_broadcast",
      "tensorflow_core.python.distribute.cross_device_ops.validate_destinations"
    ],
    "tensorflow_core/python/distribute/cross_device_utils.py": [
      "tensorflow_core.python.distribute.cross_device_utils.CollectiveKeys",
      "tensorflow_core.python.distribute.cross_device_utils.GradPackTuple",
      "tensorflow_core.python.distribute.cross_device_utils.aggregate_gradients_using_hierarchical_copy",
      "tensorflow_core.python.distribute.cross_device_utils.aggregate_gradients_using_nccl",
      "tensorflow_core.python.distribute.cross_device_utils.aggregate_single_gradient_using_copy",
      "tensorflow_core.python.distribute.cross_device_utils.aggregate_tensors_or_indexed_slices",
      "tensorflow_core.python.distribute.cross_device_utils.build_collective_gather",
      "tensorflow_core.python.distribute.cross_device_utils.build_collective_reduce",
      "tensorflow_core.python.distribute.cross_device_utils.contains_indexed_slices",
      "tensorflow_core.python.distribute.cross_device_utils.copy_tensor_or_indexed_slices_to_device",
      "tensorflow_core.python.distribute.cross_device_utils.divide_by_n_tensors_or_indexed_slices",
      "tensorflow_core.python.distribute.cross_device_utils.extract_ranges",
      "tensorflow_core.python.distribute.cross_device_utils.group_device_names",
      "tensorflow_core.python.distribute.cross_device_utils.is_indexed_slices",
      "tensorflow_core.python.distribute.cross_device_utils.pack_range",
      "tensorflow_core.python.distribute.cross_device_utils.pack_small_tensors",
      "tensorflow_core.python.distribute.cross_device_utils.split_by_sparsity",
      "tensorflow_core.python.distribute.cross_device_utils.split_grads_by_size",
      "tensorflow_core.python.distribute.cross_device_utils.stitch_values",
      "tensorflow_core.python.distribute.cross_device_utils.sum_grad_and_var_all_reduce",
      "tensorflow_core.python.distribute.cross_device_utils.sum_gradients_all_reduce",
      "tensorflow_core.python.distribute.cross_device_utils.unpack_grad_tuple",
      "tensorflow_core.python.distribute.cross_device_utils.unpack_small_tensors"
    ],
    "tensorflow_core/python/distribute/device_util.py": [
      "tensorflow_core.python.distribute.device_util.canonicalize",
      "tensorflow_core.python.distribute.device_util.current",
      "tensorflow_core.python.distribute.device_util.get_host_for_device",
      "tensorflow_core.python.distribute.device_util.local_devices_from_num_gpus",
      "tensorflow_core.python.distribute.device_util.resolve"
    ],
    "tensorflow_core/python/distribute/distribute_config.py": [
      "tensorflow_core.python.distribute.distribute_config.DistributeConfig"
    ],
    "tensorflow_core/python/distribute/distribute_coordinator.py": [
      "tensorflow_core.python.distribute.distribute_coordinator.CoordinatorMode",
      "tensorflow_core.python.distribute.distribute_coordinator.run_distribute_coordinator",
      "tensorflow_core.python.distribute.distribute_coordinator.run_standard_tensorflow_server"
    ],
    "tensorflow_core/python/distribute/distribute_coordinator_context.py": [
      "tensorflow_core.python.distribute.distribute_coordinator_context.get_current_worker_context"
    ],
    "tensorflow_core/python/distribute/distribute_lib.py": [
      "tensorflow_core.python.distribute.distribute_lib.InputContext",
      "tensorflow_core.python.distribute.distribute_lib.InputReplicationMode",
      "tensorflow_core.python.distribute.distribute_lib.ReplicaContext",
      "tensorflow_core.python.distribute.distribute_lib.Strategy",
      "tensorflow_core.python.distribute.distribute_lib.StrategyExtendedV1",
      "tensorflow_core.python.distribute.distribute_lib.StrategyExtendedV2",
      "tensorflow_core.python.distribute.distribute_lib.StrategyV1",
      "tensorflow_core.python.distribute.distribute_lib.UpdateContext",
      "tensorflow_core.python.distribute.distribute_lib.create_mirrored_variable",
      "tensorflow_core.python.distribute.distribute_lib.get_loss_reduction",
      "tensorflow_core.python.distribute.distribute_lib.get_update_device",
      "tensorflow_core.python.distribute.distribute_lib.require_replica_context"
    ],
    "tensorflow_core/python/distribute/distribution_strategy_context.py": [
      "tensorflow_core.python.distribute.distribution_strategy_context.distribute_lib",
      "tensorflow_core.python.distribute.distribution_strategy_context.experimental_set_strategy",
      "tensorflow_core.python.distribute.distribution_strategy_context.get_cross_replica_context",
      "tensorflow_core.python.distribute.distribution_strategy_context.get_distribution_strategy",
      "tensorflow_core.python.distribute.distribution_strategy_context.get_replica_context",
      "tensorflow_core.python.distribute.distribution_strategy_context.get_strategy",
      "tensorflow_core.python.distribute.distribution_strategy_context.get_strategy_and_replica_context",
      "tensorflow_core.python.distribute.distribution_strategy_context.has_distribution_strategy",
      "tensorflow_core.python.distribute.distribution_strategy_context.has_strategy",
      "tensorflow_core.python.distribute.distribution_strategy_context.in_cross_replica_context"
    ],
    "tensorflow_core/python/distribute/estimator_training.py": [
      "tensorflow_core.python.distribute.estimator_training.CHIEF",
      "tensorflow_core.python.distribute.estimator_training.EVALUATOR",
      "tensorflow_core.python.distribute.estimator_training.PS",
      "tensorflow_core.python.distribute.estimator_training.WORKER",
      "tensorflow_core.python.distribute.estimator_training.estimator_evaluate",
      "tensorflow_core.python.distribute.estimator_training.estimator_train",
      "tensorflow_core.python.distribute.estimator_training.init_run_config",
      "tensorflow_core.python.distribute.estimator_training.should_run_distribute_coordinator",
      "tensorflow_core.python.distribute.estimator_training.train_and_evaluate"
    ],
    "tensorflow_core/python/distribute/experimental/__init__.py": [],
    "tensorflow_core/python/distribute/input_lib.py": [
      "tensorflow_core.python.distribute.input_lib.DatasetIterator",
      "tensorflow_core.python.distribute.input_lib.DistributedDataset",
      "tensorflow_core.python.distribute.input_lib.DistributedDatasetV1",
      "tensorflow_core.python.distribute.input_lib.DistributedDatasetsFromFunction",
      "tensorflow_core.python.distribute.input_lib.DistributedDatasetsFromFunctionV1",
      "tensorflow_core.python.distribute.input_lib.DistributedIterator",
      "tensorflow_core.python.distribute.input_lib.DistributedIteratorV1",
      "tensorflow_core.python.distribute.input_lib.InputFunctionIterator",
      "tensorflow_core.python.distribute.input_lib.InputWorkers",
      "tensorflow_core.python.distribute.input_lib.MultiStepContext",
      "tensorflow_core.python.distribute.input_lib.get_distributed_dataset",
      "tensorflow_core.python.distribute.input_lib.get_distributed_datasets_from_function"
    ],
    "tensorflow_core/python/distribute/input_ops.py": [
      "tensorflow_core.python.distribute.input_ops.auto_shard_dataset"
    ],
    "tensorflow_core/python/distribute/mirrored_strategy.py": [
      "tensorflow_core.python.distribute.mirrored_strategy.MirroredExtended",
      "tensorflow_core.python.distribute.mirrored_strategy.MirroredReplicaContext",
      "tensorflow_core.python.distribute.mirrored_strategy.MirroredStrategy",
      "tensorflow_core.python.distribute.mirrored_strategy.MirroredStrategyV1",
      "tensorflow_core.python.distribute.mirrored_strategy.all_devices",
      "tensorflow_core.python.distribute.mirrored_strategy.all_local_devices"
    ],
    "tensorflow_core/python/distribute/model_collection/__init__.py": [],
    "tensorflow_core/python/distribute/model_collection/model_collection_base.py": [
      "tensorflow_core.python.distribute.model_collection.model_collection_base.ModelAndInput"
    ],
    "tensorflow_core/python/distribute/model_collection/simple_models.py": [
      "tensorflow_core.python.distribute.model_collection.simple_models.SimpleFunctionalModel",
      "tensorflow_core.python.distribute.model_collection.simple_models.SimpleSequentialModel",
      "tensorflow_core.python.distribute.model_collection.simple_models.SimpleSubclassModel",
      "tensorflow_core.python.distribute.model_collection.simple_models.SimpleTFModuleModel"
    ],
    "tensorflow_core/python/distribute/model_combinations.py": [
      "tensorflow_core.python.distribute.model_combinations.simple_functional_model",
      "tensorflow_core.python.distribute.model_combinations.simple_sequential_model",
      "tensorflow_core.python.distribute.model_combinations.simple_subclass_model",
      "tensorflow_core.python.distribute.model_combinations.simple_tfmodule_model"
    ],
    "tensorflow_core/python/distribute/multi_worker_test_base.py": [
      "tensorflow_core.python.distribute.multi_worker_test_base.ASSIGNED_PORTS",
      "tensorflow_core.python.distribute.multi_worker_test_base.IndependentWorkerTestBase",
      "tensorflow_core.python.distribute.multi_worker_test_base.MockOsEnv",
      "tensorflow_core.python.distribute.multi_worker_test_base.MultiWorkerMultiProcessTest",
      "tensorflow_core.python.distribute.multi_worker_test_base.MultiWorkerTestBase",
      "tensorflow_core.python.distribute.multi_worker_test_base.create_cluster_spec",
      "tensorflow_core.python.distribute.multi_worker_test_base.create_in_process_cluster",
      "tensorflow_core.python.distribute.multi_worker_test_base.get_task_index",
      "tensorflow_core.python.distribute.multi_worker_test_base.get_task_type",
      "tensorflow_core.python.distribute.multi_worker_test_base.get_tf_config_cluster_spec",
      "tensorflow_core.python.distribute.multi_worker_test_base.get_tf_config_task",
      "tensorflow_core.python.distribute.multi_worker_test_base.is_chief",
      "tensorflow_core.python.distribute.multi_worker_test_base.lock",
      "tensorflow_core.python.distribute.multi_worker_test_base.original_run_std_server",
      "tensorflow_core.python.distribute.multi_worker_test_base.pick_unused_port",
      "tensorflow_core.python.distribute.multi_worker_test_base.skip_if_grpc_server_cant_be_started"
    ],
    "tensorflow_core/python/distribute/multi_worker_util.py": [
      "tensorflow_core.python.distribute.multi_worker_util.collective_leader",
      "tensorflow_core.python.distribute.multi_worker_util.has_worker_context",
      "tensorflow_core.python.distribute.multi_worker_util.id_in_cluster",
      "tensorflow_core.python.distribute.multi_worker_util.is_chief",
      "tensorflow_core.python.distribute.multi_worker_util.normalize_cluster_spec",
      "tensorflow_core.python.distribute.multi_worker_util.should_load_checkpoint",
      "tensorflow_core.python.distribute.multi_worker_util.should_save_checkpoint",
      "tensorflow_core.python.distribute.multi_worker_util.wait_for_other_workers",
      "tensorflow_core.python.distribute.multi_worker_util.worker_count"
    ],
    "tensorflow_core/python/distribute/numpy_dataset.py": [
      "tensorflow_core.python.distribute.numpy_dataset.SingleDevice",
      "tensorflow_core.python.distribute.numpy_dataset.init_var_from_numpy",
      "tensorflow_core.python.distribute.numpy_dataset.one_host_numpy_dataset"
    ],
    "tensorflow_core/python/distribute/one_device_strategy.py": [
      "tensorflow_core.python.distribute.one_device_strategy.OneDeviceExtended",
      "tensorflow_core.python.distribute.one_device_strategy.OneDeviceStrategy",
      "tensorflow_core.python.distribute.one_device_strategy.OneDeviceStrategyV1"
    ],
    "tensorflow_core/python/distribute/parameter_server_strategy.py": [
      "tensorflow_core.python.distribute.parameter_server_strategy.ParameterServerStrategy",
      "tensorflow_core.python.distribute.parameter_server_strategy.ParameterServerStrategyExtended",
      "tensorflow_core.python.distribute.parameter_server_strategy.ParameterServerStrategyV1"
    ],
    "tensorflow_core/python/distribute/reduce_util.py": [
      "tensorflow_core.python.distribute.reduce_util.ReduceOp"
    ],
    "tensorflow_core/python/distribute/saved_model_test_base.py": [
      "tensorflow_core.python.distribute.saved_model_test_base.PREDICT_STEPS",
      "tensorflow_core.python.distribute.saved_model_test_base.TestSavedModelBase",
      "tensorflow_core.python.distribute.saved_model_test_base.get_tolerance",
      "tensorflow_core.python.distribute.saved_model_test_base.is_tpu_strategy",
      "tensorflow_core.python.distribute.saved_model_test_base.load_and_run_with_saved_model_api",
      "tensorflow_core.python.distribute.saved_model_test_base.simple_models",
      "tensorflow_core.python.distribute.saved_model_test_base.simple_models_with_strategies",
      "tensorflow_core.python.distribute.saved_model_test_base.simple_models_with_strategy_pairs",
      "tensorflow_core.python.distribute.saved_model_test_base.strategies",
      "tensorflow_core.python.distribute.saved_model_test_base.tfmodule_models_with_strategies",
      "tensorflow_core.python.distribute.saved_model_test_base.tfmodule_models_with_strategy_pairs"
    ],
    "tensorflow_core/python/distribute/shared_variable_creator.py": [
      "tensorflow_core.python.distribute.shared_variable_creator.make_fn"
    ],
    "tensorflow_core/python/distribute/single_loss_example.py": [
      "tensorflow_core.python.distribute.single_loss_example.batchnorm_example",
      "tensorflow_core.python.distribute.single_loss_example.minimize_loss_example",
      "tensorflow_core.python.distribute.single_loss_example.single_loss_example"
    ],
    "tensorflow_core/python/distribute/step_fn.py": [
      "tensorflow_core.python.distribute.step_fn.StandardInputStep",
      "tensorflow_core.python.distribute.step_fn.StandardSingleLossStep",
      "tensorflow_core.python.distribute.step_fn.Step"
    ],
    "tensorflow_core/python/distribute/strategy_combinations.py": [
      "tensorflow_core.python.distribute.strategy_combinations.adagrad_optimizer_keras_v2_fn",
      "tensorflow_core.python.distribute.strategy_combinations.adagrad_optimizer_v1_fn",
      "tensorflow_core.python.distribute.strategy_combinations.adam_optimizer_keras_v2_fn",
      "tensorflow_core.python.distribute.strategy_combinations.adam_optimizer_v1_fn",
      "tensorflow_core.python.distribute.strategy_combinations.all_strategy_combinations",
      "tensorflow_core.python.distribute.strategy_combinations.all_strategy_combinations_minus_default",
      "tensorflow_core.python.distribute.strategy_combinations.all_strategy_minus_default_and_tpu_combinations",
      "tensorflow_core.python.distribute.strategy_combinations.central_storage_strategy_with_gpu_and_cpu",
      "tensorflow_core.python.distribute.strategy_combinations.central_storage_strategy_with_two_gpus",
      "tensorflow_core.python.distribute.strategy_combinations.default_strategy",
      "tensorflow_core.python.distribute.strategy_combinations.distributions_and_v1_and_v2_optimizers",
      "tensorflow_core.python.distribute.strategy_combinations.distributions_and_v1_optimizers",
      "tensorflow_core.python.distribute.strategy_combinations.distributions_and_v2_optimizers",
      "tensorflow_core.python.distribute.strategy_combinations.gradient_descent_optimizer_keras_v2_fn",
      "tensorflow_core.python.distribute.strategy_combinations.gradient_descent_optimizer_v1_fn",
      "tensorflow_core.python.distribute.strategy_combinations.graph_and_eager_modes",
      "tensorflow_core.python.distribute.strategy_combinations.mirrored_strategy_with_cpu_1_and_2",
      "tensorflow_core.python.distribute.strategy_combinations.mirrored_strategy_with_gpu_and_cpu",
      "tensorflow_core.python.distribute.strategy_combinations.mirrored_strategy_with_one_cpu",
      "tensorflow_core.python.distribute.strategy_combinations.mirrored_strategy_with_one_gpu",
      "tensorflow_core.python.distribute.strategy_combinations.mirrored_strategy_with_two_gpus",
      "tensorflow_core.python.distribute.strategy_combinations.one_device_strategy",
      "tensorflow_core.python.distribute.strategy_combinations.one_device_strategy_gpu",
      "tensorflow_core.python.distribute.strategy_combinations.one_device_strategy_gpu_on_worker_1",
      "tensorflow_core.python.distribute.strategy_combinations.one_device_strategy_on_worker_1",
      "tensorflow_core.python.distribute.strategy_combinations.optimizers_v1",
      "tensorflow_core.python.distribute.strategy_combinations.optimizers_v1_and_v2",
      "tensorflow_core.python.distribute.strategy_combinations.optimizers_v2",
      "tensorflow_core.python.distribute.strategy_combinations.rmsprop_optimizer_keras_v2_fn",
      "tensorflow_core.python.distribute.strategy_combinations.rmsprop_optimizer_v1_fn",
      "tensorflow_core.python.distribute.strategy_combinations.set_virtual_cpus_to_at_least",
      "tensorflow_core.python.distribute.strategy_combinations.strategies_minus_tpu",
      "tensorflow_core.python.distribute.strategy_combinations.strategy_minus_tpu_combinations",
      "tensorflow_core.python.distribute.strategy_combinations.tpu_strategies",
      "tensorflow_core.python.distribute.strategy_combinations.tpu_strategy",
      "tensorflow_core.python.distribute.strategy_combinations.tpu_strategy_combinations",
      "tensorflow_core.python.distribute.strategy_combinations.tpu_strategy_one_core",
      "tensorflow_core.python.distribute.strategy_combinations.tpu_strategy_one_step",
      "tensorflow_core.python.distribute.strategy_combinations.tpu_strategy_one_step_one_core"
    ],
    "tensorflow_core/python/distribute/strategy_test_lib.py": [
      "tensorflow_core.python.distribute.strategy_test_lib.DistributionTestBase",
      "tensorflow_core.python.distribute.strategy_test_lib.OneDeviceDistributionTestBase",
      "tensorflow_core.python.distribute.strategy_test_lib.TwoDeviceDistributionTestBase"
    ],
    "tensorflow_core/python/distribute/summary_op_util.py": [
      "tensorflow_core.python.distribute.summary_op_util.skip_summary"
    ],
    "tensorflow_core/python/distribute/tpu_strategy.py": [
      "tensorflow_core.python.distribute.tpu_strategy.TPUExtended",
      "tensorflow_core.python.distribute.tpu_strategy.TPUStrategy",
      "tensorflow_core.python.distribute.tpu_strategy.TPUStrategyV1",
      "tensorflow_core.python.distribute.tpu_strategy.get_tpu_system_metadata",
      "tensorflow_core.python.distribute.tpu_strategy.maybe_init_scope"
    ],
    "tensorflow_core/python/distribute/values.py": [
      "tensorflow_core.python.distribute.values.AggregatingVariable",
      "tensorflow_core.python.distribute.values.DeviceMap",
      "tensorflow_core.python.distribute.values.DistributedDelegate",
      "tensorflow_core.python.distribute.values.DistributedValues",
      "tensorflow_core.python.distribute.values.DistributedVarOp",
      "tensorflow_core.python.distribute.values.DistributedVariable",
      "tensorflow_core.python.distribute.values.LogicalDeviceSpec",
      "tensorflow_core.python.distribute.values.Mirrored",
      "tensorflow_core.python.distribute.values.MirroredVariable",
      "tensorflow_core.python.distribute.values.PerReplica",
      "tensorflow_core.python.distribute.values.PerReplicaSpec",
      "tensorflow_core.python.distribute.values.ReplicaDeviceMap",
      "tensorflow_core.python.distribute.values.SingleDeviceMap",
      "tensorflow_core.python.distribute.values.SyncOnReadVariable",
      "tensorflow_core.python.distribute.values.TPUMirroredVariable",
      "tensorflow_core.python.distribute.values.TPUSyncOnReadVariable",
      "tensorflow_core.python.distribute.values.TPUVariableMixin",
      "tensorflow_core.python.distribute.values.WorkerDeviceMap",
      "tensorflow_core.python.distribute.values.is_distributed_variable",
      "tensorflow_core.python.distribute.values.regroup",
      "tensorflow_core.python.distribute.values.select_device_mirrored",
      "tensorflow_core.python.distribute.values.select_replica",
      "tensorflow_core.python.distribute.values.update_regroup",
      "tensorflow_core.python.distribute.values.validate_colocate",
      "tensorflow_core.python.distribute.values.validate_colocate_distributed_variable",
      "tensorflow_core.python.distribute.values.value_container"
    ],
    "tensorflow_core/python/eager/__init__.py": [],
    "tensorflow_core/python/eager/backprop.py": [
      "tensorflow_core.python.eager.backprop.GradientTape",
      "tensorflow_core.python.eager.backprop.aggregate_indexed_slices_gradients",
      "tensorflow_core.python.eager.backprop.flatten_nested_indexed_slices",
      "tensorflow_core.python.eager.backprop.function",
      "tensorflow_core.python.eager.backprop.gradients_function",
      "tensorflow_core.python.eager.backprop.implicit_grad",
      "tensorflow_core.python.eager.backprop.implicit_val_and_grad",
      "tensorflow_core.python.eager.backprop.make_attr",
      "tensorflow_core.python.eager.backprop.make_vjp",
      "tensorflow_core.python.eager.backprop.op_attr_type",
      "tensorflow_core.python.eager.backprop.pfor_ops",
      "tensorflow_core.python.eager.backprop.val_and_grad_function"
    ],
    "tensorflow_core/python/eager/cancellation.py": [
      "tensorflow_core.python.eager.cancellation.CancellationManager"
    ],
    "tensorflow_core/python/eager/context.py": [
      "tensorflow_core.python.eager.context.ASYNC",
      "tensorflow_core.python.eager.context.Context",
      "tensorflow_core.python.eager.context.ContextSwitch",
      "tensorflow_core.python.eager.context.DEVICE_PLACEMENT_EXPLICIT",
      "tensorflow_core.python.eager.context.DEVICE_PLACEMENT_SILENT",
      "tensorflow_core.python.eager.context.DEVICE_PLACEMENT_SILENT_FOR_INT32",
      "tensorflow_core.python.eager.context.DEVICE_PLACEMENT_WARN",
      "tensorflow_core.python.eager.context.EAGER_MODE",
      "tensorflow_core.python.eager.context.FunctionCallOptions",
      "tensorflow_core.python.eager.context.GRAPH_MODE",
      "tensorflow_core.python.eager.context.LogicalDevice",
      "tensorflow_core.python.eager.context.MIRRORING_ALL",
      "tensorflow_core.python.eager.context.MIRRORING_NONE",
      "tensorflow_core.python.eager.context.PhysicalDevice",
      "tensorflow_core.python.eager.context.SYNC",
      "tensorflow_core.python.eager.context.VirtualDeviceConfiguration",
      "tensorflow_core.python.eager.context.add_function",
      "tensorflow_core.python.eager.context.async_clear_error",
      "tensorflow_core.python.eager.context.async_wait",
      "tensorflow_core.python.eager.context.context",
      "tensorflow_core.python.eager.context.context_safe",
      "tensorflow_core.python.eager.context.default_execution_mode",
      "tensorflow_core.python.eager.context.device",
      "tensorflow_core.python.eager.context.device_policy",
      "tensorflow_core.python.eager.context.disable_graph_collection",
      "tensorflow_core.python.eager.context.disable_run_metadata",
      "tensorflow_core.python.eager.context.eager_mode",
      "tensorflow_core.python.eager.context.enable_graph_collection",
      "tensorflow_core.python.eager.context.enable_run_metadata",
      "tensorflow_core.python.eager.context.ensure_initialized",
      "tensorflow_core.python.eager.context.executing_eagerly",
      "tensorflow_core.python.eager.context.execution_mode",
      "tensorflow_core.python.eager.context.executor_scope",
      "tensorflow_core.python.eager.context.export_run_metadata",
      "tensorflow_core.python.eager.context.function_executor_type",
      "tensorflow_core.python.eager.context.get_log_device_placement",
      "tensorflow_core.python.eager.context.global_seed",
      "tensorflow_core.python.eager.context.graph_mode",
      "tensorflow_core.python.eager.context.in_eager_mode",
      "tensorflow_core.python.eager.context.internal_operation_seed",
      "tensorflow_core.python.eager.context.is_async",
      "tensorflow_core.python.eager.context.list_devices",
      "tensorflow_core.python.eager.context.mirroring_policy",
      "tensorflow_core.python.eager.context.namescope",
      "tensorflow_core.python.eager.context.num_gpus",
      "tensorflow_core.python.eager.context.remove_function",
      "tensorflow_core.python.eager.context.scope_name",
      "tensorflow_core.python.eager.context.set_execution_mode",
      "tensorflow_core.python.eager.context.set_global_seed",
      "tensorflow_core.python.eager.context.set_log_device_placement",
      "tensorflow_core.python.eager.context.set_server_def",
      "tensorflow_core.python.eager.context.shared_name"
    ],
    "tensorflow_core/python/eager/core.py": [],
    "tensorflow_core/python/eager/def_function.py": [
      "tensorflow_core.python.eager.def_function.Function",
      "tensorflow_core.python.eager.def_function.FunctionDeleter",
      "tensorflow_core.python.eager.def_function.RUN_FUNCTIONS_EAGERLY",
      "tensorflow_core.python.eager.def_function.UnliftedInitializerVariable",
      "tensorflow_core.python.eager.def_function.function",
      "tensorflow_core.python.eager.def_function.run_functions_eagerly"
    ],
    "tensorflow_core/python/eager/execute.py": [
      "tensorflow_core.python.eager.execute.args_to_matching_eager",
      "tensorflow_core.python.eager.execute.args_to_mixed_eager_tensors",
      "tensorflow_core.python.eager.execute.convert_to_mixed_eager_tensors",
      "tensorflow_core.python.eager.execute.execute",
      "tensorflow_core.python.eager.execute.execute_with_callbacks",
      "tensorflow_core.python.eager.execute.execute_with_cancellation",
      "tensorflow_core.python.eager.execute.make_bool",
      "tensorflow_core.python.eager.execute.make_float",
      "tensorflow_core.python.eager.execute.make_int",
      "tensorflow_core.python.eager.execute.make_shape",
      "tensorflow_core.python.eager.execute.make_str",
      "tensorflow_core.python.eager.execute.make_tensor",
      "tensorflow_core.python.eager.execute.make_type",
      "tensorflow_core.python.eager.execute.quick_execute",
      "tensorflow_core.python.eager.execute.record_gradient"
    ],
    "tensorflow_core/python/eager/execution_callbacks.py": [
      "tensorflow_core.python.eager.execution_callbacks.ExecutionCallback",
      "tensorflow_core.python.eager.execution_callbacks.InfOrNanError",
      "tensorflow_core.python.eager.execution_callbacks.add_execution_callback",
      "tensorflow_core.python.eager.execution_callbacks.clear_execution_callbacks",
      "tensorflow_core.python.eager.execution_callbacks.errstate",
      "tensorflow_core.python.eager.execution_callbacks.inf_callback",
      "tensorflow_core.python.eager.execution_callbacks.inf_nan_callback",
      "tensorflow_core.python.eager.execution_callbacks.nan_callback",
      "tensorflow_core.python.eager.execution_callbacks.seterr"
    ],
    "tensorflow_core/python/eager/executor.py": [
      "tensorflow_core.python.eager.executor.Executor",
      "tensorflow_core.python.eager.executor.new_executor"
    ],
    "tensorflow_core/python/eager/forwardprop.py": [
      "tensorflow_core.python.eager.forwardprop.ForwardGradientAccumulator"
    ],
    "tensorflow_core/python/eager/function.py": [
      "tensorflow_core.python.eager.function.BACKWARD_FUNCTION_ATTRIBUTE_NAME",
      "tensorflow_core.python.eager.function.CacheKey",
      "tensorflow_core.python.eager.function.ConcreteFunction",
      "tensorflow_core.python.eager.function.ConcreteFunctionGarbageCollector",
      "tensorflow_core.python.eager.function.FORWARD_FUNCTION_ATTRIBUTE_NAME",
      "tensorflow_core.python.eager.function.Function",
      "tensorflow_core.python.eager.function.FunctionCache",
      "tensorflow_core.python.eager.function.FunctionSpec",
      "tensorflow_core.python.eager.function.TfMethodTarget",
      "tensorflow_core.python.eager.function.ag_ctx",
      "tensorflow_core.python.eager.function.class_method_to_instance_method",
      "tensorflow_core.python.eager.function.common_shape",
      "tensorflow_core.python.eager.function.defun",
      "tensorflow_core.python.eager.function.defun_with_attributes",
      "tensorflow_core.python.eager.function.is_same_structure",
      "tensorflow_core.python.eager.function.register",
      "tensorflow_core.python.eager.function.validate_signature"
    ],
    "tensorflow_core/python/eager/graph_only_ops.py": [
      "tensorflow_core.python.eager.graph_only_ops.graph_placeholder",
      "tensorflow_core.python.eager.graph_only_ops.graph_zeros_like"
    ],
    "tensorflow_core/python/eager/imperative_grad.py": [
      "tensorflow_core.python.eager.imperative_grad.VSpace",
      "tensorflow_core.python.eager.imperative_grad.imperative_grad"
    ],
    "tensorflow_core/python/eager/lift_to_graph.py": [
      "tensorflow_core.python.eager.lift_to_graph.UnliftableError",
      "tensorflow_core.python.eager.lift_to_graph.lift_to_graph"
    ],
    "tensorflow_core/python/eager/memory_tests/__init__.py": [],
    "tensorflow_core/python/eager/memory_tests/memory_test_util.py": [
      "tensorflow_core.python.eager.memory_tests.memory_test_util.assert_no_leak",
      "tensorflow_core.python.eager.memory_tests.memory_test_util.memory_profiler_is_available"
    ],
    "tensorflow_core/python/eager/monitoring.py": [
      "tensorflow_core.python.eager.monitoring.BoolGauge",
      "tensorflow_core.python.eager.monitoring.BoolGaugeCell",
      "tensorflow_core.python.eager.monitoring.Buckets",
      "tensorflow_core.python.eager.monitoring.Counter",
      "tensorflow_core.python.eager.monitoring.CounterCell",
      "tensorflow_core.python.eager.monitoring.ExponentialBuckets",
      "tensorflow_core.python.eager.monitoring.IntGauge",
      "tensorflow_core.python.eager.monitoring.IntGaugeCell",
      "tensorflow_core.python.eager.monitoring.Metric",
      "tensorflow_core.python.eager.monitoring.Sampler",
      "tensorflow_core.python.eager.monitoring.SamplerCell",
      "tensorflow_core.python.eager.monitoring.StringGauge",
      "tensorflow_core.python.eager.monitoring.StringGaugeCell"
    ],
    "tensorflow_core/python/eager/profiler.py": [
      "tensorflow_core.python.eager.profiler.Profiler",
      "tensorflow_core.python.eager.profiler.ProfilerAlreadyRunningError",
      "tensorflow_core.python.eager.profiler.ProfilerNotRunningError",
      "tensorflow_core.python.eager.profiler.maybe_create_event_file",
      "tensorflow_core.python.eager.profiler.save",
      "tensorflow_core.python.eager.profiler.start",
      "tensorflow_core.python.eager.profiler.start_profiler_server",
      "tensorflow_core.python.eager.profiler.stop"
    ],
    "tensorflow_core/python/eager/profiler_client.py": [
      "tensorflow_core.python.eager.profiler_client.monitor",
      "tensorflow_core.python.eager.profiler_client.start_tracing"
    ],
    "tensorflow_core/python/eager/remote.py": [
      "tensorflow_core.python.eager.remote.connect_to_cluster",
      "tensorflow_core.python.eager.remote.connect_to_remote_host"
    ],
    "tensorflow_core/python/eager/tape.py": [
      "tensorflow_core.python.eager.tape.Tape",
      "tensorflow_core.python.eager.tape.could_possibly_record",
      "tensorflow_core.python.eager.tape.delete_trace",
      "tensorflow_core.python.eager.tape.distribution_strategy_context",
      "tensorflow_core.python.eager.tape.pop_tape",
      "tensorflow_core.python.eager.tape.push_new_tape",
      "tensorflow_core.python.eager.tape.push_tape",
      "tensorflow_core.python.eager.tape.record_operation",
      "tensorflow_core.python.eager.tape.should_record",
      "tensorflow_core.python.eager.tape.stop_recording",
      "tensorflow_core.python.eager.tape.variable_accessed",
      "tensorflow_core.python.eager.tape.variables_accessed",
      "tensorflow_core.python.eager.tape.watch",
      "tensorflow_core.python.eager.tape.watch_variable"
    ],
    "tensorflow_core/python/eager/test.py": [
      "tensorflow_core.python.eager.test.main"
    ],
    "tensorflow_core/python/eager/wrap_function.py": [
      "tensorflow_core.python.eager.wrap_function.VariableHolder",
      "tensorflow_core.python.eager.wrap_function.WrappedFunction",
      "tensorflow_core.python.eager.wrap_function.WrappedGraph",
      "tensorflow_core.python.eager.wrap_function.function_from_graph_def",
      "tensorflow_core.python.eager.wrap_function.wrap_function"
    ],
    "tensorflow_core/python/estimator/__init__.py": [],
    "tensorflow_core/python/estimator/canned/__init__.py": [],
    "tensorflow_core/python/estimator/canned/baseline.py": [],
    "tensorflow_core/python/estimator/canned/boosted_trees.py": [],
    "tensorflow_core/python/estimator/canned/boosted_trees_utils.py": [],
    "tensorflow_core/python/estimator/canned/dnn.py": [],
    "tensorflow_core/python/estimator/canned/dnn_linear_combined.py": [],
    "tensorflow_core/python/estimator/canned/head.py": [],
    "tensorflow_core/python/estimator/canned/linear.py": [],
    "tensorflow_core/python/estimator/canned/metric_keys.py": [],
    "tensorflow_core/python/estimator/canned/optimizers.py": [],
    "tensorflow_core/python/estimator/canned/parsing_utils.py": [],
    "tensorflow_core/python/estimator/canned/prediction_keys.py": [],
    "tensorflow_core/python/estimator/estimator.py": [],
    "tensorflow_core/python/estimator/estimator_lib.py": [],
    "tensorflow_core/python/estimator/export/__init__.py": [],
    "tensorflow_core/python/estimator/export/export.py": [],
    "tensorflow_core/python/estimator/export/export_lib.py": [],
    "tensorflow_core/python/estimator/export/export_output.py": [],
    "tensorflow_core/python/estimator/exporter.py": [],
    "tensorflow_core/python/estimator/gc.py": [],
    "tensorflow_core/python/estimator/inputs/__init__.py": [],
    "tensorflow_core/python/estimator/inputs/inputs.py": [],
    "tensorflow_core/python/estimator/inputs/numpy_io.py": [],
    "tensorflow_core/python/estimator/inputs/pandas_io.py": [],
    "tensorflow_core/python/estimator/inputs/queues/__init__.py": [],
    "tensorflow_core/python/estimator/inputs/queues/feeding_functions.py": [],
    "tensorflow_core/python/estimator/inputs/queues/feeding_queue_runner.py": [],
    "tensorflow_core/python/estimator/keras.py": [],
    "tensorflow_core/python/estimator/model_fn.py": [],
    "tensorflow_core/python/estimator/run_config.py": [],
    "tensorflow_core/python/estimator/training.py": [],
    "tensorflow_core/python/estimator/util.py": [],
    "tensorflow_core/python/feature_column/__init__.py": [],
    "tensorflow_core/python/feature_column/dense_features.py": [
      "tensorflow_core.python.feature_column.dense_features.DenseFeatures"
    ],
    "tensorflow_core/python/feature_column/dense_features_v2.py": [
      "tensorflow_core.python.feature_column.dense_features_v2.DenseFeatures"
    ],
    "tensorflow_core/python/feature_column/feature_column.py": [
      "tensorflow_core.python.feature_column.feature_column.InputLayer",
      "tensorflow_core.python.feature_column.feature_column.input_layer",
      "tensorflow_core.python.feature_column.feature_column.linear_model",
      "tensorflow_core.python.feature_column.feature_column.make_parse_example_spec"
    ],
    "tensorflow_core/python/feature_column/feature_column_lib.py": [],
    "tensorflow_core/python/feature_column/feature_column_v2.py": [
      "tensorflow_core.python.feature_column.feature_column_v2.BucketizedColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.CategoricalColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.CrossedColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.DenseColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.EmbeddingColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.FeatureColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.FeatureTransformationCache",
      "tensorflow_core.python.feature_column.feature_column_v2.HashedCategoricalColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.IdentityCategoricalColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.IndicatorColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.LinearModel",
      "tensorflow_core.python.feature_column.feature_column_v2.NumericColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.SequenceCategoricalColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.SequenceDenseColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.SharedEmbeddingColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.SharedEmbeddingColumnCreator",
      "tensorflow_core.python.feature_column.feature_column_v2.StateManager",
      "tensorflow_core.python.feature_column.feature_column_v2.VocabularyFileCategoricalColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.VocabularyListCategoricalColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.WeightedCategoricalColumn",
      "tensorflow_core.python.feature_column.feature_column_v2.bucketized_column",
      "tensorflow_core.python.feature_column.feature_column_v2.categorical_column_with_hash_bucket",
      "tensorflow_core.python.feature_column.feature_column_v2.categorical_column_with_identity",
      "tensorflow_core.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file",
      "tensorflow_core.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_file_v2",
      "tensorflow_core.python.feature_column.feature_column_v2.categorical_column_with_vocabulary_list",
      "tensorflow_core.python.feature_column.feature_column_v2.crossed_column",
      "tensorflow_core.python.feature_column.feature_column_v2.embedding_column",
      "tensorflow_core.python.feature_column.feature_column_v2.indicator_column",
      "tensorflow_core.python.feature_column.feature_column_v2.is_feature_column_v2",
      "tensorflow_core.python.feature_column.feature_column_v2.make_parse_example_spec_v2",
      "tensorflow_core.python.feature_column.feature_column_v2.numeric_column",
      "tensorflow_core.python.feature_column.feature_column_v2.shared_embedding_columns",
      "tensorflow_core.python.feature_column.feature_column_v2.shared_embedding_columns_v2",
      "tensorflow_core.python.feature_column.feature_column_v2.weighted_categorical_column"
    ],
    "tensorflow_core/python/feature_column/sequence_feature_column.py": [
      "tensorflow_core.python.feature_column.sequence_feature_column.SequenceFeatures",
      "tensorflow_core.python.feature_column.sequence_feature_column.SequenceNumericColumn",
      "tensorflow_core.python.feature_column.sequence_feature_column.concatenate_context_input",
      "tensorflow_core.python.feature_column.sequence_feature_column.sequence_categorical_column_with_hash_bucket",
      "tensorflow_core.python.feature_column.sequence_feature_column.sequence_categorical_column_with_identity",
      "tensorflow_core.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_file",
      "tensorflow_core.python.feature_column.sequence_feature_column.sequence_categorical_column_with_vocabulary_list",
      "tensorflow_core.python.feature_column.sequence_feature_column.sequence_numeric_column"
    ],
    "tensorflow_core/python/feature_column/serialization.py": [
      "tensorflow_core.python.feature_column.serialization.deserialize_feature_column",
      "tensorflow_core.python.feature_column.serialization.deserialize_feature_columns",
      "tensorflow_core.python.feature_column.serialization.serialize_feature_column",
      "tensorflow_core.python.feature_column.serialization.serialize_feature_columns"
    ],
    "tensorflow_core/python/feature_column/utils.py": [
      "tensorflow_core.python.feature_column.utils.assert_key_is_string",
      "tensorflow_core.python.feature_column.utils.assert_string_or_int",
      "tensorflow_core.python.feature_column.utils.check_default_value",
      "tensorflow_core.python.feature_column.utils.sequence_length_from_sparse_tensor"
    ],
    "tensorflow_core/python/framework/__init__.py": [],
    "tensorflow_core/python/framework/auto_control_deps.py": [
      "tensorflow_core.python.framework.auto_control_deps.ASYNC_STATEFUL_OPS",
      "tensorflow_core.python.framework.auto_control_deps.AutomaticControlDependencies",
      "tensorflow_core.python.framework.auto_control_deps.LEGACY_RANDOM_OPS",
      "tensorflow_core.python.framework.auto_control_deps.automatic_control_dependencies",
      "tensorflow_core.python.framework.auto_control_deps.op_is_stateful"
    ],
    "tensorflow_core/python/framework/c_api_util.py": [
      "tensorflow_core.python.framework.c_api_util.ApiDefMap",
      "tensorflow_core.python.framework.c_api_util.ScopedTFFunction",
      "tensorflow_core.python.framework.c_api_util.ScopedTFGraph",
      "tensorflow_core.python.framework.c_api_util.ScopedTFImportGraphDefOptions",
      "tensorflow_core.python.framework.c_api_util.ScopedTFImportGraphDefResults",
      "tensorflow_core.python.framework.c_api_util.ScopedTFStatus",
      "tensorflow_core.python.framework.c_api_util.new_tf_operations",
      "tensorflow_core.python.framework.c_api_util.tf_buffer",
      "tensorflow_core.python.framework.c_api_util.tf_operations",
      "tensorflow_core.python.framework.c_api_util.tf_output"
    ],
    "tensorflow_core/python/framework/combinations.py": [
      "tensorflow_core.python.framework.combinations.EagerGraphCombination",
      "tensorflow_core.python.framework.combinations.NamedObject",
      "tensorflow_core.python.framework.combinations.TFVersionCombination",
      "tensorflow_core.python.framework.combinations.combine",
      "tensorflow_core.python.framework.combinations.generate",
      "tensorflow_core.python.framework.combinations.times"
    ],
    "tensorflow_core/python/framework/common_shapes.py": [
      "tensorflow_core.python.framework.common_shapes.avg_pool_shape",
      "tensorflow_core.python.framework.common_shapes.broadcast_shape",
      "tensorflow_core.python.framework.common_shapes.call_cpp_shape_fn",
      "tensorflow_core.python.framework.common_shapes.conv2d_shape",
      "tensorflow_core.python.framework.common_shapes.depthwise_conv2d_native_shape",
      "tensorflow_core.python.framework.common_shapes.get2d_conv_output_size",
      "tensorflow_core.python.framework.common_shapes.get_conv_output_size",
      "tensorflow_core.python.framework.common_shapes.has_fully_defined_shape",
      "tensorflow_core.python.framework.common_shapes.is_broadcast_compatible",
      "tensorflow_core.python.framework.common_shapes.matmul_shape",
      "tensorflow_core.python.framework.common_shapes.max_pool_shape",
      "tensorflow_core.python.framework.common_shapes.no_outputs",
      "tensorflow_core.python.framework.common_shapes.rank",
      "tensorflow_core.python.framework.common_shapes.scalar_shape",
      "tensorflow_core.python.framework.common_shapes.separable_conv2d_shape",
      "tensorflow_core.python.framework.common_shapes.unchanged_shape",
      "tensorflow_core.python.framework.common_shapes.unchanged_shape_with_rank",
      "tensorflow_core.python.framework.common_shapes.unchanged_shape_with_rank_at_least",
      "tensorflow_core.python.framework.common_shapes.unchanged_shape_with_rank_at_most",
      "tensorflow_core.python.framework.common_shapes.unknown_shape"
    ],
    "tensorflow_core/python/framework/composite_tensor.py": [
      "tensorflow_core.python.framework.composite_tensor.CompositeTensor",
      "tensorflow_core.python.framework.composite_tensor.replace_composites_with_components"
    ],
    "tensorflow_core/python/framework/composite_tensor_utils.py": [
      "tensorflow_core.python.framework.composite_tensor_utils.append_composite_tensor",
      "tensorflow_core.python.framework.composite_tensor_utils.get_shape",
      "tensorflow_core.python.framework.composite_tensor_utils.is_composite_or_composite_value"
    ],
    "tensorflow_core/python/framework/config.py": [
      "tensorflow_core.python.framework.config.get_device_policy",
      "tensorflow_core.python.framework.config.get_inter_op_parallelism_threads",
      "tensorflow_core.python.framework.config.get_intra_op_parallelism_threads",
      "tensorflow_core.python.framework.config.get_memory_growth",
      "tensorflow_core.python.framework.config.get_optimizer_experimental_options",
      "tensorflow_core.python.framework.config.get_optimizer_jit",
      "tensorflow_core.python.framework.config.get_soft_device_placement",
      "tensorflow_core.python.framework.config.get_synchronous_execution",
      "tensorflow_core.python.framework.config.get_virtual_device_configuration",
      "tensorflow_core.python.framework.config.get_visible_devices",
      "tensorflow_core.python.framework.config.list_logical_devices",
      "tensorflow_core.python.framework.config.list_physical_devices",
      "tensorflow_core.python.framework.config.set_device_policy",
      "tensorflow_core.python.framework.config.set_inter_op_parallelism_threads",
      "tensorflow_core.python.framework.config.set_intra_op_parallelism_threads",
      "tensorflow_core.python.framework.config.set_memory_growth",
      "tensorflow_core.python.framework.config.set_optimizer_experimental_options",
      "tensorflow_core.python.framework.config.set_optimizer_jit",
      "tensorflow_core.python.framework.config.set_soft_device_placement",
      "tensorflow_core.python.framework.config.set_synchronous_execution",
      "tensorflow_core.python.framework.config.set_virtual_device_configuration",
      "tensorflow_core.python.framework.config.set_visible_devices"
    ],
    "tensorflow_core/python/framework/constant_op.py": [
      "tensorflow_core.python.framework.constant_op.constant",
      "tensorflow_core.python.framework.constant_op.constant_v1",
      "tensorflow_core.python.framework.constant_op.convert_to_eager_tensor",
      "tensorflow_core.python.framework.constant_op.is_constant"
    ],
    "tensorflow_core/python/framework/convert_to_constants.py": [
      "tensorflow_core.python.framework.convert_to_constants.convert_variables_to_constants_v2",
      "tensorflow_core.python.framework.convert_to_constants.disable_lower_using_switch_merge"
    ],
    "tensorflow_core/python/framework/cpp_shape_inference_pb2.py": [
      "tensorflow_core.python.framework.cpp_shape_inference_pb2.CppShapeInferenceInputsNeeded",
      "tensorflow_core.python.framework.cpp_shape_inference_pb2.CppShapeInferenceResult",
      "tensorflow_core.python.framework.cpp_shape_inference_pb2.DESCRIPTOR"
    ],
    "tensorflow_core/python/framework/device.py": [
      "tensorflow_core.python.framework.device.MergeDevice",
      "tensorflow_core.python.framework.device.canonical_name",
      "tensorflow_core.python.framework.device.check_valid",
      "tensorflow_core.python.framework.device.is_device_spec",
      "tensorflow_core.python.framework.device.merge_device"
    ],
    "tensorflow_core/python/framework/device_spec.py": [
      "tensorflow_core.python.framework.device_spec.DeviceSpecV1",
      "tensorflow_core.python.framework.device_spec.DeviceSpecV2"
    ],
    "tensorflow_core/python/framework/dtypes.py": [
      "tensorflow_core.python.framework.dtypes.DType",
      "tensorflow_core.python.framework.dtypes.QUANTIZED_DTYPES",
      "tensorflow_core.python.framework.dtypes.TF_VALUE_DTYPES",
      "tensorflow_core.python.framework.dtypes.as_dtype",
      "tensorflow_core.python.framework.dtypes.bfloat16",
      "tensorflow_core.python.framework.dtypes.bfloat16_ref",
      "tensorflow_core.python.framework.dtypes.bool",
      "tensorflow_core.python.framework.dtypes.bool_ref",
      "tensorflow_core.python.framework.dtypes.complex128",
      "tensorflow_core.python.framework.dtypes.complex128_ref",
      "tensorflow_core.python.framework.dtypes.complex64",
      "tensorflow_core.python.framework.dtypes.complex64_ref",
      "tensorflow_core.python.framework.dtypes.double",
      "tensorflow_core.python.framework.dtypes.double_ref",
      "tensorflow_core.python.framework.dtypes.dtype_range",
      "tensorflow_core.python.framework.dtypes.float16",
      "tensorflow_core.python.framework.dtypes.float16_ref",
      "tensorflow_core.python.framework.dtypes.float32",
      "tensorflow_core.python.framework.dtypes.float32_ref",
      "tensorflow_core.python.framework.dtypes.float64",
      "tensorflow_core.python.framework.dtypes.float64_ref",
      "tensorflow_core.python.framework.dtypes.half",
      "tensorflow_core.python.framework.dtypes.half_ref",
      "tensorflow_core.python.framework.dtypes.int16",
      "tensorflow_core.python.framework.dtypes.int16_ref",
      "tensorflow_core.python.framework.dtypes.int32",
      "tensorflow_core.python.framework.dtypes.int32_ref",
      "tensorflow_core.python.framework.dtypes.int64",
      "tensorflow_core.python.framework.dtypes.int64_ref",
      "tensorflow_core.python.framework.dtypes.int8",
      "tensorflow_core.python.framework.dtypes.int8_ref",
      "tensorflow_core.python.framework.dtypes.np_resource",
      "tensorflow_core.python.framework.dtypes.qint16",
      "tensorflow_core.python.framework.dtypes.qint16_ref",
      "tensorflow_core.python.framework.dtypes.qint32",
      "tensorflow_core.python.framework.dtypes.qint32_ref",
      "tensorflow_core.python.framework.dtypes.qint8",
      "tensorflow_core.python.framework.dtypes.qint8_ref",
      "tensorflow_core.python.framework.dtypes.quint16",
      "tensorflow_core.python.framework.dtypes.quint16_ref",
      "tensorflow_core.python.framework.dtypes.quint8",
      "tensorflow_core.python.framework.dtypes.quint8_ref",
      "tensorflow_core.python.framework.dtypes.resource",
      "tensorflow_core.python.framework.dtypes.resource_ref",
      "tensorflow_core.python.framework.dtypes.string",
      "tensorflow_core.python.framework.dtypes.string_ref",
      "tensorflow_core.python.framework.dtypes.uint16",
      "tensorflow_core.python.framework.dtypes.uint16_ref",
      "tensorflow_core.python.framework.dtypes.uint32",
      "tensorflow_core.python.framework.dtypes.uint32_ref",
      "tensorflow_core.python.framework.dtypes.uint64",
      "tensorflow_core.python.framework.dtypes.uint64_ref",
      "tensorflow_core.python.framework.dtypes.uint8",
      "tensorflow_core.python.framework.dtypes.uint8_ref",
      "tensorflow_core.python.framework.dtypes.variant",
      "tensorflow_core.python.framework.dtypes.variant_ref"
    ],
    "tensorflow_core/python/framework/error_interpolation.py": [
      "tensorflow_core.python.framework.error_interpolation.compute_field_dict",
      "tensorflow_core.python.framework.error_interpolation.create_graph_debug_info_def",
      "tensorflow_core.python.framework.error_interpolation.interpolate",
      "tensorflow_core.python.framework.error_interpolation.parse_message",
      "tensorflow_core.python.framework.error_interpolation.traceback_files_common_prefix"
    ],
    "tensorflow_core/python/framework/errors.py": [],
    "tensorflow_core/python/framework/errors_impl.py": [
      "tensorflow_core.python.framework.errors_impl.ABORTED",
      "tensorflow_core.python.framework.errors_impl.ALREADY_EXISTS",
      "tensorflow_core.python.framework.errors_impl.AbortedError",
      "tensorflow_core.python.framework.errors_impl.AlreadyExistsError",
      "tensorflow_core.python.framework.errors_impl.CANCELLED",
      "tensorflow_core.python.framework.errors_impl.CancelledError",
      "tensorflow_core.python.framework.errors_impl.DATA_LOSS",
      "tensorflow_core.python.framework.errors_impl.DEADLINE_EXCEEDED",
      "tensorflow_core.python.framework.errors_impl.DataLossError",
      "tensorflow_core.python.framework.errors_impl.DeadlineExceededError",
      "tensorflow_core.python.framework.errors_impl.FAILED_PRECONDITION",
      "tensorflow_core.python.framework.errors_impl.FailedPreconditionError",
      "tensorflow_core.python.framework.errors_impl.INTERNAL",
      "tensorflow_core.python.framework.errors_impl.INVALID_ARGUMENT",
      "tensorflow_core.python.framework.errors_impl.InaccessibleTensorError",
      "tensorflow_core.python.framework.errors_impl.InternalError",
      "tensorflow_core.python.framework.errors_impl.InvalidArgumentError",
      "tensorflow_core.python.framework.errors_impl.NOT_FOUND",
      "tensorflow_core.python.framework.errors_impl.NotFoundError",
      "tensorflow_core.python.framework.errors_impl.OK",
      "tensorflow_core.python.framework.errors_impl.OUT_OF_RANGE",
      "tensorflow_core.python.framework.errors_impl.OpError",
      "tensorflow_core.python.framework.errors_impl.OperatorNotAllowedInGraphError",
      "tensorflow_core.python.framework.errors_impl.OutOfRangeError",
      "tensorflow_core.python.framework.errors_impl.PERMISSION_DENIED",
      "tensorflow_core.python.framework.errors_impl.PermissionDeniedError",
      "tensorflow_core.python.framework.errors_impl.RESOURCE_EXHAUSTED",
      "tensorflow_core.python.framework.errors_impl.ResourceExhaustedError",
      "tensorflow_core.python.framework.errors_impl.UNAUTHENTICATED",
      "tensorflow_core.python.framework.errors_impl.UNAVAILABLE",
      "tensorflow_core.python.framework.errors_impl.UNIMPLEMENTED",
      "tensorflow_core.python.framework.errors_impl.UNKNOWN",
      "tensorflow_core.python.framework.errors_impl.UnauthenticatedError",
      "tensorflow_core.python.framework.errors_impl.UnavailableError",
      "tensorflow_core.python.framework.errors_impl.UnimplementedError",
      "tensorflow_core.python.framework.errors_impl.UnknownError",
      "tensorflow_core.python.framework.errors_impl.error_code_from_exception_type",
      "tensorflow_core.python.framework.errors_impl.exception_type_from_error_code",
      "tensorflow_core.python.framework.errors_impl.raise_exception_on_not_ok_status"
    ],
    "tensorflow_core/python/framework/framework_lib.py": [],
    "tensorflow_core/python/framework/func_graph.py": [
      "tensorflow_core.python.framework.func_graph.FuncGraph",
      "tensorflow_core.python.framework.func_graph.UnknownArgument",
      "tensorflow_core.python.framework.func_graph.WHITELIST_COLLECTIONS",
      "tensorflow_core.python.framework.func_graph.check_mutation",
      "tensorflow_core.python.framework.func_graph.convert_structure_to_signature",
      "tensorflow_core.python.framework.func_graph.def_function",
      "tensorflow_core.python.framework.func_graph.device_stack_has_callable",
      "tensorflow_core.python.framework.func_graph.dismantle_func_graph",
      "tensorflow_core.python.framework.func_graph.flatten",
      "tensorflow_core.python.framework.func_graph.func_graph_from_py_func",
      "tensorflow_core.python.framework.func_graph.function",
      "tensorflow_core.python.framework.func_graph.maybe_captured",
      "tensorflow_core.python.framework.func_graph.pack_sequence_as"
    ],
    "tensorflow_core/python/framework/function.py": [
      "tensorflow_core.python.framework.function.Defun",
      "tensorflow_core.python.framework.function.from_library",
      "tensorflow_core.python.framework.function.func_graph_from_py_func",
      "tensorflow_core.python.framework.function.function_def_from_tf_function",
      "tensorflow_core.python.framework.function.get_extra_args",
      "tensorflow_core.python.framework.function.get_extra_inputs",
      "tensorflow_core.python.framework.function.get_extra_vars"
    ],
    "tensorflow_core/python/framework/function_def_to_graph.py": [
      "tensorflow_core.python.framework.function_def_to_graph.function_def_to_graph",
      "tensorflow_core.python.framework.function_def_to_graph.function_def_to_graph_def",
      "tensorflow_core.python.framework.function_def_to_graph.is_function"
    ],
    "tensorflow_core/python/framework/graph_io.py": [
      "tensorflow_core.python.framework.graph_io.write_graph"
    ],
    "tensorflow_core/python/framework/graph_to_function_def.py": [
      "tensorflow_core.python.framework.graph_to_function_def.graph_to_function_def"
    ],
    "tensorflow_core/python/framework/graph_util.py": [],
    "tensorflow_core/python/framework/graph_util_impl.py": [
      "tensorflow_core.python.framework.graph_util_impl.convert_variables_to_constants",
      "tensorflow_core.python.framework.graph_util_impl.extract_sub_graph",
      "tensorflow_core.python.framework.graph_util_impl.must_run_on_cpu",
      "tensorflow_core.python.framework.graph_util_impl.remove_training_nodes",
      "tensorflow_core.python.framework.graph_util_impl.tensor_shape_from_node_def_name"
    ],
    "tensorflow_core/python/framework/importer.py": [
      "tensorflow_core.python.framework.importer.import_graph_def",
      "tensorflow_core.python.framework.importer.import_graph_def_for_function"
    ],
    "tensorflow_core/python/framework/indexed_slices.py": [
      "tensorflow_core.python.framework.indexed_slices.IndexedSlices",
      "tensorflow_core.python.framework.indexed_slices.IndexedSlicesSpec",
      "tensorflow_core.python.framework.indexed_slices.IndexedSlicesValue",
      "tensorflow_core.python.framework.indexed_slices.convert_n_to_tensor_or_indexed_slices",
      "tensorflow_core.python.framework.indexed_slices.convert_to_tensor_or_indexed_slices",
      "tensorflow_core.python.framework.indexed_slices.internal_convert_n_to_tensor_or_indexed_slices",
      "tensorflow_core.python.framework.indexed_slices.internal_convert_to_tensor_or_indexed_slices",
      "tensorflow_core.python.framework.indexed_slices.math_ops",
      "tensorflow_core.python.framework.indexed_slices.ops",
      "tensorflow_core.python.framework.indexed_slices.tensor_spec",
      "tensorflow_core.python.framework.indexed_slices.tensor_util"
    ],
    "tensorflow_core/python/framework/kernels.py": [
      "tensorflow_core.python.framework.kernels.get_all_registered_kernels",
      "tensorflow_core.python.framework.kernels.get_registered_kernels_for_op"
    ],
    "tensorflow_core/python/framework/load_library.py": [
      "tensorflow_core.python.framework.load_library.load_file_system_library",
      "tensorflow_core.python.framework.load_library.load_library",
      "tensorflow_core.python.framework.load_library.load_op_library"
    ],
    "tensorflow_core/python/framework/meta_graph.py": [
      "tensorflow_core.python.framework.meta_graph.SAVE_AND_RESTORE_OPS",
      "tensorflow_core.python.framework.meta_graph.add_collection_def",
      "tensorflow_core.python.framework.meta_graph.copy_scoped_meta_graph",
      "tensorflow_core.python.framework.meta_graph.create_meta_graph_def",
      "tensorflow_core.python.framework.meta_graph.export_scoped_meta_graph",
      "tensorflow_core.python.framework.meta_graph.import_scoped_meta_graph",
      "tensorflow_core.python.framework.meta_graph.import_scoped_meta_graph_with_return_elements",
      "tensorflow_core.python.framework.meta_graph.ops_used_by_graph_def",
      "tensorflow_core.python.framework.meta_graph.read_meta_graph_file",
      "tensorflow_core.python.framework.meta_graph.strip_graph_default_valued_attrs",
      "tensorflow_core.python.framework.meta_graph.stripped_op_list_for_graph"
    ],
    "tensorflow_core/python/framework/op_callbacks.py": [
      "tensorflow_core.python.framework.op_callbacks.invoke_op_callbacks",
      "tensorflow_core.python.framework.op_callbacks.op_callback",
      "tensorflow_core.python.framework.op_callbacks.should_invoke_op_callbacks"
    ],
    "tensorflow_core/python/framework/op_def_library.py": [
      "tensorflow_core.python.framework.op_def_library.OpDefLibrary"
    ],
    "tensorflow_core/python/framework/op_def_registry.py": [
      "tensorflow_core.python.framework.op_def_registry.get_registered_ops",
      "tensorflow_core.python.framework.op_def_registry.register_op_list"
    ],
    "tensorflow_core/python/framework/ops.py": [
      "tensorflow_core.python.framework.ops.EagerTensor",
      "tensorflow_core.python.framework.ops.Graph",
      "tensorflow_core.python.framework.ops.GraphKeys",
      "tensorflow_core.python.framework.ops.IndexedSlices",
      "tensorflow_core.python.framework.ops.IndexedSlicesValue",
      "tensorflow_core.python.framework.ops.NoGradient",
      "tensorflow_core.python.framework.ops.NotDifferentiable",
      "tensorflow_core.python.framework.ops.NullContextmanager",
      "tensorflow_core.python.framework.ops.OpStats",
      "tensorflow_core.python.framework.ops.Operation",
      "tensorflow_core.python.framework.ops.RegisterGradient",
      "tensorflow_core.python.framework.ops.RegisterShape",
      "tensorflow_core.python.framework.ops.RegisterStatistics",
      "tensorflow_core.python.framework.ops.Tensor",
      "tensorflow_core.python.framework.ops.add_to_collection",
      "tensorflow_core.python.framework.ops.add_to_collections",
      "tensorflow_core.python.framework.ops.ag_ctx",
      "tensorflow_core.python.framework.ops.colocate_with",
      "tensorflow_core.python.framework.ops.container",
      "tensorflow_core.python.framework.ops.control_dependencies",
      "tensorflow_core.python.framework.ops.convert_n_to_tensor",
      "tensorflow_core.python.framework.ops.convert_n_to_tensor_or_composite",
      "tensorflow_core.python.framework.ops.convert_n_to_tensor_or_indexed_slices",
      "tensorflow_core.python.framework.ops.convert_to_tensor",
      "tensorflow_core.python.framework.ops.convert_to_tensor_or_composite",
      "tensorflow_core.python.framework.ops.convert_to_tensor_or_indexed_slices",
      "tensorflow_core.python.framework.ops.convert_to_tensor_v2",
      "tensorflow_core.python.framework.ops.default_session",
      "tensorflow_core.python.framework.ops.device",
      "tensorflow_core.python.framework.ops.device_v2",
      "tensorflow_core.python.framework.ops.disable_eager_execution",
      "tensorflow_core.python.framework.ops.disable_tensor_equality",
      "tensorflow_core.python.framework.ops.dismantle_graph",
      "tensorflow_core.python.framework.ops.eager_run",
      "tensorflow_core.python.framework.ops.enable_eager_execution",
      "tensorflow_core.python.framework.ops.enable_eager_execution_internal",
      "tensorflow_core.python.framework.ops.enable_tensor_equality",
      "tensorflow_core.python.framework.ops.enter_eager_name_scope",
      "tensorflow_core.python.framework.ops.executing_eagerly_outside_functions",
      "tensorflow_core.python.framework.ops.get_all_collection_keys",
      "tensorflow_core.python.framework.ops.get_collection",
      "tensorflow_core.python.framework.ops.get_collection_proto_type",
      "tensorflow_core.python.framework.ops.get_collection_ref",
      "tensorflow_core.python.framework.ops.get_default_graph",
      "tensorflow_core.python.framework.ops.get_default_session",
      "tensorflow_core.python.framework.ops.get_from_proto_function",
      "tensorflow_core.python.framework.ops.get_gradient_function",
      "tensorflow_core.python.framework.ops.get_name_scope",
      "tensorflow_core.python.framework.ops.get_stats_for_node_def",
      "tensorflow_core.python.framework.ops.get_to_proto_function",
      "tensorflow_core.python.framework.ops.has_default_graph",
      "tensorflow_core.python.framework.ops.init_scope",
      "tensorflow_core.python.framework.ops.inside_function",
      "tensorflow_core.python.framework.ops.internal_convert_n_to_tensor",
      "tensorflow_core.python.framework.ops.internal_convert_n_to_tensor_or_composite",
      "tensorflow_core.python.framework.ops.internal_convert_n_to_tensor_or_indexed_slices",
      "tensorflow_core.python.framework.ops.internal_convert_to_tensor",
      "tensorflow_core.python.framework.ops.internal_convert_to_tensor_or_composite",
      "tensorflow_core.python.framework.ops.internal_convert_to_tensor_or_indexed_slices",
      "tensorflow_core.python.framework.ops.is_dense_tensor_like",
      "tensorflow_core.python.framework.ops.name_from_scope_name",
      "tensorflow_core.python.framework.ops.name_scope",
      "tensorflow_core.python.framework.ops.name_scope_v2",
      "tensorflow_core.python.framework.ops.no_gradient",
      "tensorflow_core.python.framework.ops.numpy_text",
      "tensorflow_core.python.framework.ops.op_scope",
      "tensorflow_core.python.framework.ops.prepend_name_scope",
      "tensorflow_core.python.framework.ops.register_dense_tensor_like_type",
      "tensorflow_core.python.framework.ops.register_proto_function",
      "tensorflow_core.python.framework.ops.register_tensor_conversion_function",
      "tensorflow_core.python.framework.ops.reset_default_graph",
      "tensorflow_core.python.framework.ops.set_shape_and_handle_data_for_outputs",
      "tensorflow_core.python.framework.ops.strip_name_scope",
      "tensorflow_core.python.framework.ops.tensor_id",
      "tensorflow_core.python.framework.ops.uid"
    ],
    "tensorflow_core/python/framework/random_seed.py": [
      "tensorflow_core.python.framework.random_seed.DEFAULT_GRAPH_SEED",
      "tensorflow_core.python.framework.random_seed.get_seed",
      "tensorflow_core.python.framework.random_seed.set_random_seed",
      "tensorflow_core.python.framework.random_seed.set_seed"
    ],
    "tensorflow_core/python/framework/registry.py": [
      "tensorflow_core.python.framework.registry.Registry"
    ],
    "tensorflow_core/python/framework/smart_cond.py": [
      "tensorflow_core.python.framework.smart_cond.smart_case",
      "tensorflow_core.python.framework.smart_cond.smart_cond",
      "tensorflow_core.python.framework.smart_cond.smart_constant_value"
    ],
    "tensorflow_core/python/framework/sparse_tensor.py": [
      "tensorflow_core.python.framework.sparse_tensor.SparseTensor",
      "tensorflow_core.python.framework.sparse_tensor.SparseTensorSpec",
      "tensorflow_core.python.framework.sparse_tensor.SparseTensorValue",
      "tensorflow_core.python.framework.sparse_tensor.convert_to_tensor_or_sparse_tensor",
      "tensorflow_core.python.framework.sparse_tensor.is_sparse"
    ],
    "tensorflow_core/python/framework/subscribe.py": [
      "tensorflow_core.python.framework.subscribe.subscribe"
    ],
    "tensorflow_core/python/framework/tensor_conversion_registry.py": [
      "tensorflow_core.python.framework.tensor_conversion_registry.constant_op",
      "tensorflow_core.python.framework.tensor_conversion_registry.get",
      "tensorflow_core.python.framework.tensor_conversion_registry.register_tensor_conversion_function"
    ],
    "tensorflow_core/python/framework/tensor_like.py": [],
    "tensorflow_core/python/framework/tensor_shape.py": [
      "tensorflow_core.python.framework.tensor_shape.Dimension",
      "tensorflow_core.python.framework.tensor_shape.TensorShape",
      "tensorflow_core.python.framework.tensor_shape.as_dimension",
      "tensorflow_core.python.framework.tensor_shape.as_shape",
      "tensorflow_core.python.framework.tensor_shape.dimension_at_index",
      "tensorflow_core.python.framework.tensor_shape.dimension_value",
      "tensorflow_core.python.framework.tensor_shape.disable_v2_tensorshape",
      "tensorflow_core.python.framework.tensor_shape.enable_v2_tensorshape",
      "tensorflow_core.python.framework.tensor_shape.matrix",
      "tensorflow_core.python.framework.tensor_shape.scalar",
      "tensorflow_core.python.framework.tensor_shape.unknown_shape",
      "tensorflow_core.python.framework.tensor_shape.vector"
    ],
    "tensorflow_core/python/framework/tensor_spec.py": [
      "tensorflow_core.python.framework.tensor_spec.BoundedTensorSpec",
      "tensorflow_core.python.framework.tensor_spec.TensorSpec"
    ],
    "tensorflow_core/python/framework/tensor_util.py": [
      "tensorflow_core.python.framework.tensor_util.ExtractBitsFromBFloat16",
      "tensorflow_core.python.framework.tensor_util.ExtractBitsFromFloat16",
      "tensorflow_core.python.framework.tensor_util.FastAppendBFloat16ArrayToTensorProto",
      "tensorflow_core.python.framework.tensor_util.GetFromNumpyDTypeDict",
      "tensorflow_core.python.framework.tensor_util.GetNumpyAppendFn",
      "tensorflow_core.python.framework.tensor_util.MakeNdarray",
      "tensorflow_core.python.framework.tensor_util.ShapeEquals",
      "tensorflow_core.python.framework.tensor_util.SlowAppendBFloat16ArrayToTensorProto",
      "tensorflow_core.python.framework.tensor_util.SlowAppendFloat16ArrayToTensorProto",
      "tensorflow_core.python.framework.tensor_util.TensorShapeProtoToList",
      "tensorflow_core.python.framework.tensor_util.constant_value",
      "tensorflow_core.python.framework.tensor_util.constant_value_as_shape",
      "tensorflow_core.python.framework.tensor_util.is_tensor",
      "tensorflow_core.python.framework.tensor_util.make_tensor_proto",
      "tensorflow_core.python.framework.tensor_util.maybe_set_static_shape",
      "tensorflow_core.python.framework.tensor_util.shape_tensor"
    ],
    "tensorflow_core/python/framework/test_combinations.py": [
      "tensorflow_core.python.framework.test_combinations.NamedObject",
      "tensorflow_core.python.framework.test_combinations.OptionalParameter",
      "tensorflow_core.python.framework.test_combinations.ParameterModifier",
      "tensorflow_core.python.framework.test_combinations.TestCombination",
      "tensorflow_core.python.framework.test_combinations.combine",
      "tensorflow_core.python.framework.test_combinations.generate",
      "tensorflow_core.python.framework.test_combinations.times"
    ],
    "tensorflow_core/python/framework/test_ops.py": [
      "tensorflow_core.python.framework.test_ops.A",
      "tensorflow_core.python.framework.test_ops.Attr",
      "tensorflow_core.python.framework.test_ops.AttrBool",
      "tensorflow_core.python.framework.test_ops.AttrBoolList",
      "tensorflow_core.python.framework.test_ops.AttrDefault",
      "tensorflow_core.python.framework.test_ops.AttrEmptyListDefault",
      "tensorflow_core.python.framework.test_ops.AttrEnum",
      "tensorflow_core.python.framework.test_ops.AttrEnumList",
      "tensorflow_core.python.framework.test_ops.AttrFloat",
      "tensorflow_core.python.framework.test_ops.AttrListDefault",
      "tensorflow_core.python.framework.test_ops.AttrListMin",
      "tensorflow_core.python.framework.test_ops.AttrListTypeDefault",
      "tensorflow_core.python.framework.test_ops.AttrMin",
      "tensorflow_core.python.framework.test_ops.AttrPartialShape",
      "tensorflow_core.python.framework.test_ops.AttrPartialShapeList",
      "tensorflow_core.python.framework.test_ops.AttrShape",
      "tensorflow_core.python.framework.test_ops.AttrShapeList",
      "tensorflow_core.python.framework.test_ops.AttrTypeDefault",
      "tensorflow_core.python.framework.test_ops.B",
      "tensorflow_core.python.framework.test_ops.Binary",
      "tensorflow_core.python.framework.test_ops.ComplexStruct",
      "tensorflow_core.python.framework.test_ops.CopyOp",
      "tensorflow_core.python.framework.test_ops.DefaultAttrs",
      "tensorflow_core.python.framework.test_ops.DevicePlacementOp",
      "tensorflow_core.python.framework.test_ops.FiveFloatOutputs",
      "tensorflow_core.python.framework.test_ops.FloatInput",
      "tensorflow_core.python.framework.test_ops.FloatOutput",
      "tensorflow_core.python.framework.test_ops.FloatOutputStringOutput",
      "tensorflow_core.python.framework.test_ops.Foo1",
      "tensorflow_core.python.framework.test_ops.Foo2",
      "tensorflow_core.python.framework.test_ops.Foo3",
      "tensorflow_core.python.framework.test_ops.FuncAttr",
      "tensorflow_core.python.framework.test_ops.FuncListAttr",
      "tensorflow_core.python.framework.test_ops.GraphDefVersion",
      "tensorflow_core.python.framework.test_ops.InPolymorphicTwice",
      "tensorflow_core.python.framework.test_ops.Int64Output",
      "tensorflow_core.python.framework.test_ops.IntAttr",
      "tensorflow_core.python.framework.test_ops.IntInput",
      "tensorflow_core.python.framework.test_ops.IntInputFloatInput",
      "tensorflow_core.python.framework.test_ops.IntInputIntOutput",
      "tensorflow_core.python.framework.test_ops.IntOutput",
      "tensorflow_core.python.framework.test_ops.IntOutputFloatOutput",
      "tensorflow_core.python.framework.test_ops.KernelLabel",
      "tensorflow_core.python.framework.test_ops.KernelLabelRequired",
      "tensorflow_core.python.framework.test_ops.ListInput",
      "tensorflow_core.python.framework.test_ops.ListOutput",
      "tensorflow_core.python.framework.test_ops.MixedStruct",
      "tensorflow_core.python.framework.test_ops.NInPolymorphicTwice",
      "tensorflow_core.python.framework.test_ops.NInTwice",
      "tensorflow_core.python.framework.test_ops.NInTwoTypeVariables",
      "tensorflow_core.python.framework.test_ops.NIntsIn",
      "tensorflow_core.python.framework.test_ops.NIntsOut",
      "tensorflow_core.python.framework.test_ops.NIntsOutDefault",
      "tensorflow_core.python.framework.test_ops.NPolymorphicIn",
      "tensorflow_core.python.framework.test_ops.NPolymorphicOut",
      "tensorflow_core.python.framework.test_ops.NPolymorphicOutDefault",
      "tensorflow_core.python.framework.test_ops.NPolymorphicRestrictIn",
      "tensorflow_core.python.framework.test_ops.NPolymorphicRestrictOut",
      "tensorflow_core.python.framework.test_ops.None_",
      "tensorflow_core.python.framework.test_ops.Old",
      "tensorflow_core.python.framework.test_ops.OpWithDefaultAttr",
      "tensorflow_core.python.framework.test_ops.OpWithFutureDefaultAttr",
      "tensorflow_core.python.framework.test_ops.OutT",
      "tensorflow_core.python.framework.test_ops.OutTypeList",
      "tensorflow_core.python.framework.test_ops.OutTypeListRestrict",
      "tensorflow_core.python.framework.test_ops.Polymorphic",
      "tensorflow_core.python.framework.test_ops.PolymorphicDefaultOut",
      "tensorflow_core.python.framework.test_ops.PolymorphicOut",
      "tensorflow_core.python.framework.test_ops.RefIn",
      "tensorflow_core.python.framework.test_ops.RefInputFloatInput",
      "tensorflow_core.python.framework.test_ops.RefInputFloatInputIntOutput",
      "tensorflow_core.python.framework.test_ops.RefInputIntInput",
      "tensorflow_core.python.framework.test_ops.RefOut",
      "tensorflow_core.python.framework.test_ops.RefOutput",
      "tensorflow_core.python.framework.test_ops.RefOutputFloatOutput",
      "tensorflow_core.python.framework.test_ops.RequiresOlderGraphVersion",
      "tensorflow_core.python.framework.test_ops.ReservedAttr",
      "tensorflow_core.python.framework.test_ops.ReservedInput",
      "tensorflow_core.python.framework.test_ops.ResourceCreateOp",
      "tensorflow_core.python.framework.test_ops.ResourceInitializedOp",
      "tensorflow_core.python.framework.test_ops.ResourceUsingOp",
      "tensorflow_core.python.framework.test_ops.Restrict",
      "tensorflow_core.python.framework.test_ops.Simple",
      "tensorflow_core.python.framework.test_ops.SimpleStruct",
      "tensorflow_core.python.framework.test_ops.StringListAttr",
      "tensorflow_core.python.framework.test_ops.StubResourceHandleOp",
      "tensorflow_core.python.framework.test_ops.TestAttr",
      "tensorflow_core.python.framework.test_ops.TestStringOutput",
      "tensorflow_core.python.framework.test_ops.TwoFloatInputs",
      "tensorflow_core.python.framework.test_ops.TwoFloatInputsFloatOutput",
      "tensorflow_core.python.framework.test_ops.TwoFloatInputsIntOutput",
      "tensorflow_core.python.framework.test_ops.TwoFloatOutputs",
      "tensorflow_core.python.framework.test_ops.TwoIntInputs",
      "tensorflow_core.python.framework.test_ops.TwoIntOutputs",
      "tensorflow_core.python.framework.test_ops.TwoRefsIn",
      "tensorflow_core.python.framework.test_ops.TypeList",
      "tensorflow_core.python.framework.test_ops.TypeListRestrict",
      "tensorflow_core.python.framework.test_ops.TypeListTwice",
      "tensorflow_core.python.framework.test_ops.Unary",
      "tensorflow_core.python.framework.test_ops.a",
      "tensorflow_core.python.framework.test_ops.a_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr",
      "tensorflow_core.python.framework.test_ops.attr_bool",
      "tensorflow_core.python.framework.test_ops.attr_bool_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_bool_list",
      "tensorflow_core.python.framework.test_ops.attr_bool_list_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_default",
      "tensorflow_core.python.framework.test_ops.attr_default_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_empty_list_default",
      "tensorflow_core.python.framework.test_ops.attr_empty_list_default_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_enum",
      "tensorflow_core.python.framework.test_ops.attr_enum_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_enum_list",
      "tensorflow_core.python.framework.test_ops.attr_enum_list_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_float",
      "tensorflow_core.python.framework.test_ops.attr_float_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_list_default",
      "tensorflow_core.python.framework.test_ops.attr_list_default_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_list_min",
      "tensorflow_core.python.framework.test_ops.attr_list_min_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_list_type_default",
      "tensorflow_core.python.framework.test_ops.attr_list_type_default_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_min",
      "tensorflow_core.python.framework.test_ops.attr_min_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_partial_shape",
      "tensorflow_core.python.framework.test_ops.attr_partial_shape_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_partial_shape_list",
      "tensorflow_core.python.framework.test_ops.attr_partial_shape_list_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_shape",
      "tensorflow_core.python.framework.test_ops.attr_shape_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_shape_list",
      "tensorflow_core.python.framework.test_ops.attr_shape_list_eager_fallback",
      "tensorflow_core.python.framework.test_ops.attr_type_default",
      "tensorflow_core.python.framework.test_ops.attr_type_default_eager_fallback",
      "tensorflow_core.python.framework.test_ops.b",
      "tensorflow_core.python.framework.test_ops.b_eager_fallback",
      "tensorflow_core.python.framework.test_ops.binary",
      "tensorflow_core.python.framework.test_ops.binary_eager_fallback",
      "tensorflow_core.python.framework.test_ops.complex_struct",
      "tensorflow_core.python.framework.test_ops.complex_struct_eager_fallback",
      "tensorflow_core.python.framework.test_ops.copy_op",
      "tensorflow_core.python.framework.test_ops.copy_op_eager_fallback",
      "tensorflow_core.python.framework.test_ops.default_attrs",
      "tensorflow_core.python.framework.test_ops.default_attrs_eager_fallback",
      "tensorflow_core.python.framework.test_ops.device_placement_op",
      "tensorflow_core.python.framework.test_ops.device_placement_op_eager_fallback",
      "tensorflow_core.python.framework.test_ops.five_float_outputs",
      "tensorflow_core.python.framework.test_ops.five_float_outputs_eager_fallback",
      "tensorflow_core.python.framework.test_ops.float_input",
      "tensorflow_core.python.framework.test_ops.float_input_eager_fallback",
      "tensorflow_core.python.framework.test_ops.float_output",
      "tensorflow_core.python.framework.test_ops.float_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.float_output_string_output",
      "tensorflow_core.python.framework.test_ops.float_output_string_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.foo1",
      "tensorflow_core.python.framework.test_ops.foo1_eager_fallback",
      "tensorflow_core.python.framework.test_ops.foo2",
      "tensorflow_core.python.framework.test_ops.foo2_eager_fallback",
      "tensorflow_core.python.framework.test_ops.foo3",
      "tensorflow_core.python.framework.test_ops.foo3_eager_fallback",
      "tensorflow_core.python.framework.test_ops.func_attr",
      "tensorflow_core.python.framework.test_ops.func_attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.func_list_attr",
      "tensorflow_core.python.framework.test_ops.func_list_attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.graph_def_version",
      "tensorflow_core.python.framework.test_ops.graph_def_version_eager_fallback",
      "tensorflow_core.python.framework.test_ops.in_polymorphic_twice",
      "tensorflow_core.python.framework.test_ops.in_polymorphic_twice_eager_fallback",
      "tensorflow_core.python.framework.test_ops.int64_output",
      "tensorflow_core.python.framework.test_ops.int64_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.int_attr",
      "tensorflow_core.python.framework.test_ops.int_attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.int_input",
      "tensorflow_core.python.framework.test_ops.int_input_eager_fallback",
      "tensorflow_core.python.framework.test_ops.int_input_float_input",
      "tensorflow_core.python.framework.test_ops.int_input_float_input_eager_fallback",
      "tensorflow_core.python.framework.test_ops.int_input_int_output",
      "tensorflow_core.python.framework.test_ops.int_input_int_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.int_output",
      "tensorflow_core.python.framework.test_ops.int_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.int_output_float_output",
      "tensorflow_core.python.framework.test_ops.int_output_float_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.kernel_label",
      "tensorflow_core.python.framework.test_ops.kernel_label_eager_fallback",
      "tensorflow_core.python.framework.test_ops.kernel_label_required",
      "tensorflow_core.python.framework.test_ops.kernel_label_required_eager_fallback",
      "tensorflow_core.python.framework.test_ops.list_input",
      "tensorflow_core.python.framework.test_ops.list_input_eager_fallback",
      "tensorflow_core.python.framework.test_ops.list_output",
      "tensorflow_core.python.framework.test_ops.list_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.mixed_struct",
      "tensorflow_core.python.framework.test_ops.mixed_struct_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_in_polymorphic_twice",
      "tensorflow_core.python.framework.test_ops.n_in_polymorphic_twice_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_in_twice",
      "tensorflow_core.python.framework.test_ops.n_in_twice_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_in_two_type_variables",
      "tensorflow_core.python.framework.test_ops.n_in_two_type_variables_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_ints_in",
      "tensorflow_core.python.framework.test_ops.n_ints_in_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_ints_out",
      "tensorflow_core.python.framework.test_ops.n_ints_out_default",
      "tensorflow_core.python.framework.test_ops.n_ints_out_default_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_ints_out_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_in",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_in_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_out",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_out_default",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_out_default_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_out_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_restrict_in",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_restrict_in_eager_fallback",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_restrict_out",
      "tensorflow_core.python.framework.test_ops.n_polymorphic_restrict_out_eager_fallback",
      "tensorflow_core.python.framework.test_ops.none",
      "tensorflow_core.python.framework.test_ops.none_eager_fallback",
      "tensorflow_core.python.framework.test_ops.old",
      "tensorflow_core.python.framework.test_ops.old_eager_fallback",
      "tensorflow_core.python.framework.test_ops.op_with_default_attr",
      "tensorflow_core.python.framework.test_ops.op_with_default_attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.op_with_future_default_attr",
      "tensorflow_core.python.framework.test_ops.op_with_future_default_attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.out_t",
      "tensorflow_core.python.framework.test_ops.out_t_eager_fallback",
      "tensorflow_core.python.framework.test_ops.out_type_list",
      "tensorflow_core.python.framework.test_ops.out_type_list_eager_fallback",
      "tensorflow_core.python.framework.test_ops.out_type_list_restrict",
      "tensorflow_core.python.framework.test_ops.out_type_list_restrict_eager_fallback",
      "tensorflow_core.python.framework.test_ops.polymorphic",
      "tensorflow_core.python.framework.test_ops.polymorphic_default_out",
      "tensorflow_core.python.framework.test_ops.polymorphic_default_out_eager_fallback",
      "tensorflow_core.python.framework.test_ops.polymorphic_eager_fallback",
      "tensorflow_core.python.framework.test_ops.polymorphic_out",
      "tensorflow_core.python.framework.test_ops.polymorphic_out_eager_fallback",
      "tensorflow_core.python.framework.test_ops.ref_in",
      "tensorflow_core.python.framework.test_ops.ref_in_eager_fallback",
      "tensorflow_core.python.framework.test_ops.ref_input_float_input",
      "tensorflow_core.python.framework.test_ops.ref_input_float_input_eager_fallback",
      "tensorflow_core.python.framework.test_ops.ref_input_float_input_int_output",
      "tensorflow_core.python.framework.test_ops.ref_input_float_input_int_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.ref_input_int_input",
      "tensorflow_core.python.framework.test_ops.ref_input_int_input_eager_fallback",
      "tensorflow_core.python.framework.test_ops.ref_out",
      "tensorflow_core.python.framework.test_ops.ref_out_eager_fallback",
      "tensorflow_core.python.framework.test_ops.ref_output",
      "tensorflow_core.python.framework.test_ops.ref_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.ref_output_float_output",
      "tensorflow_core.python.framework.test_ops.ref_output_float_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.requires_older_graph_version",
      "tensorflow_core.python.framework.test_ops.requires_older_graph_version_eager_fallback",
      "tensorflow_core.python.framework.test_ops.reserved_attr",
      "tensorflow_core.python.framework.test_ops.reserved_attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.reserved_input",
      "tensorflow_core.python.framework.test_ops.reserved_input_eager_fallback",
      "tensorflow_core.python.framework.test_ops.resource_create_op",
      "tensorflow_core.python.framework.test_ops.resource_create_op_eager_fallback",
      "tensorflow_core.python.framework.test_ops.resource_initialized_op",
      "tensorflow_core.python.framework.test_ops.resource_initialized_op_eager_fallback",
      "tensorflow_core.python.framework.test_ops.resource_using_op",
      "tensorflow_core.python.framework.test_ops.resource_using_op_eager_fallback",
      "tensorflow_core.python.framework.test_ops.restrict",
      "tensorflow_core.python.framework.test_ops.restrict_eager_fallback",
      "tensorflow_core.python.framework.test_ops.simple",
      "tensorflow_core.python.framework.test_ops.simple_eager_fallback",
      "tensorflow_core.python.framework.test_ops.simple_struct",
      "tensorflow_core.python.framework.test_ops.simple_struct_eager_fallback",
      "tensorflow_core.python.framework.test_ops.string_list_attr",
      "tensorflow_core.python.framework.test_ops.string_list_attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.stub_resource_handle_op",
      "tensorflow_core.python.framework.test_ops.stub_resource_handle_op_eager_fallback",
      "tensorflow_core.python.framework.test_ops.test_attr",
      "tensorflow_core.python.framework.test_ops.test_attr_eager_fallback",
      "tensorflow_core.python.framework.test_ops.test_string_output",
      "tensorflow_core.python.framework.test_ops.test_string_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.two_float_inputs",
      "tensorflow_core.python.framework.test_ops.two_float_inputs_eager_fallback",
      "tensorflow_core.python.framework.test_ops.two_float_inputs_float_output",
      "tensorflow_core.python.framework.test_ops.two_float_inputs_float_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.two_float_inputs_int_output",
      "tensorflow_core.python.framework.test_ops.two_float_inputs_int_output_eager_fallback",
      "tensorflow_core.python.framework.test_ops.two_float_outputs",
      "tensorflow_core.python.framework.test_ops.two_float_outputs_eager_fallback",
      "tensorflow_core.python.framework.test_ops.two_int_inputs",
      "tensorflow_core.python.framework.test_ops.two_int_inputs_eager_fallback",
      "tensorflow_core.python.framework.test_ops.two_int_outputs",
      "tensorflow_core.python.framework.test_ops.two_int_outputs_eager_fallback",
      "tensorflow_core.python.framework.test_ops.two_refs_in",
      "tensorflow_core.python.framework.test_ops.two_refs_in_eager_fallback",
      "tensorflow_core.python.framework.test_ops.type_list",
      "tensorflow_core.python.framework.test_ops.type_list_eager_fallback",
      "tensorflow_core.python.framework.test_ops.type_list_restrict",
      "tensorflow_core.python.framework.test_ops.type_list_restrict_eager_fallback",
      "tensorflow_core.python.framework.test_ops.type_list_twice",
      "tensorflow_core.python.framework.test_ops.type_list_twice_eager_fallback",
      "tensorflow_core.python.framework.test_ops.unary",
      "tensorflow_core.python.framework.test_ops.unary_eager_fallback"
    ],
    "tensorflow_core/python/framework/test_util.py": [
      "tensorflow_core.python.framework.test_util.CapturedWrites",
      "tensorflow_core.python.framework.test_util.EagerSessionWarner",
      "tensorflow_core.python.framework.test_util.ErrorLoggingSession",
      "tensorflow_core.python.framework.test_util.FakeEagerSession",
      "tensorflow_core.python.framework.test_util.GpuSupportsHalfMatMulAndConv",
      "tensorflow_core.python.framework.test_util.InstallStackTraceHandler",
      "tensorflow_core.python.framework.test_util.IsBuiltWithROCm",
      "tensorflow_core.python.framework.test_util.IsGoogleCudaEnabled",
      "tensorflow_core.python.framework.test_util.IsMklEnabled",
      "tensorflow_core.python.framework.test_util.NCHWToNHWC",
      "tensorflow_core.python.framework.test_util.NCHW_VECT_CToNHWC",
      "tensorflow_core.python.framework.test_util.NHWCToNCHW",
      "tensorflow_core.python.framework.test_util.NHWCToNCHW_VECT_C",
      "tensorflow_core.python.framework.test_util.TensorFlowTestCase",
      "tensorflow_core.python.framework.test_util.also_run_as_tf_function",
      "tensorflow_core.python.framework.test_util.assert_equal_graph_def",
      "tensorflow_core.python.framework.test_util.assert_equal_graph_def_v1",
      "tensorflow_core.python.framework.test_util.assert_equal_graph_def_v2",
      "tensorflow_core.python.framework.test_util.assert_meta_graph_protos_equal",
      "tensorflow_core.python.framework.test_util.assert_no_garbage_created",
      "tensorflow_core.python.framework.test_util.assert_no_new_pyobjects_executing_eagerly",
      "tensorflow_core.python.framework.test_util.assert_no_new_tensors",
      "tensorflow_core.python.framework.test_util.assert_ops_in_graph",
      "tensorflow_core.python.framework.test_util.build_as_function_and_v1_graph",
      "tensorflow_core.python.framework.test_util.create_local_cluster",
      "tensorflow_core.python.framework.test_util.deprecated_graph_mode_only",
      "tensorflow_core.python.framework.test_util.device",
      "tensorflow_core.python.framework.test_util.disable_control_flow_v2",
      "tensorflow_core.python.framework.test_util.disable_xla",
      "tensorflow_core.python.framework.test_util.enable_c_shapes",
      "tensorflow_core.python.framework.test_util.enable_control_flow_v2",
      "tensorflow_core.python.framework.test_util.enable_output_all_intermediates",
      "tensorflow_core.python.framework.test_util.enable_tf_xla_constant_folding",
      "tensorflow_core.python.framework.test_util.for_all_test_methods",
      "tensorflow_core.python.framework.test_util.force_cpu",
      "tensorflow_core.python.framework.test_util.force_gpu",
      "tensorflow_core.python.framework.test_util.generate_combinations_with_testcase_name",
      "tensorflow_core.python.framework.test_util.get_node_def_from_graph",
      "tensorflow_core.python.framework.test_util.gpu_device_name",
      "tensorflow_core.python.framework.test_util.is_gpu_available",
      "tensorflow_core.python.framework.test_util.is_xla_enabled",
      "tensorflow_core.python.framework.test_util.no_xla_auto_jit",
      "tensorflow_core.python.framework.test_util.py_func_if_in_function",
      "tensorflow_core.python.framework.test_util.run_all_in_graph_and_eager_modes",
      "tensorflow_core.python.framework.test_util.run_cuda_only",
      "tensorflow_core.python.framework.test_util.run_deprecated_v1",
      "tensorflow_core.python.framework.test_util.run_gpu_only",
      "tensorflow_core.python.framework.test_util.run_in_graph_and_eager_modes",
      "tensorflow_core.python.framework.test_util.run_v1_only",
      "tensorflow_core.python.framework.test_util.run_v2_only",
      "tensorflow_core.python.framework.test_util.set_producer_version",
      "tensorflow_core.python.framework.test_util.skip_if",
      "tensorflow_core.python.framework.test_util.use_deterministic_cudnn",
      "tensorflow_core.python.framework.test_util.use_gpu",
      "tensorflow_core.python.framework.test_util.with_c_shapes",
      "tensorflow_core.python.framework.test_util.with_control_flow_v2",
      "tensorflow_core.python.framework.test_util.xla_allow_fallback"
    ],
    "tensorflow_core/python/framework/traceable_stack.py": [
      "tensorflow_core.python.framework.traceable_stack.TraceableObject",
      "tensorflow_core.python.framework.traceable_stack.TraceableStack"
    ],
    "tensorflow_core/python/framework/type_spec.py": [
      "tensorflow_core.python.framework.type_spec.BatchableTypeSpec",
      "tensorflow_core.python.framework.type_spec.TypeSpec",
      "tensorflow_core.python.framework.type_spec.ops",
      "tensorflow_core.python.framework.type_spec.register_type_spec_from_value_converter",
      "tensorflow_core.python.framework.type_spec.tensor_spec",
      "tensorflow_core.python.framework.type_spec.type_spec_from_value"
    ],
    "tensorflow_core/python/framework/versions.py": [
      "tensorflow_core.python.framework.versions.COMPILER_VERSION",
      "tensorflow_core.python.framework.versions.CXX11_ABI_FLAG",
      "tensorflow_core.python.framework.versions.GIT_VERSION",
      "tensorflow_core.python.framework.versions.GRAPH_DEF_VERSION",
      "tensorflow_core.python.framework.versions.GRAPH_DEF_VERSION_MIN_CONSUMER",
      "tensorflow_core.python.framework.versions.GRAPH_DEF_VERSION_MIN_PRODUCER",
      "tensorflow_core.python.framework.versions.MONOLITHIC_BUILD",
      "tensorflow_core.python.framework.versions.VERSION"
    ],
    "tensorflow_core/python/grappler/__init__.py": [],
    "tensorflow_core/python/grappler/cluster.py": [
      "tensorflow_core.python.grappler.cluster.Cluster",
      "tensorflow_core.python.grappler.cluster.Provision"
    ],
    "tensorflow_core/python/grappler/item.py": [
      "tensorflow_core.python.grappler.item.Item"
    ],
    "tensorflow_core/python/grappler/tf_optimizer.py": [
      "tensorflow_core.python.grappler.tf_optimizer.OptimizeGraph"
    ],
    "tensorflow_core/python/keras/__init__.py": [],
    "tensorflow_core/python/keras/activations.py": [
      "tensorflow_core.python.keras.activations.deserialize",
      "tensorflow_core.python.keras.activations.elu",
      "tensorflow_core.python.keras.activations.exponential",
      "tensorflow_core.python.keras.activations.get",
      "tensorflow_core.python.keras.activations.hard_sigmoid",
      "tensorflow_core.python.keras.activations.linear",
      "tensorflow_core.python.keras.activations.relu",
      "tensorflow_core.python.keras.activations.selu",
      "tensorflow_core.python.keras.activations.serialize",
      "tensorflow_core.python.keras.activations.sigmoid",
      "tensorflow_core.python.keras.activations.softmax",
      "tensorflow_core.python.keras.activations.softplus",
      "tensorflow_core.python.keras.activations.softsign",
      "tensorflow_core.python.keras.activations.tanh"
    ],
    "tensorflow_core/python/keras/api/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/activations/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/densenet/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/imagenet_utils/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/inception_resnet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/inception_v3/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/mobilenet/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/mobilenet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/nasnet/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/resnet/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/resnet50/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/resnet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/vgg16/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/vgg19/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/applications/xception/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/backend/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/callbacks/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/constraints/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/datasets/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/datasets/boston_housing/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/datasets/cifar10/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/datasets/cifar100/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/datasets/fashion_mnist/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/datasets/imdb/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/datasets/mnist/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/datasets/reuters/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/estimator/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/initializers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/layers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/layers/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/losses/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/metrics/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/mixed_precision/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/mixed_precision/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/models/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/optimizers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/optimizers/schedules/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/premade/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/preprocessing/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/preprocessing/image/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/preprocessing/sequence/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/preprocessing/text/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/regularizers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/utils/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/wrappers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v1/keras/wrappers/scikit_learn/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/activations/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/densenet/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/imagenet_utils/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/inception_resnet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/inception_v3/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/mobilenet/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/mobilenet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/nasnet/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/resnet/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/resnet50/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/resnet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/vgg16/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/vgg19/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/applications/xception/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/backend/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/callbacks/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/constraints/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/datasets/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/datasets/boston_housing/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/datasets/cifar10/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/datasets/cifar100/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/datasets/fashion_mnist/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/datasets/imdb/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/datasets/mnist/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/datasets/reuters/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/estimator/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/initializers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/layers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/layers/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/losses/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/metrics/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/mixed_precision/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/mixed_precision/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/models/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/optimizers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/optimizers/schedules/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/premade/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/preprocessing/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/preprocessing/image/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/preprocessing/sequence/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/preprocessing/text/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/regularizers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/utils/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/wrappers/__init__.py": [],
    "tensorflow_core/python/keras/api/_v2/keras/wrappers/scikit_learn/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/activations/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/densenet/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/imagenet_utils/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/inception_resnet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/inception_v3/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/mobilenet/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/mobilenet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/nasnet/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/resnet/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/resnet50/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/resnet_v2/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/vgg16/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/vgg19/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/applications/xception/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/backend/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/callbacks/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/constraints/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/datasets/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/datasets/boston_housing/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/datasets/cifar10/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/datasets/cifar100/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/datasets/fashion_mnist/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/datasets/imdb/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/datasets/mnist/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/datasets/reuters/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/estimator/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/initializers/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/layers/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/layers/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/losses/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/metrics/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/mixed_precision/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/mixed_precision/experimental/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/models/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/optimizers/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/optimizers/schedules/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/premade/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/preprocessing/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/preprocessing/image/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/preprocessing/sequence/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/preprocessing/text/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/regularizers/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/utils/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/wrappers/__init__.py": [],
    "tensorflow_core/python/keras/api/keras/wrappers/scikit_learn/__init__.py": [],
    "tensorflow_core/python/keras/applications/__init__.py": [
      "tensorflow_core.python.keras.applications.__init__.keras_modules_injection"
    ],
    "tensorflow_core/python/keras/applications/densenet.py": [
      "tensorflow_core.python.keras.applications.densenet.DenseNet121",
      "tensorflow_core.python.keras.applications.densenet.DenseNet169",
      "tensorflow_core.python.keras.applications.densenet.DenseNet201",
      "tensorflow_core.python.keras.applications.densenet.decode_predictions",
      "tensorflow_core.python.keras.applications.densenet.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/imagenet_utils.py": [
      "tensorflow_core.python.keras.applications.imagenet_utils.decode_predictions",
      "tensorflow_core.python.keras.applications.imagenet_utils.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/inception_resnet_v2.py": [
      "tensorflow_core.python.keras.applications.inception_resnet_v2.InceptionResNetV2",
      "tensorflow_core.python.keras.applications.inception_resnet_v2.decode_predictions",
      "tensorflow_core.python.keras.applications.inception_resnet_v2.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/inception_v3.py": [
      "tensorflow_core.python.keras.applications.inception_v3.InceptionV3",
      "tensorflow_core.python.keras.applications.inception_v3.decode_predictions",
      "tensorflow_core.python.keras.applications.inception_v3.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/mobilenet.py": [
      "tensorflow_core.python.keras.applications.mobilenet.MobileNet",
      "tensorflow_core.python.keras.applications.mobilenet.decode_predictions",
      "tensorflow_core.python.keras.applications.mobilenet.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/mobilenet_v2.py": [
      "tensorflow_core.python.keras.applications.mobilenet_v2.MobileNetV2",
      "tensorflow_core.python.keras.applications.mobilenet_v2.decode_predictions",
      "tensorflow_core.python.keras.applications.mobilenet_v2.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/nasnet.py": [
      "tensorflow_core.python.keras.applications.nasnet.NASNetLarge",
      "tensorflow_core.python.keras.applications.nasnet.NASNetMobile",
      "tensorflow_core.python.keras.applications.nasnet.decode_predictions",
      "tensorflow_core.python.keras.applications.nasnet.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/resnet.py": [
      "tensorflow_core.python.keras.applications.resnet.ResNet101",
      "tensorflow_core.python.keras.applications.resnet.ResNet152",
      "tensorflow_core.python.keras.applications.resnet.ResNet50",
      "tensorflow_core.python.keras.applications.resnet.decode_predictions",
      "tensorflow_core.python.keras.applications.resnet.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/resnet_v2.py": [
      "tensorflow_core.python.keras.applications.resnet_v2.ResNet101V2",
      "tensorflow_core.python.keras.applications.resnet_v2.ResNet152V2",
      "tensorflow_core.python.keras.applications.resnet_v2.ResNet50V2",
      "tensorflow_core.python.keras.applications.resnet_v2.decode_predictions",
      "tensorflow_core.python.keras.applications.resnet_v2.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/vgg16.py": [
      "tensorflow_core.python.keras.applications.vgg16.VGG16",
      "tensorflow_core.python.keras.applications.vgg16.decode_predictions",
      "tensorflow_core.python.keras.applications.vgg16.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/vgg19.py": [
      "tensorflow_core.python.keras.applications.vgg19.VGG19",
      "tensorflow_core.python.keras.applications.vgg19.decode_predictions",
      "tensorflow_core.python.keras.applications.vgg19.preprocess_input"
    ],
    "tensorflow_core/python/keras/applications/xception.py": [
      "tensorflow_core.python.keras.applications.xception.Xception",
      "tensorflow_core.python.keras.applications.xception.decode_predictions",
      "tensorflow_core.python.keras.applications.xception.preprocess_input"
    ],
    "tensorflow_core/python/keras/backend.py": [
      "tensorflow_core.python.keras.backend.EagerExecutionFunction",
      "tensorflow_core.python.keras.backend.GraphExecutionFunction",
      "tensorflow_core.python.keras.backend.PER_GRAPH_OBJECT_NAME_UIDS",
      "tensorflow_core.python.keras.backend.abs",
      "tensorflow_core.python.keras.backend.all",
      "tensorflow_core.python.keras.backend.any",
      "tensorflow_core.python.keras.backend.arange",
      "tensorflow_core.python.keras.backend.argmax",
      "tensorflow_core.python.keras.backend.argmin",
      "tensorflow_core.python.keras.backend.backend",
      "tensorflow_core.python.keras.backend.batch_dot",
      "tensorflow_core.python.keras.backend.batch_flatten",
      "tensorflow_core.python.keras.backend.batch_get_value",
      "tensorflow_core.python.keras.backend.batch_normalization",
      "tensorflow_core.python.keras.backend.batch_set_value",
      "tensorflow_core.python.keras.backend.bias_add",
      "tensorflow_core.python.keras.backend.binary_crossentropy",
      "tensorflow_core.python.keras.backend.cast",
      "tensorflow_core.python.keras.backend.cast_to_floatx",
      "tensorflow_core.python.keras.backend.cast_variables_to_tensor",
      "tensorflow_core.python.keras.backend.categorical_crossentropy",
      "tensorflow_core.python.keras.backend.clear_session",
      "tensorflow_core.python.keras.backend.clip",
      "tensorflow_core.python.keras.backend.concatenate",
      "tensorflow_core.python.keras.backend.configure_and_create_distributed_session",
      "tensorflow_core.python.keras.backend.constant",
      "tensorflow_core.python.keras.backend.conv1d",
      "tensorflow_core.python.keras.backend.conv2d",
      "tensorflow_core.python.keras.backend.conv2d_transpose",
      "tensorflow_core.python.keras.backend.conv3d",
      "tensorflow_core.python.keras.backend.conv3d_transpose",
      "tensorflow_core.python.keras.backend.cos",
      "tensorflow_core.python.keras.backend.count_params",
      "tensorflow_core.python.keras.backend.ctc_batch_cost",
      "tensorflow_core.python.keras.backend.ctc_decode",
      "tensorflow_core.python.keras.backend.ctc_label_dense_to_sparse",
      "tensorflow_core.python.keras.backend.cumprod",
      "tensorflow_core.python.keras.backend.cumsum",
      "tensorflow_core.python.keras.backend.depthwise_conv2d",
      "tensorflow_core.python.keras.backend.dot",
      "tensorflow_core.python.keras.backend.dropout",
      "tensorflow_core.python.keras.backend.dtype",
      "tensorflow_core.python.keras.backend.eager_learning_phase_scope",
      "tensorflow_core.python.keras.backend.elu",
      "tensorflow_core.python.keras.backend.epsilon",
      "tensorflow_core.python.keras.backend.equal",
      "tensorflow_core.python.keras.backend.eval",
      "tensorflow_core.python.keras.backend.exp",
      "tensorflow_core.python.keras.backend.expand_dims",
      "tensorflow_core.python.keras.backend.eye",
      "tensorflow_core.python.keras.backend.flatten",
      "tensorflow_core.python.keras.backend.floatx",
      "tensorflow_core.python.keras.backend.foldl",
      "tensorflow_core.python.keras.backend.foldr",
      "tensorflow_core.python.keras.backend.freezable_variable",
      "tensorflow_core.python.keras.backend.function",
      "tensorflow_core.python.keras.backend.gather",
      "tensorflow_core.python.keras.backend.get_default_graph_uid_map",
      "tensorflow_core.python.keras.backend.get_default_session_config",
      "tensorflow_core.python.keras.backend.get_graph",
      "tensorflow_core.python.keras.backend.get_session",
      "tensorflow_core.python.keras.backend.get_uid",
      "tensorflow_core.python.keras.backend.get_value",
      "tensorflow_core.python.keras.backend.global_learning_phase_is_set",
      "tensorflow_core.python.keras.backend.gradients",
      "tensorflow_core.python.keras.backend.greater",
      "tensorflow_core.python.keras.backend.greater_equal",
      "tensorflow_core.python.keras.backend.hard_sigmoid",
      "tensorflow_core.python.keras.backend.identity",
      "tensorflow_core.python.keras.backend.image_data_format",
      "tensorflow_core.python.keras.backend.in_test_phase",
      "tensorflow_core.python.keras.backend.in_top_k",
      "tensorflow_core.python.keras.backend.in_train_phase",
      "tensorflow_core.python.keras.backend.int_shape",
      "tensorflow_core.python.keras.backend.is_keras_tensor",
      "tensorflow_core.python.keras.backend.is_placeholder",
      "tensorflow_core.python.keras.backend.is_sparse",
      "tensorflow_core.python.keras.backend.is_tpu_strategy",
      "tensorflow_core.python.keras.backend.l2_normalize",
      "tensorflow_core.python.keras.backend.learning_phase",
      "tensorflow_core.python.keras.backend.learning_phase_scope",
      "tensorflow_core.python.keras.backend.less",
      "tensorflow_core.python.keras.backend.less_equal",
      "tensorflow_core.python.keras.backend.local_conv",
      "tensorflow_core.python.keras.backend.local_conv1d",
      "tensorflow_core.python.keras.backend.local_conv2d",
      "tensorflow_core.python.keras.backend.log",
      "tensorflow_core.python.keras.backend.logsumexp",
      "tensorflow_core.python.keras.backend.manual_variable_initialization",
      "tensorflow_core.python.keras.backend.map_fn",
      "tensorflow_core.python.keras.backend.max",
      "tensorflow_core.python.keras.backend.maximum",
      "tensorflow_core.python.keras.backend.mean",
      "tensorflow_core.python.keras.backend.min",
      "tensorflow_core.python.keras.backend.minimum",
      "tensorflow_core.python.keras.backend.moving_average_update",
      "tensorflow_core.python.keras.backend.name_scope",
      "tensorflow_core.python.keras.backend.ndim",
      "tensorflow_core.python.keras.backend.normalize_batch_in_training",
      "tensorflow_core.python.keras.backend.not_equal",
      "tensorflow_core.python.keras.backend.one_hot",
      "tensorflow_core.python.keras.backend.ones",
      "tensorflow_core.python.keras.backend.ones_like",
      "tensorflow_core.python.keras.backend.permute_dimensions",
      "tensorflow_core.python.keras.backend.placeholder",
      "tensorflow_core.python.keras.backend.pool2d",
      "tensorflow_core.python.keras.backend.pool3d",
      "tensorflow_core.python.keras.backend.pow",
      "tensorflow_core.python.keras.backend.print_tensor",
      "tensorflow_core.python.keras.backend.prod",
      "tensorflow_core.python.keras.backend.py_all",
      "tensorflow_core.python.keras.backend.py_any",
      "tensorflow_core.python.keras.backend.py_sum",
      "tensorflow_core.python.keras.backend.random_binomial",
      "tensorflow_core.python.keras.backend.random_normal",
      "tensorflow_core.python.keras.backend.random_normal_variable",
      "tensorflow_core.python.keras.backend.random_uniform",
      "tensorflow_core.python.keras.backend.random_uniform_variable",
      "tensorflow_core.python.keras.backend.relu",
      "tensorflow_core.python.keras.backend.repeat",
      "tensorflow_core.python.keras.backend.repeat_elements",
      "tensorflow_core.python.keras.backend.reset_uids",
      "tensorflow_core.python.keras.backend.reshape",
      "tensorflow_core.python.keras.backend.resize_images",
      "tensorflow_core.python.keras.backend.resize_volumes",
      "tensorflow_core.python.keras.backend.reverse",
      "tensorflow_core.python.keras.backend.rnn",
      "tensorflow_core.python.keras.backend.round",
      "tensorflow_core.python.keras.backend.separable_conv1d",
      "tensorflow_core.python.keras.backend.separable_conv2d",
      "tensorflow_core.python.keras.backend.set_epsilon",
      "tensorflow_core.python.keras.backend.set_floatx",
      "tensorflow_core.python.keras.backend.set_image_data_format",
      "tensorflow_core.python.keras.backend.set_learning_phase",
      "tensorflow_core.python.keras.backend.set_session",
      "tensorflow_core.python.keras.backend.set_value",
      "tensorflow_core.python.keras.backend.shape",
      "tensorflow_core.python.keras.backend.sigmoid",
      "tensorflow_core.python.keras.backend.sign",
      "tensorflow_core.python.keras.backend.sin",
      "tensorflow_core.python.keras.backend.softmax",
      "tensorflow_core.python.keras.backend.softplus",
      "tensorflow_core.python.keras.backend.softsign",
      "tensorflow_core.python.keras.backend.sparse_categorical_crossentropy",
      "tensorflow_core.python.keras.backend.spatial_2d_padding",
      "tensorflow_core.python.keras.backend.spatial_3d_padding",
      "tensorflow_core.python.keras.backend.sqrt",
      "tensorflow_core.python.keras.backend.square",
      "tensorflow_core.python.keras.backend.squeeze",
      "tensorflow_core.python.keras.backend.stack",
      "tensorflow_core.python.keras.backend.std",
      "tensorflow_core.python.keras.backend.stop_gradient",
      "tensorflow_core.python.keras.backend.sum",
      "tensorflow_core.python.keras.backend.switch",
      "tensorflow_core.python.keras.backend.symbolic_learning_phase",
      "tensorflow_core.python.keras.backend.tanh",
      "tensorflow_core.python.keras.backend.temporal_padding",
      "tensorflow_core.python.keras.backend.tile",
      "tensorflow_core.python.keras.backend.to_dense",
      "tensorflow_core.python.keras.backend.track_tf_optimizer",
      "tensorflow_core.python.keras.backend.track_variable",
      "tensorflow_core.python.keras.backend.transpose",
      "tensorflow_core.python.keras.backend.truncated_normal",
      "tensorflow_core.python.keras.backend.unique_object_name",
      "tensorflow_core.python.keras.backend.update",
      "tensorflow_core.python.keras.backend.update_add",
      "tensorflow_core.python.keras.backend.update_sub",
      "tensorflow_core.python.keras.backend.var",
      "tensorflow_core.python.keras.backend.variable",
      "tensorflow_core.python.keras.backend.zeros",
      "tensorflow_core.python.keras.backend.zeros_like"
    ],
    "tensorflow_core/python/keras/backend_config.py": [
      "tensorflow_core.python.keras.backend_config.epsilon",
      "tensorflow_core.python.keras.backend_config.floatx",
      "tensorflow_core.python.keras.backend_config.image_data_format",
      "tensorflow_core.python.keras.backend_config.set_epsilon",
      "tensorflow_core.python.keras.backend_config.set_floatx",
      "tensorflow_core.python.keras.backend_config.set_image_data_format"
    ],
    "tensorflow_core/python/keras/callbacks.py": [
      "tensorflow_core.python.keras.callbacks.BaseLogger",
      "tensorflow_core.python.keras.callbacks.CSVLogger",
      "tensorflow_core.python.keras.callbacks.Callback",
      "tensorflow_core.python.keras.callbacks.CallbackList",
      "tensorflow_core.python.keras.callbacks.EarlyStopping",
      "tensorflow_core.python.keras.callbacks.History",
      "tensorflow_core.python.keras.callbacks.LambdaCallback",
      "tensorflow_core.python.keras.callbacks.LearningRateScheduler",
      "tensorflow_core.python.keras.callbacks.ModelCheckpoint",
      "tensorflow_core.python.keras.callbacks.ProgbarLogger",
      "tensorflow_core.python.keras.callbacks.ReduceLROnPlateau",
      "tensorflow_core.python.keras.callbacks.RemoteMonitor",
      "tensorflow_core.python.keras.callbacks.TensorBoard",
      "tensorflow_core.python.keras.callbacks.TerminateOnNaN",
      "tensorflow_core.python.keras.callbacks.configure_callbacks",
      "tensorflow_core.python.keras.callbacks.make_logs",
      "tensorflow_core.python.keras.callbacks.set_callback_parameters"
    ],
    "tensorflow_core/python/keras/callbacks_v1.py": [
      "tensorflow_core.python.keras.callbacks_v1.TensorBoard"
    ],
    "tensorflow_core/python/keras/constraints.py": [
      "tensorflow_core.python.keras.constraints.Constraint",
      "tensorflow_core.python.keras.constraints.MaxNorm",
      "tensorflow_core.python.keras.constraints.MinMaxNorm",
      "tensorflow_core.python.keras.constraints.NonNeg",
      "tensorflow_core.python.keras.constraints.RadialConstraint",
      "tensorflow_core.python.keras.constraints.UnitNorm",
      "tensorflow_core.python.keras.constraints.deserialize",
      "tensorflow_core.python.keras.constraints.get",
      "tensorflow_core.python.keras.constraints.max_norm",
      "tensorflow_core.python.keras.constraints.maxnorm",
      "tensorflow_core.python.keras.constraints.min_max_norm",
      "tensorflow_core.python.keras.constraints.non_neg",
      "tensorflow_core.python.keras.constraints.nonneg",
      "tensorflow_core.python.keras.constraints.radial_constraint",
      "tensorflow_core.python.keras.constraints.serialize",
      "tensorflow_core.python.keras.constraints.unit_norm",
      "tensorflow_core.python.keras.constraints.unitnorm"
    ],
    "tensorflow_core/python/keras/datasets/__init__.py": [],
    "tensorflow_core/python/keras/datasets/boston_housing.py": [
      "tensorflow_core.python.keras.datasets.boston_housing.load_data"
    ],
    "tensorflow_core/python/keras/datasets/cifar.py": [
      "tensorflow_core.python.keras.datasets.cifar.load_batch"
    ],
    "tensorflow_core/python/keras/datasets/cifar10.py": [
      "tensorflow_core.python.keras.datasets.cifar10.load_data"
    ],
    "tensorflow_core/python/keras/datasets/cifar100.py": [
      "tensorflow_core.python.keras.datasets.cifar100.load_data"
    ],
    "tensorflow_core/python/keras/datasets/fashion_mnist.py": [
      "tensorflow_core.python.keras.datasets.fashion_mnist.load_data"
    ],
    "tensorflow_core/python/keras/datasets/imdb.py": [
      "tensorflow_core.python.keras.datasets.imdb.get_word_index",
      "tensorflow_core.python.keras.datasets.imdb.load_data"
    ],
    "tensorflow_core/python/keras/datasets/mnist.py": [
      "tensorflow_core.python.keras.datasets.mnist.load_data"
    ],
    "tensorflow_core/python/keras/datasets/reuters.py": [
      "tensorflow_core.python.keras.datasets.reuters.get_word_index",
      "tensorflow_core.python.keras.datasets.reuters.load_data"
    ],
    "tensorflow_core/python/keras/distribute/__init__.py": [],
    "tensorflow_core/python/keras/distribute/distribute_strategy_test.py": [
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.TestDistributionStrategyWithDatasets",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.TestDistributionStrategyWithKerasModels",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.TestDistributionStrategyWithMultipleAddLossAndMetricCalls",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.TestDistributionStrategyWithNumpyArrays",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.TestRegularizerLoss",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.all_strategy_combinations",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.all_strategy_combinations_minus_default",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.all_strategy_combinations_plus_run_distributed",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.all_strategy_minus_default_and_tpu_combinations",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.batch_wrapper",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.convert_numpy_to_dataset_with_unknown_cardinality",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.get_dataset",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.get_model",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.get_multi_inputs_multi_outputs_data",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.get_predict_dataset",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.get_sample_weights_model",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.multi_input_output_model",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.simple_multi_inputs_multi_outputs_model",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.simple_sequential_model",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.simple_subclassed_model",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.strategies_minus_default_minus_tpu",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.strategies_minus_tpu",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.strategy_and_optimizer_combinations",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.strategy_minus_tpu_combinations",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.tpu_strategies",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.tpu_strategy_combinations",
      "tensorflow_core.python.keras.distribute.distribute_strategy_test.tpu_strategy_combinations_graph_only"
    ],
    "tensorflow_core/python/keras/distribute/distributed_training_utils.py": [
      "tensorflow_core.python.keras.distribute.distributed_training_utils.call_replica_local_fn",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.clone_model_on_replicas",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.concat_along_batch_dimension",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.distributed_scope",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.filter_distributed_callbacks",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.flatten_per_replica_values",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.get_batch_dimension",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.get_distributed_function",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.get_distributed_model",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.get_input_params",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.get_iterator",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.global_batch_size_supported",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.init_restore_or_wait_for_variables",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.initialize_iterator",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.is_current_worker_chief",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.is_dataset_shape_fully_defined",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.is_distributing_by_cloning",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.is_tpu_strategy",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.process_batch_and_step_size",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.set_distributed_function",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.set_distributed_model",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.set_weights",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.unwrap_output_dict",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.unwrap_outputs",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.unwrap_values",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.validate_all_tensor_shapes",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.validate_all_tensor_types",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.validate_callbacks",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.validate_distributed_dataset_inputs",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.validate_inputs",
      "tensorflow_core.python.keras.distribute.distributed_training_utils.validate_per_replica_inputs"
    ],
    "tensorflow_core/python/keras/distribute/keras_correctness_test_base.py": [
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.LearningRateBatchScheduler",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.MaybeDistributionScope",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.TestDistributionStrategyCorrectnessBase",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.TestDistributionStrategyEmbeddingModelCorrectnessBase",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.all_strategies",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.all_strategy_and_input_config_combinations",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.batch_wrapper",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.compare_results",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.eager_mode_test_configuration",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.fit_eval_and_predict",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.get_batch_size",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.get_correctness_test_inputs",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.get_data_size",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.get_shapes",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.graph_mode_test_configuration",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.should_skip_tpu_with_eager",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.strategies_for_embedding_models",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.strategy_minus_tpu_and_input_config_combinations_eager",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.test_combinations_for_embedding_model",
      "tensorflow_core.python.keras.distribute.keras_correctness_test_base.test_combinations_with_tpu_strategies"
    ],
    "tensorflow_core/python/keras/distribute/keras_dnn_correctness_test.py": [
      "tensorflow_core.python.keras.distribute.keras_dnn_correctness_test.SubclassedModel",
      "tensorflow_core.python.keras.distribute.keras_dnn_correctness_test.TestDistributionStrategyDnnCorrectness",
      "tensorflow_core.python.keras.distribute.keras_dnn_correctness_test.TestDistributionStrategyDnnCorrectnessWithSubclassedModel",
      "tensorflow_core.python.keras.distribute.keras_dnn_correctness_test.TestDistributionStrategyDnnMetricCorrectness",
      "tensorflow_core.python.keras.distribute.keras_dnn_correctness_test.TestDistributionStrategyDnnMetricEvalCorrectness",
      "tensorflow_core.python.keras.distribute.keras_dnn_correctness_test.all_strategy_combinations_with_eager_and_graph_modes",
      "tensorflow_core.python.keras.distribute.keras_dnn_correctness_test.all_strategy_combinations_with_graph_mode",
      "tensorflow_core.python.keras.distribute.keras_dnn_correctness_test.is_default_strategy"
    ],
    "tensorflow_core/python/keras/distribute/keras_embedding_model_correctness_test.py": [
      "tensorflow_core.python.keras.distribute.keras_embedding_model_correctness_test.DistributionStrategyEmbeddingModelCorrectnessTest",
      "tensorflow_core.python.keras.distribute.keras_embedding_model_correctness_test.DistributionStrategySiameseEmbeddingModelCorrectnessTest"
    ],
    "tensorflow_core/python/keras/distribute/keras_image_model_correctness_test.py": [
      "tensorflow_core.python.keras.distribute.keras_image_model_correctness_test.DistributionStrategyCnnCorrectnessTest"
    ],
    "tensorflow_core/python/keras/distribute/keras_lstm_model_correctness_test.py": [
      "tensorflow_core.python.keras.distribute.keras_lstm_model_correctness_test.DistributionStrategyLstmModelCorrectnessTest"
    ],
    "tensorflow_core/python/keras/distribute/keras_stateful_lstm_model_correctness_test.py": [
      "tensorflow_core.python.keras.distribute.keras_stateful_lstm_model_correctness_test.DistributionStrategyStatefulLstmModelCorrectnessTest",
      "tensorflow_core.python.keras.distribute.keras_stateful_lstm_model_correctness_test.strategies_for_stateful_embedding_model",
      "tensorflow_core.python.keras.distribute.keras_stateful_lstm_model_correctness_test.test_combinations_for_stateful_embedding_model"
    ],
    "tensorflow_core/python/keras/distribute/keras_utils_test.py": [
      "tensorflow_core.python.keras.distribute.keras_utils_test.Counter",
      "tensorflow_core.python.keras.distribute.keras_utils_test.TestDistributionStrategyErrorCases",
      "tensorflow_core.python.keras.distribute.keras_utils_test.TestDistributionStrategySaveLoadWeights",
      "tensorflow_core.python.keras.distribute.keras_utils_test.TestDistributionStrategyValidation",
      "tensorflow_core.python.keras.distribute.keras_utils_test.TestDistributionStrategyWithCallbacks",
      "tensorflow_core.python.keras.distribute.keras_utils_test.TestDistributionStrategyWithLossMasking",
      "tensorflow_core.python.keras.distribute.keras_utils_test.TestDistributionStrategyWithNormalizationLayer",
      "tensorflow_core.python.keras.distribute.keras_utils_test.TestDistributionStrategyWithStaticShapes"
    ],
    "tensorflow_core/python/keras/distribute/multi_worker_testing_utils.py": [
      "tensorflow_core.python.keras.distribute.multi_worker_testing_utils.get_mnist_model",
      "tensorflow_core.python.keras.distribute.multi_worker_testing_utils.mnist_synthetic_dataset"
    ],
    "tensorflow_core/python/keras/distribute/multi_worker_training_state.py": [
      "tensorflow_core.python.keras.distribute.multi_worker_training_state.CKPT_SAVED_EPOCH",
      "tensorflow_core.python.keras.distribute.multi_worker_training_state.CKPT_SAVED_EPOCH_UNUSED_VALUE",
      "tensorflow_core.python.keras.distribute.multi_worker_training_state.MultiWorkerTrainingState",
      "tensorflow_core.python.keras.distribute.multi_worker_training_state.checkpoint_exists",
      "tensorflow_core.python.keras.distribute.multi_worker_training_state.remove_checkpoint_if_exists"
    ],
    "tensorflow_core/python/keras/engine/__init__.py": [],
    "tensorflow_core/python/keras/engine/base_layer.py": [
      "tensorflow_core.python.keras.engine.base_layer.AddLoss",
      "tensorflow_core.python.keras.engine.base_layer.AddMetric",
      "tensorflow_core.python.keras.engine.base_layer.InputSpec",
      "tensorflow_core.python.keras.engine.base_layer.KerasHistory",
      "tensorflow_core.python.keras.engine.base_layer.Layer",
      "tensorflow_core.python.keras.engine.base_layer.TensorFlowOpLayer"
    ],
    "tensorflow_core/python/keras/engine/base_layer_utils.py": [
      "tensorflow_core.python.keras.engine.base_layer_utils.CallContext",
      "tensorflow_core.python.keras.engine.base_layer_utils.V2_DTYPE_BEHAVIOR",
      "tensorflow_core.python.keras.engine.base_layer_utils.autocast_context_manager",
      "tensorflow_core.python.keras.engine.base_layer_utils.call_context",
      "tensorflow_core.python.keras.engine.base_layer_utils.check_graph_consistency",
      "tensorflow_core.python.keras.engine.base_layer_utils.collect_previous_mask",
      "tensorflow_core.python.keras.engine.base_layer_utils.create_keras_history",
      "tensorflow_core.python.keras.engine.base_layer_utils.create_mean_metric",
      "tensorflow_core.python.keras.engine.base_layer_utils.default",
      "tensorflow_core.python.keras.engine.base_layer_utils.disable_v2_dtype_behavior",
      "tensorflow_core.python.keras.engine.base_layer_utils.enable_v2_dtype_behavior",
      "tensorflow_core.python.keras.engine.base_layer_utils.from_saved_model",
      "tensorflow_core.python.keras.engine.base_layer_utils.generate_placeholders_from_shape",
      "tensorflow_core.python.keras.engine.base_layer_utils.have_all_keras_metadata",
      "tensorflow_core.python.keras.engine.base_layer_utils.is_in_eager_or_tf_function",
      "tensorflow_core.python.keras.engine.base_layer_utils.is_in_keras_graph",
      "tensorflow_core.python.keras.engine.base_layer_utils.is_in_tf_function",
      "tensorflow_core.python.keras.engine.base_layer_utils.is_subclassed",
      "tensorflow_core.python.keras.engine.base_layer_utils.make_variable",
      "tensorflow_core.python.keras.engine.base_layer_utils.mark_as_return",
      "tensorflow_core.python.keras.engine.base_layer_utils.mark_checked",
      "tensorflow_core.python.keras.engine.base_layer_utils.needs_keras_history",
      "tensorflow_core.python.keras.engine.base_layer_utils.training_arg_passed_to_call",
      "tensorflow_core.python.keras.engine.base_layer_utils.uses_keras_history",
      "tensorflow_core.python.keras.engine.base_layer_utils.v2_dtype_behavior_enabled"
    ],
    "tensorflow_core/python/keras/engine/base_preprocessing_layer.py": [
      "tensorflow_core.python.keras.engine.base_preprocessing_layer.Combiner",
      "tensorflow_core.python.keras.engine.base_preprocessing_layer.CombinerPreprocessingLayer",
      "tensorflow_core.python.keras.engine.base_preprocessing_layer.PreprocessingLayer"
    ],
    "tensorflow_core/python/keras/engine/base_preprocessing_layer_v1.py": [
      "tensorflow_core.python.keras.engine.base_preprocessing_layer_v1.CombinerPreprocessingLayer"
    ],
    "tensorflow_core/python/keras/engine/data_adapter.py": [
      "tensorflow_core.python.keras.engine.data_adapter.ALL_ADAPTER_CLS",
      "tensorflow_core.python.keras.engine.data_adapter.CompositeTensorDataAdapter",
      "tensorflow_core.python.keras.engine.data_adapter.DataAdapter",
      "tensorflow_core.python.keras.engine.data_adapter.DatasetAdapter",
      "tensorflow_core.python.keras.engine.data_adapter.GeneratorDataAdapter",
      "tensorflow_core.python.keras.engine.data_adapter.KerasSequenceAdapter",
      "tensorflow_core.python.keras.engine.data_adapter.ListsOfScalarsDataAdapter",
      "tensorflow_core.python.keras.engine.data_adapter.TensorLikeDataAdapter",
      "tensorflow_core.python.keras.engine.data_adapter.is_none_or_empty",
      "tensorflow_core.python.keras.engine.data_adapter.select_data_adapter"
    ],
    "tensorflow_core/python/keras/engine/input_layer.py": [
      "tensorflow_core.python.keras.engine.input_layer.Input",
      "tensorflow_core.python.keras.engine.input_layer.InputLayer"
    ],
    "tensorflow_core/python/keras/engine/input_spec.py": [
      "tensorflow_core.python.keras.engine.input_spec.InputSpec",
      "tensorflow_core.python.keras.engine.input_spec.assert_input_compatibility",
      "tensorflow_core.python.keras.engine.input_spec.to_tensor_shape",
      "tensorflow_core.python.keras.engine.input_spec.to_tensor_spec"
    ],
    "tensorflow_core/python/keras/engine/network.py": [
      "tensorflow_core.python.keras.engine.network.Network"
    ],
    "tensorflow_core/python/keras/engine/node.py": [
      "tensorflow_core.python.keras.engine.node.Node"
    ],
    "tensorflow_core/python/keras/engine/partial_batch_padding_handler.py": [
      "tensorflow_core.python.keras.engine.partial_batch_padding_handler.PartialBatchPaddingHandler"
    ],
    "tensorflow_core/python/keras/engine/saving.py": [],
    "tensorflow_core/python/keras/engine/sequential.py": [
      "tensorflow_core.python.keras.engine.sequential.Sequential"
    ],
    "tensorflow_core/python/keras/engine/training.py": [
      "tensorflow_core.python.keras.engine.training.DistributedCallbackModel",
      "tensorflow_core.python.keras.engine.training.Model"
    ],
    "tensorflow_core/python/keras/engine/training_arrays.py": [
      "tensorflow_core.python.keras.engine.training_arrays.ArrayLikeTrainingLoop",
      "tensorflow_core.python.keras.engine.training_arrays.fit_loop",
      "tensorflow_core.python.keras.engine.training_arrays.model_iteration",
      "tensorflow_core.python.keras.engine.training_arrays.predict_loop",
      "tensorflow_core.python.keras.engine.training_arrays.test_loop"
    ],
    "tensorflow_core/python/keras/engine/training_distributed.py": [
      "tensorflow_core.python.keras.engine.training_distributed.DistributionMultiWorkerTrainingLoop",
      "tensorflow_core.python.keras.engine.training_distributed.DistributionSingleWorkerTrainingLoop",
      "tensorflow_core.python.keras.engine.training_distributed.experimental_tpu_fit_loop",
      "tensorflow_core.python.keras.engine.training_distributed.experimental_tpu_predict_loop",
      "tensorflow_core.python.keras.engine.training_distributed.experimental_tpu_test_loop",
      "tensorflow_core.python.keras.engine.training_distributed.train_with_multi_worker"
    ],
    "tensorflow_core/python/keras/engine/training_eager.py": [
      "tensorflow_core.python.keras.engine.training_eager.test_on_batch",
      "tensorflow_core.python.keras.engine.training_eager.train_on_batch"
    ],
    "tensorflow_core/python/keras/engine/training_generator.py": [
      "tensorflow_core.python.keras.engine.training_generator.EagerDatasetOrIteratorTrainingLoop",
      "tensorflow_core.python.keras.engine.training_generator.GeneratorLikeTrainingLoop",
      "tensorflow_core.python.keras.engine.training_generator.GeneratorOrSequenceTrainingLoop",
      "tensorflow_core.python.keras.engine.training_generator.convert_to_generator_like",
      "tensorflow_core.python.keras.engine.training_generator.evaluate_generator",
      "tensorflow_core.python.keras.engine.training_generator.fit_generator",
      "tensorflow_core.python.keras.engine.training_generator.model_iteration",
      "tensorflow_core.python.keras.engine.training_generator.predict_generator"
    ],
    "tensorflow_core/python/keras/engine/training_utils.py": [
      "tensorflow_core.python.keras.engine.training_utils.Aggregator",
      "tensorflow_core.python.keras.engine.training_utils.ConcatAggregator",
      "tensorflow_core.python.keras.engine.training_utils.MetricsAggregator",
      "tensorflow_core.python.keras.engine.training_utils.ModelInputs",
      "tensorflow_core.python.keras.engine.training_utils.OutputsAggregator",
      "tensorflow_core.python.keras.engine.training_utils.SliceAggregator",
      "tensorflow_core.python.keras.engine.training_utils.TrainingLoop",
      "tensorflow_core.python.keras.engine.training_utils.assert_not_batched",
      "tensorflow_core.python.keras.engine.training_utils.assert_not_shuffled",
      "tensorflow_core.python.keras.engine.training_utils.batch_shuffle",
      "tensorflow_core.python.keras.engine.training_utils.call_metric_function",
      "tensorflow_core.python.keras.engine.training_utils.cast_if_floating_dtype",
      "tensorflow_core.python.keras.engine.training_utils.cast_if_floating_dtype_and_mismatch",
      "tensorflow_core.python.keras.engine.training_utils.cast_single_tensor",
      "tensorflow_core.python.keras.engine.training_utils.cast_to_model_input_dtypes",
      "tensorflow_core.python.keras.engine.training_utils.check_array_lengths",
      "tensorflow_core.python.keras.engine.training_utils.check_generator_arguments",
      "tensorflow_core.python.keras.engine.training_utils.check_loss_and_target_compatibility",
      "tensorflow_core.python.keras.engine.training_utils.check_num_samples",
      "tensorflow_core.python.keras.engine.training_utils.check_steps_argument",
      "tensorflow_core.python.keras.engine.training_utils.collect_per_output_metric_info",
      "tensorflow_core.python.keras.engine.training_utils.convert_eager_tensors_to_numpy",
      "tensorflow_core.python.keras.engine.training_utils.extract_tensors_from_dataset",
      "tensorflow_core.python.keras.engine.training_utils.generic_output_names",
      "tensorflow_core.python.keras.engine.training_utils.get_copy_pool",
      "tensorflow_core.python.keras.engine.training_utils.get_input_shape_and_dtype",
      "tensorflow_core.python.keras.engine.training_utils.get_iterator",
      "tensorflow_core.python.keras.engine.training_utils.get_loss_function",
      "tensorflow_core.python.keras.engine.training_utils.get_metric_function",
      "tensorflow_core.python.keras.engine.training_utils.get_metric_name",
      "tensorflow_core.python.keras.engine.training_utils.get_progbar",
      "tensorflow_core.python.keras.engine.training_utils.get_static_batch_size",
      "tensorflow_core.python.keras.engine.training_utils.has_symbolic_tensors",
      "tensorflow_core.python.keras.engine.training_utils.has_tensors",
      "tensorflow_core.python.keras.engine.training_utils.infer_steps_for_dataset",
      "tensorflow_core.python.keras.engine.training_utils.initialize_iterator",
      "tensorflow_core.python.keras.engine.training_utils.is_dataset_or_iterator",
      "tensorflow_core.python.keras.engine.training_utils.is_eager_dataset_or_iterator",
      "tensorflow_core.python.keras.engine.training_utils.is_feature_layer",
      "tensorflow_core.python.keras.engine.training_utils.list_to_tuple",
      "tensorflow_core.python.keras.engine.training_utils.prepare_loss_functions",
      "tensorflow_core.python.keras.engine.training_utils.prepare_loss_weights",
      "tensorflow_core.python.keras.engine.training_utils.prepare_sample_weight_modes",
      "tensorflow_core.python.keras.engine.training_utils.should_run_validation",
      "tensorflow_core.python.keras.engine.training_utils.slice_arrays",
      "tensorflow_core.python.keras.engine.training_utils.split_training_and_validation_data",
      "tensorflow_core.python.keras.engine.training_utils.standardize_class_weights",
      "tensorflow_core.python.keras.engine.training_utils.standardize_input_data",
      "tensorflow_core.python.keras.engine.training_utils.standardize_sample_or_class_weights",
      "tensorflow_core.python.keras.engine.training_utils.standardize_sample_weights",
      "tensorflow_core.python.keras.engine.training_utils.standardize_single_array",
      "tensorflow_core.python.keras.engine.training_utils.standardize_weights",
      "tensorflow_core.python.keras.engine.training_utils.unpack_iterator_input",
      "tensorflow_core.python.keras.engine.training_utils.unpack_validation_data",
      "tensorflow_core.python.keras.engine.training_utils.validate_dataset_input",
      "tensorflow_core.python.keras.engine.training_utils.validate_input_types",
      "tensorflow_core.python.keras.engine.training_utils.verify_dataset_shuffled"
    ],
    "tensorflow_core/python/keras/engine/training_v2.py": [
      "tensorflow_core.python.keras.engine.training_v2.Loop",
      "tensorflow_core.python.keras.engine.training_v2.TrainingContext",
      "tensorflow_core.python.keras.engine.training_v2.run_one_epoch"
    ],
    "tensorflow_core/python/keras/engine/training_v2_utils.py": [
      "tensorflow_core.python.keras.engine.training_v2_utils.predict_on_batch",
      "tensorflow_core.python.keras.engine.training_v2_utils.test_on_batch",
      "tensorflow_core.python.keras.engine.training_v2_utils.train_on_batch"
    ],
    "tensorflow_core/python/keras/estimator/__init__.py": [
      "tensorflow_core.python.keras.estimator.__init__.model_to_estimator",
      "tensorflow_core.python.keras.estimator.__init__.model_to_estimator_v2"
    ],
    "tensorflow_core/python/keras/initializers.py": [
      "tensorflow_core.python.keras.initializers.RandomNormal",
      "tensorflow_core.python.keras.initializers.RandomUniform",
      "tensorflow_core.python.keras.initializers.TruncatedNormal",
      "tensorflow_core.python.keras.initializers.constant",
      "tensorflow_core.python.keras.initializers.deserialize",
      "tensorflow_core.python.keras.initializers.get",
      "tensorflow_core.python.keras.initializers.glorot_normal",
      "tensorflow_core.python.keras.initializers.glorot_uniform",
      "tensorflow_core.python.keras.initializers.identity",
      "tensorflow_core.python.keras.initializers.normal",
      "tensorflow_core.python.keras.initializers.one",
      "tensorflow_core.python.keras.initializers.ones",
      "tensorflow_core.python.keras.initializers.orthogonal",
      "tensorflow_core.python.keras.initializers.random_normal",
      "tensorflow_core.python.keras.initializers.random_uniform",
      "tensorflow_core.python.keras.initializers.serialize",
      "tensorflow_core.python.keras.initializers.truncated_normal",
      "tensorflow_core.python.keras.initializers.uniform",
      "tensorflow_core.python.keras.initializers.zero",
      "tensorflow_core.python.keras.initializers.zeros"
    ],
    "tensorflow_core/python/keras/keras_parameterized.py": [
      "tensorflow_core.python.keras.keras_parameterized.TestCase",
      "tensorflow_core.python.keras.keras_parameterized.run_all_keras_modes",
      "tensorflow_core.python.keras.keras_parameterized.run_with_all_model_types"
    ],
    "tensorflow_core/python/keras/layers/__init__.py": [],
    "tensorflow_core/python/keras/layers/advanced_activations.py": [
      "tensorflow_core.python.keras.layers.advanced_activations.ELU",
      "tensorflow_core.python.keras.layers.advanced_activations.LeakyReLU",
      "tensorflow_core.python.keras.layers.advanced_activations.PReLU",
      "tensorflow_core.python.keras.layers.advanced_activations.ReLU",
      "tensorflow_core.python.keras.layers.advanced_activations.Softmax",
      "tensorflow_core.python.keras.layers.advanced_activations.ThresholdedReLU"
    ],
    "tensorflow_core/python/keras/layers/convolutional.py": [
      "tensorflow_core.python.keras.layers.convolutional.Conv",
      "tensorflow_core.python.keras.layers.convolutional.Conv1D",
      "tensorflow_core.python.keras.layers.convolutional.Conv2D",
      "tensorflow_core.python.keras.layers.convolutional.Conv2DTranspose",
      "tensorflow_core.python.keras.layers.convolutional.Conv3D",
      "tensorflow_core.python.keras.layers.convolutional.Conv3DTranspose",
      "tensorflow_core.python.keras.layers.convolutional.Convolution1D",
      "tensorflow_core.python.keras.layers.convolutional.Convolution2D",
      "tensorflow_core.python.keras.layers.convolutional.Convolution2DTranspose",
      "tensorflow_core.python.keras.layers.convolutional.Convolution3D",
      "tensorflow_core.python.keras.layers.convolutional.Convolution3DTranspose",
      "tensorflow_core.python.keras.layers.convolutional.Cropping1D",
      "tensorflow_core.python.keras.layers.convolutional.Cropping2D",
      "tensorflow_core.python.keras.layers.convolutional.Cropping3D",
      "tensorflow_core.python.keras.layers.convolutional.Deconv2D",
      "tensorflow_core.python.keras.layers.convolutional.Deconv3D",
      "tensorflow_core.python.keras.layers.convolutional.Deconvolution2D",
      "tensorflow_core.python.keras.layers.convolutional.Deconvolution3D",
      "tensorflow_core.python.keras.layers.convolutional.DepthwiseConv2D",
      "tensorflow_core.python.keras.layers.convolutional.SeparableConv",
      "tensorflow_core.python.keras.layers.convolutional.SeparableConv1D",
      "tensorflow_core.python.keras.layers.convolutional.SeparableConv2D",
      "tensorflow_core.python.keras.layers.convolutional.SeparableConvolution1D",
      "tensorflow_core.python.keras.layers.convolutional.SeparableConvolution2D",
      "tensorflow_core.python.keras.layers.convolutional.UpSampling1D",
      "tensorflow_core.python.keras.layers.convolutional.UpSampling2D",
      "tensorflow_core.python.keras.layers.convolutional.UpSampling3D",
      "tensorflow_core.python.keras.layers.convolutional.ZeroPadding1D",
      "tensorflow_core.python.keras.layers.convolutional.ZeroPadding2D",
      "tensorflow_core.python.keras.layers.convolutional.ZeroPadding3D"
    ],
    "tensorflow_core/python/keras/layers/convolutional_recurrent.py": [
      "tensorflow_core.python.keras.layers.convolutional_recurrent.ConvLSTM2D",
      "tensorflow_core.python.keras.layers.convolutional_recurrent.ConvLSTM2DCell",
      "tensorflow_core.python.keras.layers.convolutional_recurrent.ConvRNN2D"
    ],
    "tensorflow_core/python/keras/layers/core.py": [
      "tensorflow_core.python.keras.layers.core.Activation",
      "tensorflow_core.python.keras.layers.core.ActivityRegularization",
      "tensorflow_core.python.keras.layers.core.Dense",
      "tensorflow_core.python.keras.layers.core.Dropout",
      "tensorflow_core.python.keras.layers.core.Flatten",
      "tensorflow_core.python.keras.layers.core.Lambda",
      "tensorflow_core.python.keras.layers.core.Masking",
      "tensorflow_core.python.keras.layers.core.Permute",
      "tensorflow_core.python.keras.layers.core.RepeatVector",
      "tensorflow_core.python.keras.layers.core.Reshape",
      "tensorflow_core.python.keras.layers.core.SpatialDropout1D",
      "tensorflow_core.python.keras.layers.core.SpatialDropout2D",
      "tensorflow_core.python.keras.layers.core.SpatialDropout3D"
    ],
    "tensorflow_core/python/keras/layers/cudnn_recurrent.py": [
      "tensorflow_core.python.keras.layers.cudnn_recurrent.CuDNNGRU",
      "tensorflow_core.python.keras.layers.cudnn_recurrent.CuDNNLSTM"
    ],
    "tensorflow_core/python/keras/layers/dense_attention.py": [
      "tensorflow_core.python.keras.layers.dense_attention.AdditiveAttention",
      "tensorflow_core.python.keras.layers.dense_attention.Attention",
      "tensorflow_core.python.keras.layers.dense_attention.BaseDenseAttention"
    ],
    "tensorflow_core/python/keras/layers/embeddings.py": [
      "tensorflow_core.python.keras.layers.embeddings.Embedding"
    ],
    "tensorflow_core/python/keras/layers/kernelized.py": [
      "tensorflow_core.python.keras.layers.kernelized.RandomFourierFeatures"
    ],
    "tensorflow_core/python/keras/layers/local.py": [
      "tensorflow_core.python.keras.layers.local.LocallyConnected1D",
      "tensorflow_core.python.keras.layers.local.LocallyConnected2D",
      "tensorflow_core.python.keras.layers.local.get_locallyconnected_mask",
      "tensorflow_core.python.keras.layers.local.local_conv_matmul",
      "tensorflow_core.python.keras.layers.local.local_conv_sparse_matmul",
      "tensorflow_core.python.keras.layers.local.make_2d"
    ],
    "tensorflow_core/python/keras/layers/merge.py": [
      "tensorflow_core.python.keras.layers.merge.Add",
      "tensorflow_core.python.keras.layers.merge.Average",
      "tensorflow_core.python.keras.layers.merge.Concatenate",
      "tensorflow_core.python.keras.layers.merge.Dot",
      "tensorflow_core.python.keras.layers.merge.Maximum",
      "tensorflow_core.python.keras.layers.merge.Minimum",
      "tensorflow_core.python.keras.layers.merge.Multiply",
      "tensorflow_core.python.keras.layers.merge.Subtract",
      "tensorflow_core.python.keras.layers.merge.add",
      "tensorflow_core.python.keras.layers.merge.average",
      "tensorflow_core.python.keras.layers.merge.concatenate",
      "tensorflow_core.python.keras.layers.merge.dot",
      "tensorflow_core.python.keras.layers.merge.maximum",
      "tensorflow_core.python.keras.layers.merge.minimum",
      "tensorflow_core.python.keras.layers.merge.multiply",
      "tensorflow_core.python.keras.layers.merge.subtract"
    ],
    "tensorflow_core/python/keras/layers/noise.py": [
      "tensorflow_core.python.keras.layers.noise.AlphaDropout",
      "tensorflow_core.python.keras.layers.noise.GaussianDropout",
      "tensorflow_core.python.keras.layers.noise.GaussianNoise"
    ],
    "tensorflow_core/python/keras/layers/normalization.py": [
      "tensorflow_core.python.keras.layers.normalization.BatchNormalization",
      "tensorflow_core.python.keras.layers.normalization.BatchNormalizationBase",
      "tensorflow_core.python.keras.layers.normalization.LayerNormalization",
      "tensorflow_core.python.keras.layers.normalization.replace_in_base_docstring"
    ],
    "tensorflow_core/python/keras/layers/normalization_v2.py": [
      "tensorflow_core.python.keras.layers.normalization_v2.BatchNormalization"
    ],
    "tensorflow_core/python/keras/layers/pooling.py": [
      "tensorflow_core.python.keras.layers.pooling.AveragePooling1D",
      "tensorflow_core.python.keras.layers.pooling.AveragePooling2D",
      "tensorflow_core.python.keras.layers.pooling.AveragePooling3D",
      "tensorflow_core.python.keras.layers.pooling.AvgPool1D",
      "tensorflow_core.python.keras.layers.pooling.AvgPool2D",
      "tensorflow_core.python.keras.layers.pooling.AvgPool3D",
      "tensorflow_core.python.keras.layers.pooling.GlobalAveragePooling1D",
      "tensorflow_core.python.keras.layers.pooling.GlobalAveragePooling2D",
      "tensorflow_core.python.keras.layers.pooling.GlobalAveragePooling3D",
      "tensorflow_core.python.keras.layers.pooling.GlobalAvgPool1D",
      "tensorflow_core.python.keras.layers.pooling.GlobalAvgPool2D",
      "tensorflow_core.python.keras.layers.pooling.GlobalAvgPool3D",
      "tensorflow_core.python.keras.layers.pooling.GlobalMaxPool1D",
      "tensorflow_core.python.keras.layers.pooling.GlobalMaxPool2D",
      "tensorflow_core.python.keras.layers.pooling.GlobalMaxPool3D",
      "tensorflow_core.python.keras.layers.pooling.GlobalMaxPooling1D",
      "tensorflow_core.python.keras.layers.pooling.GlobalMaxPooling2D",
      "tensorflow_core.python.keras.layers.pooling.GlobalMaxPooling3D",
      "tensorflow_core.python.keras.layers.pooling.GlobalPooling1D",
      "tensorflow_core.python.keras.layers.pooling.GlobalPooling2D",
      "tensorflow_core.python.keras.layers.pooling.GlobalPooling3D",
      "tensorflow_core.python.keras.layers.pooling.MaxPool1D",
      "tensorflow_core.python.keras.layers.pooling.MaxPool2D",
      "tensorflow_core.python.keras.layers.pooling.MaxPool3D",
      "tensorflow_core.python.keras.layers.pooling.MaxPooling1D",
      "tensorflow_core.python.keras.layers.pooling.MaxPooling2D",
      "tensorflow_core.python.keras.layers.pooling.MaxPooling3D",
      "tensorflow_core.python.keras.layers.pooling.Pooling1D",
      "tensorflow_core.python.keras.layers.pooling.Pooling2D",
      "tensorflow_core.python.keras.layers.pooling.Pooling3D"
    ],
    "tensorflow_core/python/keras/layers/preprocessing/__init__.py": [],
    "tensorflow_core/python/keras/layers/preprocessing/normalization.py": [
      "tensorflow_core.python.keras.layers.preprocessing.normalization.Normalization"
    ],
    "tensorflow_core/python/keras/layers/preprocessing/normalization_v1.py": [
      "tensorflow_core.python.keras.layers.preprocessing.normalization_v1.Normalization"
    ],
    "tensorflow_core/python/keras/layers/preprocessing/preprocessing_test_utils.py": [
      "tensorflow_core.python.keras.layers.preprocessing.preprocessing_test_utils.PreprocessingLayerTest"
    ],
    "tensorflow_core/python/keras/layers/recurrent.py": [
      "tensorflow_core.python.keras.layers.recurrent.AbstractRNNCell",
      "tensorflow_core.python.keras.layers.recurrent.DropoutRNNCellMixin",
      "tensorflow_core.python.keras.layers.recurrent.GRU",
      "tensorflow_core.python.keras.layers.recurrent.GRUCell",
      "tensorflow_core.python.keras.layers.recurrent.LSTM",
      "tensorflow_core.python.keras.layers.recurrent.LSTMCell",
      "tensorflow_core.python.keras.layers.recurrent.PeepholeLSTMCell",
      "tensorflow_core.python.keras.layers.recurrent.RNN",
      "tensorflow_core.python.keras.layers.recurrent.SimpleRNN",
      "tensorflow_core.python.keras.layers.recurrent.SimpleRNNCell",
      "tensorflow_core.python.keras.layers.recurrent.StackedRNNCells"
    ],
    "tensorflow_core/python/keras/layers/recurrent_v2.py": [
      "tensorflow_core.python.keras.layers.recurrent_v2.GRU",
      "tensorflow_core.python.keras.layers.recurrent_v2.GRUCell",
      "tensorflow_core.python.keras.layers.recurrent_v2.LSTM",
      "tensorflow_core.python.keras.layers.recurrent_v2.LSTMCell",
      "tensorflow_core.python.keras.layers.recurrent_v2.calculate_sequence_by_mask",
      "tensorflow_core.python.keras.layers.recurrent_v2.cudnn_gru",
      "tensorflow_core.python.keras.layers.recurrent_v2.cudnn_lstm",
      "tensorflow_core.python.keras.layers.recurrent_v2.gru_with_backend_selection",
      "tensorflow_core.python.keras.layers.recurrent_v2.is_sequence_right_padded",
      "tensorflow_core.python.keras.layers.recurrent_v2.lstm_with_backend_selection",
      "tensorflow_core.python.keras.layers.recurrent_v2.standard_gru",
      "tensorflow_core.python.keras.layers.recurrent_v2.standard_lstm"
    ],
    "tensorflow_core/python/keras/layers/rnn_cell_wrapper_v2.py": [
      "tensorflow_core.python.keras.layers.rnn_cell_wrapper_v2.DeviceWrapper",
      "tensorflow_core.python.keras.layers.rnn_cell_wrapper_v2.DropoutWrapper",
      "tensorflow_core.python.keras.layers.rnn_cell_wrapper_v2.ResidualWrapper"
    ],
    "tensorflow_core/python/keras/layers/serialization.py": [
      "tensorflow_core.python.keras.layers.serialization.deserialize",
      "tensorflow_core.python.keras.layers.serialization.serialize"
    ],
    "tensorflow_core/python/keras/layers/wrappers.py": [
      "tensorflow_core.python.keras.layers.wrappers.Bidirectional",
      "tensorflow_core.python.keras.layers.wrappers.TimeDistributed",
      "tensorflow_core.python.keras.layers.wrappers.Wrapper"
    ],
    "tensorflow_core/python/keras/losses.py": [
      "tensorflow_core.python.keras.losses.BinaryCrossentropy",
      "tensorflow_core.python.keras.losses.CategoricalCrossentropy",
      "tensorflow_core.python.keras.losses.CategoricalHinge",
      "tensorflow_core.python.keras.losses.CosineSimilarity",
      "tensorflow_core.python.keras.losses.Hinge",
      "tensorflow_core.python.keras.losses.Huber",
      "tensorflow_core.python.keras.losses.KLD",
      "tensorflow_core.python.keras.losses.KLDivergence",
      "tensorflow_core.python.keras.losses.LABEL_DTYPES_FOR_LOSSES",
      "tensorflow_core.python.keras.losses.LogCosh",
      "tensorflow_core.python.keras.losses.Loss",
      "tensorflow_core.python.keras.losses.LossFunctionWrapper",
      "tensorflow_core.python.keras.losses.MAE",
      "tensorflow_core.python.keras.losses.MAPE",
      "tensorflow_core.python.keras.losses.MSE",
      "tensorflow_core.python.keras.losses.MSLE",
      "tensorflow_core.python.keras.losses.MeanAbsoluteError",
      "tensorflow_core.python.keras.losses.MeanAbsolutePercentageError",
      "tensorflow_core.python.keras.losses.MeanSquaredError",
      "tensorflow_core.python.keras.losses.MeanSquaredLogarithmicError",
      "tensorflow_core.python.keras.losses.Poisson",
      "tensorflow_core.python.keras.losses.SparseCategoricalCrossentropy",
      "tensorflow_core.python.keras.losses.SquaredHinge",
      "tensorflow_core.python.keras.losses.binary_crossentropy",
      "tensorflow_core.python.keras.losses.categorical_crossentropy",
      "tensorflow_core.python.keras.losses.categorical_hinge",
      "tensorflow_core.python.keras.losses.cosine_proximity",
      "tensorflow_core.python.keras.losses.cosine_similarity",
      "tensorflow_core.python.keras.losses.deserialize",
      "tensorflow_core.python.keras.losses.get",
      "tensorflow_core.python.keras.losses.hinge",
      "tensorflow_core.python.keras.losses.huber_loss",
      "tensorflow_core.python.keras.losses.is_categorical_crossentropy",
      "tensorflow_core.python.keras.losses.kld",
      "tensorflow_core.python.keras.losses.kullback_leibler_divergence",
      "tensorflow_core.python.keras.losses.logcosh",
      "tensorflow_core.python.keras.losses.mae",
      "tensorflow_core.python.keras.losses.mape",
      "tensorflow_core.python.keras.losses.mean_absolute_error",
      "tensorflow_core.python.keras.losses.mean_absolute_percentage_error",
      "tensorflow_core.python.keras.losses.mean_squared_error",
      "tensorflow_core.python.keras.losses.mean_squared_logarithmic_error",
      "tensorflow_core.python.keras.losses.mse",
      "tensorflow_core.python.keras.losses.msle",
      "tensorflow_core.python.keras.losses.poisson",
      "tensorflow_core.python.keras.losses.serialize",
      "tensorflow_core.python.keras.losses.sparse_categorical_crossentropy",
      "tensorflow_core.python.keras.losses.squared_hinge"
    ],
    "tensorflow_core/python/keras/metrics.py": [
      "tensorflow_core.python.keras.metrics.AUC",
      "tensorflow_core.python.keras.metrics.Accuracy",
      "tensorflow_core.python.keras.metrics.BinaryAccuracy",
      "tensorflow_core.python.keras.metrics.BinaryCrossentropy",
      "tensorflow_core.python.keras.metrics.CategoricalAccuracy",
      "tensorflow_core.python.keras.metrics.CategoricalCrossentropy",
      "tensorflow_core.python.keras.metrics.CategoricalHinge",
      "tensorflow_core.python.keras.metrics.CosineSimilarity",
      "tensorflow_core.python.keras.metrics.FalseNegatives",
      "tensorflow_core.python.keras.metrics.FalsePositives",
      "tensorflow_core.python.keras.metrics.Hinge",
      "tensorflow_core.python.keras.metrics.KLDivergence",
      "tensorflow_core.python.keras.metrics.LogCoshError",
      "tensorflow_core.python.keras.metrics.MAE",
      "tensorflow_core.python.keras.metrics.MAPE",
      "tensorflow_core.python.keras.metrics.MSE",
      "tensorflow_core.python.keras.metrics.MSLE",
      "tensorflow_core.python.keras.metrics.Mean",
      "tensorflow_core.python.keras.metrics.MeanAbsoluteError",
      "tensorflow_core.python.keras.metrics.MeanAbsolutePercentageError",
      "tensorflow_core.python.keras.metrics.MeanIoU",
      "tensorflow_core.python.keras.metrics.MeanMetricWrapper",
      "tensorflow_core.python.keras.metrics.MeanRelativeError",
      "tensorflow_core.python.keras.metrics.MeanSquaredError",
      "tensorflow_core.python.keras.metrics.MeanSquaredLogarithmicError",
      "tensorflow_core.python.keras.metrics.MeanTensor",
      "tensorflow_core.python.keras.metrics.Metric",
      "tensorflow_core.python.keras.metrics.Poisson",
      "tensorflow_core.python.keras.metrics.Precision",
      "tensorflow_core.python.keras.metrics.Recall",
      "tensorflow_core.python.keras.metrics.Reduce",
      "tensorflow_core.python.keras.metrics.RootMeanSquaredError",
      "tensorflow_core.python.keras.metrics.SensitivityAtSpecificity",
      "tensorflow_core.python.keras.metrics.SensitivitySpecificityBase",
      "tensorflow_core.python.keras.metrics.SparseCategoricalAccuracy",
      "tensorflow_core.python.keras.metrics.SparseCategoricalCrossentropy",
      "tensorflow_core.python.keras.metrics.SparseTopKCategoricalAccuracy",
      "tensorflow_core.python.keras.metrics.SpecificityAtSensitivity",
      "tensorflow_core.python.keras.metrics.SquaredHinge",
      "tensorflow_core.python.keras.metrics.Sum",
      "tensorflow_core.python.keras.metrics.SumOverBatchSize",
      "tensorflow_core.python.keras.metrics.SumOverBatchSizeMetricWrapper",
      "tensorflow_core.python.keras.metrics.TopKCategoricalAccuracy",
      "tensorflow_core.python.keras.metrics.TrueNegatives",
      "tensorflow_core.python.keras.metrics.TruePositives",
      "tensorflow_core.python.keras.metrics.accuracy",
      "tensorflow_core.python.keras.metrics.binary_accuracy",
      "tensorflow_core.python.keras.metrics.categorical_accuracy",
      "tensorflow_core.python.keras.metrics.clone_metric",
      "tensorflow_core.python.keras.metrics.clone_metrics",
      "tensorflow_core.python.keras.metrics.cosine_proximity",
      "tensorflow_core.python.keras.metrics.deserialize",
      "tensorflow_core.python.keras.metrics.get",
      "tensorflow_core.python.keras.metrics.mae",
      "tensorflow_core.python.keras.metrics.mape",
      "tensorflow_core.python.keras.metrics.mse",
      "tensorflow_core.python.keras.metrics.msle",
      "tensorflow_core.python.keras.metrics.serialize",
      "tensorflow_core.python.keras.metrics.sparse_categorical_accuracy",
      "tensorflow_core.python.keras.metrics.sparse_top_k_categorical_accuracy",
      "tensorflow_core.python.keras.metrics.top_k_categorical_accuracy"
    ],
    "tensorflow_core/python/keras/mixed_precision/__init__.py": [],
    "tensorflow_core/python/keras/mixed_precision/experimental/__init__.py": [],
    "tensorflow_core/python/keras/mixed_precision/experimental/autocast_variable.py": [
      "tensorflow_core.python.keras.mixed_precision.experimental.autocast_variable.AutoCastDistributedVariable",
      "tensorflow_core.python.keras.mixed_precision.experimental.autocast_variable.AutoCastVariable"
    ],
    "tensorflow_core/python/keras/mixed_precision/experimental/loss_scale_optimizer.py": [
      "tensorflow_core.python.keras.mixed_precision.experimental.loss_scale_optimizer.LossScaleOptimizer"
    ],
    "tensorflow_core/python/keras/mixed_precision/experimental/policy.py": [
      "tensorflow_core.python.keras.mixed_precision.experimental.policy.Policy",
      "tensorflow_core.python.keras.mixed_precision.experimental.policy.USE_DEFAULT",
      "tensorflow_core.python.keras.mixed_precision.experimental.policy.global_policy",
      "tensorflow_core.python.keras.mixed_precision.experimental.policy.policy_defaults_to_floatx",
      "tensorflow_core.python.keras.mixed_precision.experimental.policy.policy_scope",
      "tensorflow_core.python.keras.mixed_precision.experimental.policy.set_policy",
      "tensorflow_core.python.keras.mixed_precision.experimental.policy.with_input_dtype"
    ],
    "tensorflow_core/python/keras/mixed_precision/experimental/test_util.py": [
      "tensorflow_core.python.keras.mixed_precision.experimental.test_util.create_identity_with_grad_check_fn",
      "tensorflow_core.python.keras.mixed_precision.experimental.test_util.create_identity_with_nan_gradients_fn"
    ],
    "tensorflow_core/python/keras/model_subclassing_test_util.py": [
      "tensorflow_core.python.keras.model_subclassing_test_util.CustomCallModel",
      "tensorflow_core.python.keras.model_subclassing_test_util.MultiIOTestModel",
      "tensorflow_core.python.keras.model_subclassing_test_util.NestedTestModel1",
      "tensorflow_core.python.keras.model_subclassing_test_util.NestedTestModel2",
      "tensorflow_core.python.keras.model_subclassing_test_util.SimpleConvTestModel",
      "tensorflow_core.python.keras.model_subclassing_test_util.SimpleTestModel",
      "tensorflow_core.python.keras.model_subclassing_test_util.TrainingMaskingModel",
      "tensorflow_core.python.keras.model_subclassing_test_util.TrainingNoDefaultModel",
      "tensorflow_core.python.keras.model_subclassing_test_util.get_nested_model_3"
    ],
    "tensorflow_core/python/keras/models.py": [
      "tensorflow_core.python.keras.models.Model",
      "tensorflow_core.python.keras.models.Sequential",
      "tensorflow_core.python.keras.models.clone_and_build_model",
      "tensorflow_core.python.keras.models.clone_model",
      "tensorflow_core.python.keras.models.in_place_subclassed_model_state_restoration",
      "tensorflow_core.python.keras.models.load_model",
      "tensorflow_core.python.keras.models.model_from_config",
      "tensorflow_core.python.keras.models.model_from_json",
      "tensorflow_core.python.keras.models.model_from_yaml",
      "tensorflow_core.python.keras.models.save_model",
      "tensorflow_core.python.keras.models.share_weights"
    ],
    "tensorflow_core/python/keras/ops.py": [],
    "tensorflow_core/python/keras/optimizer_v2/__init__.py": [],
    "tensorflow_core/python/keras/optimizer_v2/adadelta.py": [
      "tensorflow_core.python.keras.optimizer_v2.adadelta.Adadelta"
    ],
    "tensorflow_core/python/keras/optimizer_v2/adagrad.py": [
      "tensorflow_core.python.keras.optimizer_v2.adagrad.Adagrad"
    ],
    "tensorflow_core/python/keras/optimizer_v2/adam.py": [
      "tensorflow_core.python.keras.optimizer_v2.adam.Adam"
    ],
    "tensorflow_core/python/keras/optimizer_v2/adamax.py": [
      "tensorflow_core.python.keras.optimizer_v2.adamax.Adamax"
    ],
    "tensorflow_core/python/keras/optimizer_v2/ftrl.py": [
      "tensorflow_core.python.keras.optimizer_v2.ftrl.Ftrl"
    ],
    "tensorflow_core/python/keras/optimizer_v2/gradient_descent.py": [
      "tensorflow_core.python.keras.optimizer_v2.gradient_descent.SGD"
    ],
    "tensorflow_core/python/keras/optimizer_v2/learning_rate_schedule.py": [
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.CosineDecay",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.CosineDecayRestarts",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.ExponentialDecay",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.InverseTimeDecay",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.LearningRateSchedule",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.LinearCosineDecay",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.NoisyLinearCosineDecay",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.PiecewiseConstantDecay",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.PolynomialDecay",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.deserialize",
      "tensorflow_core.python.keras.optimizer_v2.learning_rate_schedule.serialize"
    ],
    "tensorflow_core/python/keras/optimizer_v2/nadam.py": [
      "tensorflow_core.python.keras.optimizer_v2.nadam.Nadam"
    ],
    "tensorflow_core/python/keras/optimizer_v2/optimizer_v2.py": [
      "tensorflow_core.python.keras.optimizer_v2.optimizer_v2.OptimizerV2",
      "tensorflow_core.python.keras.optimizer_v2.optimizer_v2.RestoredOptimizer"
    ],
    "tensorflow_core/python/keras/optimizer_v2/rmsprop.py": [
      "tensorflow_core.python.keras.optimizer_v2.rmsprop.RMSProp",
      "tensorflow_core.python.keras.optimizer_v2.rmsprop.RMSprop"
    ],
    "tensorflow_core/python/keras/optimizers.py": [
      "tensorflow_core.python.keras.optimizers.Adadelta",
      "tensorflow_core.python.keras.optimizers.Adagrad",
      "tensorflow_core.python.keras.optimizers.Adam",
      "tensorflow_core.python.keras.optimizers.Adamax",
      "tensorflow_core.python.keras.optimizers.Nadam",
      "tensorflow_core.python.keras.optimizers.Optimizer",
      "tensorflow_core.python.keras.optimizers.RMSprop",
      "tensorflow_core.python.keras.optimizers.SGD",
      "tensorflow_core.python.keras.optimizers.TFOptimizer",
      "tensorflow_core.python.keras.optimizers.adadelta",
      "tensorflow_core.python.keras.optimizers.adagrad",
      "tensorflow_core.python.keras.optimizers.adam",
      "tensorflow_core.python.keras.optimizers.adamax",
      "tensorflow_core.python.keras.optimizers.deserialize",
      "tensorflow_core.python.keras.optimizers.get",
      "tensorflow_core.python.keras.optimizers.nadam",
      "tensorflow_core.python.keras.optimizers.rmsprop",
      "tensorflow_core.python.keras.optimizers.serialize",
      "tensorflow_core.python.keras.optimizers.sgd"
    ],
    "tensorflow_core/python/keras/premade/__init__.py": [],
    "tensorflow_core/python/keras/premade/linear.py": [
      "tensorflow_core.python.keras.premade.linear.LinearModel"
    ],
    "tensorflow_core/python/keras/premade/wide_deep.py": [
      "tensorflow_core.python.keras.premade.wide_deep.WideDeepModel"
    ],
    "tensorflow_core/python/keras/preprocessing/__init__.py": [],
    "tensorflow_core/python/keras/preprocessing/image.py": [
      "tensorflow_core.python.keras.preprocessing.image.DirectoryIterator",
      "tensorflow_core.python.keras.preprocessing.image.ImageDataGenerator",
      "tensorflow_core.python.keras.preprocessing.image.Iterator",
      "tensorflow_core.python.keras.preprocessing.image.NumpyArrayIterator",
      "tensorflow_core.python.keras.preprocessing.image.apply_affine_transform",
      "tensorflow_core.python.keras.preprocessing.image.apply_brightness_shift",
      "tensorflow_core.python.keras.preprocessing.image.apply_channel_shift",
      "tensorflow_core.python.keras.preprocessing.image.array_to_img",
      "tensorflow_core.python.keras.preprocessing.image.img_to_array",
      "tensorflow_core.python.keras.preprocessing.image.load_img",
      "tensorflow_core.python.keras.preprocessing.image.random_brightness",
      "tensorflow_core.python.keras.preprocessing.image.random_channel_shift",
      "tensorflow_core.python.keras.preprocessing.image.random_rotation",
      "tensorflow_core.python.keras.preprocessing.image.random_shear",
      "tensorflow_core.python.keras.preprocessing.image.random_shift",
      "tensorflow_core.python.keras.preprocessing.image.random_zoom",
      "tensorflow_core.python.keras.preprocessing.image.save_img"
    ],
    "tensorflow_core/python/keras/preprocessing/sequence.py": [
      "tensorflow_core.python.keras.preprocessing.sequence.TimeseriesGenerator",
      "tensorflow_core.python.keras.preprocessing.sequence.make_sampling_table",
      "tensorflow_core.python.keras.preprocessing.sequence.pad_sequences",
      "tensorflow_core.python.keras.preprocessing.sequence.skipgrams"
    ],
    "tensorflow_core/python/keras/preprocessing/text.py": [
      "tensorflow_core.python.keras.preprocessing.text.Tokenizer",
      "tensorflow_core.python.keras.preprocessing.text.hashing_trick",
      "tensorflow_core.python.keras.preprocessing.text.one_hot",
      "tensorflow_core.python.keras.preprocessing.text.text_to_word_sequence"
    ],
    "tensorflow_core/python/keras/regularizers.py": [
      "tensorflow_core.python.keras.regularizers.L1L2",
      "tensorflow_core.python.keras.regularizers.Regularizer",
      "tensorflow_core.python.keras.regularizers.deserialize",
      "tensorflow_core.python.keras.regularizers.get",
      "tensorflow_core.python.keras.regularizers.l1",
      "tensorflow_core.python.keras.regularizers.l1_l2",
      "tensorflow_core.python.keras.regularizers.l2",
      "tensorflow_core.python.keras.regularizers.serialize"
    ],
    "tensorflow_core/python/keras/saving/__init__.py": [],
    "tensorflow_core/python/keras/saving/hdf5_format.py": [
      "tensorflow_core.python.keras.saving.hdf5_format.load_attributes_from_hdf5_group",
      "tensorflow_core.python.keras.saving.hdf5_format.load_model_from_hdf5",
      "tensorflow_core.python.keras.saving.hdf5_format.load_optimizer_weights_from_hdf5_group",
      "tensorflow_core.python.keras.saving.hdf5_format.load_weights_from_hdf5_group",
      "tensorflow_core.python.keras.saving.hdf5_format.load_weights_from_hdf5_group_by_name",
      "tensorflow_core.python.keras.saving.hdf5_format.preprocess_weights_for_loading",
      "tensorflow_core.python.keras.saving.hdf5_format.save_attributes_to_hdf5_group",
      "tensorflow_core.python.keras.saving.hdf5_format.save_model_to_hdf5",
      "tensorflow_core.python.keras.saving.hdf5_format.save_optimizer_weights_to_hdf5_group",
      "tensorflow_core.python.keras.saving.hdf5_format.save_weights_to_hdf5_group"
    ],
    "tensorflow_core/python/keras/saving/model_config.py": [
      "tensorflow_core.python.keras.saving.model_config.model_from_config",
      "tensorflow_core.python.keras.saving.model_config.model_from_json",
      "tensorflow_core.python.keras.saving.model_config.model_from_yaml"
    ],
    "tensorflow_core/python/keras/saving/save.py": [
      "tensorflow_core.python.keras.saving.save.load_model",
      "tensorflow_core.python.keras.saving.save.save_model"
    ],
    "tensorflow_core/python/keras/saving/saved_model/__init__.py": [],
    "tensorflow_core/python/keras/saving/saved_model/constants.py": [
      "tensorflow_core.python.keras.saving.saved_model.constants.KERAS_ATTR",
      "tensorflow_core.python.keras.saving.saved_model.constants.KERAS_CACHE_KEY"
    ],
    "tensorflow_core/python/keras/saving/saved_model/load.py": [
      "tensorflow_core.python.keras.saving.saved_model.load.KerasObjectLoader",
      "tensorflow_core.python.keras.saving.saved_model.load.PUBLIC_ATTRIBUTES",
      "tensorflow_core.python.keras.saving.saved_model.load.RevivedLayer",
      "tensorflow_core.python.keras.saving.saved_model.load.RevivedModel",
      "tensorflow_core.python.keras.saving.saved_model.load.RevivedNetwork",
      "tensorflow_core.python.keras.saving.saved_model.load.RevivedSequential",
      "tensorflow_core.python.keras.saving.saved_model.load.base_layer",
      "tensorflow_core.python.keras.saving.saved_model.load.infer_inputs_from_restored_call_function",
      "tensorflow_core.python.keras.saving.saved_model.load.load",
      "tensorflow_core.python.keras.saving.saved_model.load.models_lib",
      "tensorflow_core.python.keras.saving.saved_model.load.network_lib",
      "tensorflow_core.python.keras.saving.saved_model.load.recursively_deserialize_keras_object",
      "tensorflow_core.python.keras.saving.saved_model.load.training_lib"
    ],
    "tensorflow_core/python/keras/saving/saved_model/save.py": [
      "tensorflow_core.python.keras.saving.saved_model.save.LayerCall",
      "tensorflow_core.python.keras.saving.saved_model.save.LayerCallCollection",
      "tensorflow_core.python.keras.saving.saved_model.save.base_layer",
      "tensorflow_core.python.keras.saving.saved_model.save.layer_call_wrapper",
      "tensorflow_core.python.keras.saving.saved_model.save.layer_uses_training_bool",
      "tensorflow_core.python.keras.saving.saved_model.save.save",
      "tensorflow_core.python.keras.saving.saved_model.save.serialize_all_attributes",
      "tensorflow_core.python.keras.saving.saved_model.save.training_lib"
    ],
    "tensorflow_core/python/keras/saving/saved_model/serialized_attributes.py": [
      "tensorflow_core.python.keras.saving.saved_model.serialized_attributes.CommonEndpoints",
      "tensorflow_core.python.keras.saving.saved_model.serialized_attributes.LayerAttributes",
      "tensorflow_core.python.keras.saving.saved_model.serialized_attributes.ModelAttributes",
      "tensorflow_core.python.keras.saving.saved_model.serialized_attributes.SerializedAttributes",
      "tensorflow_core.python.keras.saving.saved_model.serialized_attributes.base_layer",
      "tensorflow_core.python.keras.saving.saved_model.serialized_attributes.training_lib"
    ],
    "tensorflow_core/python/keras/saving/saved_model/utils.py": [
      "tensorflow_core.python.keras.saving.saved_model.utils.get_training_arg",
      "tensorflow_core.python.keras.saving.saved_model.utils.get_training_arg_index",
      "tensorflow_core.python.keras.saving.saved_model.utils.maybe_add_training_arg",
      "tensorflow_core.python.keras.saving.saved_model.utils.remove_training_arg",
      "tensorflow_core.python.keras.saving.saved_model.utils.set_training_arg",
      "tensorflow_core.python.keras.saving.saved_model.utils.use_wrapped_call"
    ],
    "tensorflow_core/python/keras/saving/saved_model_experimental.py": [
      "tensorflow_core.python.keras.saving.saved_model_experimental.create_placeholder",
      "tensorflow_core.python.keras.saving.saved_model_experimental.export_saved_model",
      "tensorflow_core.python.keras.saving.saved_model_experimental.load_from_saved_model",
      "tensorflow_core.python.keras.saving.saved_model_experimental.metrics_lib",
      "tensorflow_core.python.keras.saving.saved_model_experimental.models_lib",
      "tensorflow_core.python.keras.saving.saved_model_experimental.sequential"
    ],
    "tensorflow_core/python/keras/saving/saving_utils.py": [
      "tensorflow_core.python.keras.saving.saving_utils.compile_args_from_training_config",
      "tensorflow_core.python.keras.saving.saving_utils.extract_model_metrics",
      "tensorflow_core.python.keras.saving.saving_utils.model_input_signature",
      "tensorflow_core.python.keras.saving.saving_utils.model_metadata",
      "tensorflow_core.python.keras.saving.saving_utils.raise_model_input_error",
      "tensorflow_core.python.keras.saving.saving_utils.should_overwrite",
      "tensorflow_core.python.keras.saving.saving_utils.trace_model_call"
    ],
    "tensorflow_core/python/keras/testing_utils.py": [
      "tensorflow_core.python.keras.testing_utils.disable_v2_dtype_behavior",
      "tensorflow_core.python.keras.testing_utils.enable_v2_dtype_behavior",
      "tensorflow_core.python.keras.testing_utils.experimental_run_tf_function_scope",
      "tensorflow_core.python.keras.testing_utils.get_expected_metric_variable_names",
      "tensorflow_core.python.keras.testing_utils.get_model_from_layers",
      "tensorflow_core.python.keras.testing_utils.get_model_type",
      "tensorflow_core.python.keras.testing_utils.get_multi_io_model",
      "tensorflow_core.python.keras.testing_utils.get_small_functional_mlp",
      "tensorflow_core.python.keras.testing_utils.get_small_mlp",
      "tensorflow_core.python.keras.testing_utils.get_small_sequential_mlp",
      "tensorflow_core.python.keras.testing_utils.get_small_subclass_mlp",
      "tensorflow_core.python.keras.testing_utils.get_small_subclass_mlp_with_custom_build",
      "tensorflow_core.python.keras.testing_utils.get_test_data",
      "tensorflow_core.python.keras.testing_utils.get_v2_optimizer",
      "tensorflow_core.python.keras.testing_utils.layer_test",
      "tensorflow_core.python.keras.testing_utils.model_type_scope",
      "tensorflow_core.python.keras.testing_utils.run_eagerly_scope",
      "tensorflow_core.python.keras.testing_utils.should_run_eagerly",
      "tensorflow_core.python.keras.testing_utils.should_run_tf_function"
    ],
    "tensorflow_core/python/keras/utils/__init__.py": [],
    "tensorflow_core/python/keras/utils/conv_utils.py": [
      "tensorflow_core.python.keras.utils.conv_utils.conv_connected_inputs",
      "tensorflow_core.python.keras.utils.conv_utils.conv_input_length",
      "tensorflow_core.python.keras.utils.conv_utils.conv_kernel_idxs",
      "tensorflow_core.python.keras.utils.conv_utils.conv_kernel_mask",
      "tensorflow_core.python.keras.utils.conv_utils.conv_output_length",
      "tensorflow_core.python.keras.utils.conv_utils.conv_output_shape",
      "tensorflow_core.python.keras.utils.conv_utils.convert_data_format",
      "tensorflow_core.python.keras.utils.conv_utils.convert_kernel",
      "tensorflow_core.python.keras.utils.conv_utils.deconv_output_length",
      "tensorflow_core.python.keras.utils.conv_utils.normalize_data_format",
      "tensorflow_core.python.keras.utils.conv_utils.normalize_padding",
      "tensorflow_core.python.keras.utils.conv_utils.normalize_tuple"
    ],
    "tensorflow_core/python/keras/utils/data_utils.py": [
      "tensorflow_core.python.keras.utils.data_utils.GeneratorEnqueuer",
      "tensorflow_core.python.keras.utils.data_utils.OrderedEnqueuer",
      "tensorflow_core.python.keras.utils.data_utils.Sequence",
      "tensorflow_core.python.keras.utils.data_utils.SequenceEnqueuer",
      "tensorflow_core.python.keras.utils.data_utils.get_file",
      "tensorflow_core.python.keras.utils.data_utils.get_index",
      "tensorflow_core.python.keras.utils.data_utils.get_worker_id_queue",
      "tensorflow_core.python.keras.utils.data_utils.init_pool",
      "tensorflow_core.python.keras.utils.data_utils.init_pool_generator",
      "tensorflow_core.python.keras.utils.data_utils.is_generator_or_sequence",
      "tensorflow_core.python.keras.utils.data_utils.iter_sequence_infinite",
      "tensorflow_core.python.keras.utils.data_utils.next_sample",
      "tensorflow_core.python.keras.utils.data_utils.terminate_keras_multiprocessing_pools",
      "tensorflow_core.python.keras.utils.data_utils.validate_file"
    ],
    "tensorflow_core/python/keras/utils/generic_utils.py": [
      "tensorflow_core.python.keras.utils.generic_utils.CustomObjectScope",
      "tensorflow_core.python.keras.utils.generic_utils.Progbar",
      "tensorflow_core.python.keras.utils.generic_utils.check_for_unexpected_keys",
      "tensorflow_core.python.keras.utils.generic_utils.class_and_config_for_serialized_keras_object",
      "tensorflow_core.python.keras.utils.generic_utils.custom_object_scope",
      "tensorflow_core.python.keras.utils.generic_utils.deserialize_keras_object",
      "tensorflow_core.python.keras.utils.generic_utils.func_dump",
      "tensorflow_core.python.keras.utils.generic_utils.func_load",
      "tensorflow_core.python.keras.utils.generic_utils.get_custom_objects",
      "tensorflow_core.python.keras.utils.generic_utils.has_arg",
      "tensorflow_core.python.keras.utils.generic_utils.is_all_none",
      "tensorflow_core.python.keras.utils.generic_utils.make_batches",
      "tensorflow_core.python.keras.utils.generic_utils.object_list_uid",
      "tensorflow_core.python.keras.utils.generic_utils.serialize_keras_class_and_config",
      "tensorflow_core.python.keras.utils.generic_utils.serialize_keras_object",
      "tensorflow_core.python.keras.utils.generic_utils.slice_arrays",
      "tensorflow_core.python.keras.utils.generic_utils.to_list",
      "tensorflow_core.python.keras.utils.generic_utils.to_snake_case",
      "tensorflow_core.python.keras.utils.generic_utils.validate_kwargs"
    ],
    "tensorflow_core/python/keras/utils/io_utils.py": [
      "tensorflow_core.python.keras.utils.io_utils.HDF5Matrix",
      "tensorflow_core.python.keras.utils.io_utils.ask_to_proceed_with_overwrite"
    ],
    "tensorflow_core/python/keras/utils/kernelized_utils.py": [
      "tensorflow_core.python.keras.utils.kernelized_utils.exact_gaussian_kernel",
      "tensorflow_core.python.keras.utils.kernelized_utils.exact_laplacian_kernel",
      "tensorflow_core.python.keras.utils.kernelized_utils.inner_product"
    ],
    "tensorflow_core/python/keras/utils/layer_utils.py": [
      "tensorflow_core.python.keras.utils.layer_utils.convert_all_kernels_in_model",
      "tensorflow_core.python.keras.utils.layer_utils.convert_dense_weights_data_format",
      "tensorflow_core.python.keras.utils.layer_utils.count_params",
      "tensorflow_core.python.keras.utils.layer_utils.gather_non_trainable_weights",
      "tensorflow_core.python.keras.utils.layer_utils.gather_trainable_weights",
      "tensorflow_core.python.keras.utils.layer_utils.get_source_inputs",
      "tensorflow_core.python.keras.utils.layer_utils.is_builtin_layer",
      "tensorflow_core.python.keras.utils.layer_utils.print_summary"
    ],
    "tensorflow_core/python/keras/utils/losses_utils.py": [
      "tensorflow_core.python.keras.utils.losses_utils.ReductionV2",
      "tensorflow_core.python.keras.utils.losses_utils.compute_weighted_loss",
      "tensorflow_core.python.keras.utils.losses_utils.reduce_weighted_loss",
      "tensorflow_core.python.keras.utils.losses_utils.scale_loss_for_distribution"
    ],
    "tensorflow_core/python/keras/utils/metrics_utils.py": [
      "tensorflow_core.python.keras.utils.metrics_utils.AUCCurve",
      "tensorflow_core.python.keras.utils.metrics_utils.AUCSummationMethod",
      "tensorflow_core.python.keras.utils.metrics_utils.ConfusionMatrix",
      "tensorflow_core.python.keras.utils.metrics_utils.NEG_INF",
      "tensorflow_core.python.keras.utils.metrics_utils.Reduction",
      "tensorflow_core.python.keras.utils.metrics_utils.assert_thresholds_range",
      "tensorflow_core.python.keras.utils.metrics_utils.parse_init_thresholds",
      "tensorflow_core.python.keras.utils.metrics_utils.ragged_assert_compatible_and_get_flat_values",
      "tensorflow_core.python.keras.utils.metrics_utils.result_wrapper",
      "tensorflow_core.python.keras.utils.metrics_utils.update_confusion_matrix_variables",
      "tensorflow_core.python.keras.utils.metrics_utils.update_state_wrapper",
      "tensorflow_core.python.keras.utils.metrics_utils.weakmethod"
    ],
    "tensorflow_core/python/keras/utils/mode_keys.py": [],
    "tensorflow_core/python/keras/utils/multi_gpu_utils.py": [
      "tensorflow_core.python.keras.utils.multi_gpu_utils.multi_gpu_model"
    ],
    "tensorflow_core/python/keras/utils/np_utils.py": [
      "tensorflow_core.python.keras.utils.np_utils.normalize",
      "tensorflow_core.python.keras.utils.np_utils.to_categorical"
    ],
    "tensorflow_core/python/keras/utils/tf_utils.py": [
      "tensorflow_core.python.keras.utils.tf_utils.ListWrapper",
      "tensorflow_core.python.keras.utils.tf_utils.are_all_symbolic_tensors",
      "tensorflow_core.python.keras.utils.tf_utils.assert_no_legacy_layers",
      "tensorflow_core.python.keras.utils.tf_utils.constant_value",
      "tensorflow_core.python.keras.utils.tf_utils.convert_inner_node_data",
      "tensorflow_core.python.keras.utils.tf_utils.convert_shapes",
      "tensorflow_core.python.keras.utils.tf_utils.get_reachable_from_inputs",
      "tensorflow_core.python.keras.utils.tf_utils.graph_context_for_symbolic_tensors",
      "tensorflow_core.python.keras.utils.tf_utils.is_symbolic_tensor",
      "tensorflow_core.python.keras.utils.tf_utils.is_tensor_or_tensor_list",
      "tensorflow_core.python.keras.utils.tf_utils.is_tensor_or_variable",
      "tensorflow_core.python.keras.utils.tf_utils.map_structure_with_atomic",
      "tensorflow_core.python.keras.utils.tf_utils.maybe_init_scope",
      "tensorflow_core.python.keras.utils.tf_utils.register_symbolic_tensor_type",
      "tensorflow_core.python.keras.utils.tf_utils.shape_type_conversion",
      "tensorflow_core.python.keras.utils.tf_utils.smart_cond"
    ],
    "tensorflow_core/python/keras/utils/vis_utils.py": [
      "tensorflow_core.python.keras.utils.vis_utils.add_edge",
      "tensorflow_core.python.keras.utils.vis_utils.check_pydot",
      "tensorflow_core.python.keras.utils.vis_utils.is_wrapped_model",
      "tensorflow_core.python.keras.utils.vis_utils.model_to_dot",
      "tensorflow_core.python.keras.utils.vis_utils.plot_model"
    ],
    "tensorflow_core/python/keras/wrappers/__init__.py": [],
    "tensorflow_core/python/keras/wrappers/scikit_learn.py": [
      "tensorflow_core.python.keras.wrappers.scikit_learn.BaseWrapper",
      "tensorflow_core.python.keras.wrappers.scikit_learn.KerasClassifier",
      "tensorflow_core.python.keras.wrappers.scikit_learn.KerasRegressor"
    ],
    "tensorflow_core/python/kernel_tests/__init__.py": [],
    "tensorflow_core/python/kernel_tests/random/__init__.py": [],
    "tensorflow_core/python/kernel_tests/random/util.py": [
      "tensorflow_core.python.kernel_tests.random.util.anderson_darling",
      "tensorflow_core.python.kernel_tests.random.util.chi_squared",
      "tensorflow_core.python.kernel_tests.random.util.normal_cdf",
      "tensorflow_core.python.kernel_tests.random.util.test_moment_matching",
      "tensorflow_core.python.kernel_tests.random.util.test_truncated_normal"
    ],
    "tensorflow_core/python/kernel_tests/signal/__init__.py": [],
    "tensorflow_core/python/kernel_tests/signal/test_util.py": [
      "tensorflow_core.python.kernel_tests.signal.test_util.grappler_optimize"
    ],
    "tensorflow_core/python/layers/__init__.py": [],
    "tensorflow_core/python/layers/base.py": [
      "tensorflow_core.python.layers.base.InputSpec",
      "tensorflow_core.python.layers.base.Layer",
      "tensorflow_core.python.layers.base.keras_style_scope",
      "tensorflow_core.python.layers.base.set_keras_style"
    ],
    "tensorflow_core/python/layers/convolutional.py": [
      "tensorflow_core.python.layers.convolutional.Conv1D",
      "tensorflow_core.python.layers.convolutional.Conv2D",
      "tensorflow_core.python.layers.convolutional.Conv2DTranspose",
      "tensorflow_core.python.layers.convolutional.Conv3D",
      "tensorflow_core.python.layers.convolutional.Conv3DTranspose",
      "tensorflow_core.python.layers.convolutional.Convolution1D",
      "tensorflow_core.python.layers.convolutional.Convolution2D",
      "tensorflow_core.python.layers.convolutional.Convolution2DTranspose",
      "tensorflow_core.python.layers.convolutional.Convolution3D",
      "tensorflow_core.python.layers.convolutional.Convolution3DTranspose",
      "tensorflow_core.python.layers.convolutional.Deconv2D",
      "tensorflow_core.python.layers.convolutional.Deconv3D",
      "tensorflow_core.python.layers.convolutional.Deconvolution2D",
      "tensorflow_core.python.layers.convolutional.Deconvolution3D",
      "tensorflow_core.python.layers.convolutional.SeparableConv1D",
      "tensorflow_core.python.layers.convolutional.SeparableConv2D",
      "tensorflow_core.python.layers.convolutional.SeparableConvolution2D",
      "tensorflow_core.python.layers.convolutional.conv1d",
      "tensorflow_core.python.layers.convolutional.conv2d",
      "tensorflow_core.python.layers.convolutional.conv2d_transpose",
      "tensorflow_core.python.layers.convolutional.conv3d",
      "tensorflow_core.python.layers.convolutional.conv3d_transpose",
      "tensorflow_core.python.layers.convolutional.convolution1d",
      "tensorflow_core.python.layers.convolutional.convolution2d",
      "tensorflow_core.python.layers.convolutional.convolution2d_transpose",
      "tensorflow_core.python.layers.convolutional.convolution3d",
      "tensorflow_core.python.layers.convolutional.convolution3d_transpose",
      "tensorflow_core.python.layers.convolutional.deconv2d",
      "tensorflow_core.python.layers.convolutional.deconv3d",
      "tensorflow_core.python.layers.convolutional.deconvolution2d",
      "tensorflow_core.python.layers.convolutional.deconvolution3d",
      "tensorflow_core.python.layers.convolutional.separable_conv1d",
      "tensorflow_core.python.layers.convolutional.separable_conv2d",
      "tensorflow_core.python.layers.convolutional.separable_convolution2d"
    ],
    "tensorflow_core/python/layers/core.py": [
      "tensorflow_core.python.layers.core.Dense",
      "tensorflow_core.python.layers.core.Dropout",
      "tensorflow_core.python.layers.core.Flatten",
      "tensorflow_core.python.layers.core.FullyConnected",
      "tensorflow_core.python.layers.core.dense",
      "tensorflow_core.python.layers.core.dropout",
      "tensorflow_core.python.layers.core.flatten",
      "tensorflow_core.python.layers.core.fully_connected"
    ],
    "tensorflow_core/python/layers/layers.py": [],
    "tensorflow_core/python/layers/normalization.py": [
      "tensorflow_core.python.layers.normalization.BatchNorm",
      "tensorflow_core.python.layers.normalization.BatchNormalization",
      "tensorflow_core.python.layers.normalization.batch_norm",
      "tensorflow_core.python.layers.normalization.batch_normalization"
    ],
    "tensorflow_core/python/layers/pooling.py": [
      "tensorflow_core.python.layers.pooling.AveragePooling1D",
      "tensorflow_core.python.layers.pooling.AveragePooling2D",
      "tensorflow_core.python.layers.pooling.AveragePooling3D",
      "tensorflow_core.python.layers.pooling.AvgPool2D",
      "tensorflow_core.python.layers.pooling.MaxPool2D",
      "tensorflow_core.python.layers.pooling.MaxPooling1D",
      "tensorflow_core.python.layers.pooling.MaxPooling2D",
      "tensorflow_core.python.layers.pooling.MaxPooling3D",
      "tensorflow_core.python.layers.pooling.average_pooling1d",
      "tensorflow_core.python.layers.pooling.average_pooling2d",
      "tensorflow_core.python.layers.pooling.average_pooling3d",
      "tensorflow_core.python.layers.pooling.avg_pool2d",
      "tensorflow_core.python.layers.pooling.max_pool2d",
      "tensorflow_core.python.layers.pooling.max_pooling1d",
      "tensorflow_core.python.layers.pooling.max_pooling2d",
      "tensorflow_core.python.layers.pooling.max_pooling3d"
    ],
    "tensorflow_core/python/layers/utils.py": [
      "tensorflow_core.python.layers.utils.constant_value",
      "tensorflow_core.python.layers.utils.conv_input_length",
      "tensorflow_core.python.layers.utils.conv_output_length",
      "tensorflow_core.python.layers.utils.convert_data_format",
      "tensorflow_core.python.layers.utils.deconv_output_length",
      "tensorflow_core.python.layers.utils.get_reachable_from_inputs",
      "tensorflow_core.python.layers.utils.normalize_data_format",
      "tensorflow_core.python.layers.utils.normalize_padding",
      "tensorflow_core.python.layers.utils.normalize_tuple",
      "tensorflow_core.python.layers.utils.object_list_uid",
      "tensorflow_core.python.layers.utils.smart_cond",
      "tensorflow_core.python.layers.utils.static_shape"
    ],
    "tensorflow_core/python/lib/__init__.py": [],
    "tensorflow_core/python/lib/io/__init__.py": [],
    "tensorflow_core/python/lib/io/file_io.py": [
      "tensorflow_core.python.lib.io.file_io.FileIO",
      "tensorflow_core.python.lib.io.file_io.atomic_write_string_to_file",
      "tensorflow_core.python.lib.io.file_io.copy",
      "tensorflow_core.python.lib.io.file_io.copy_v2",
      "tensorflow_core.python.lib.io.file_io.create_dir",
      "tensorflow_core.python.lib.io.file_io.create_dir_v2",
      "tensorflow_core.python.lib.io.file_io.delete_file",
      "tensorflow_core.python.lib.io.file_io.delete_file_v2",
      "tensorflow_core.python.lib.io.file_io.delete_recursively",
      "tensorflow_core.python.lib.io.file_io.delete_recursively_v2",
      "tensorflow_core.python.lib.io.file_io.file_crc32",
      "tensorflow_core.python.lib.io.file_io.file_exists",
      "tensorflow_core.python.lib.io.file_io.file_exists_v2",
      "tensorflow_core.python.lib.io.file_io.filecmp",
      "tensorflow_core.python.lib.io.file_io.get_matching_files",
      "tensorflow_core.python.lib.io.file_io.get_matching_files_v2",
      "tensorflow_core.python.lib.io.file_io.is_directory",
      "tensorflow_core.python.lib.io.file_io.is_directory_v2",
      "tensorflow_core.python.lib.io.file_io.list_directory",
      "tensorflow_core.python.lib.io.file_io.list_directory_v2",
      "tensorflow_core.python.lib.io.file_io.read_file_to_string",
      "tensorflow_core.python.lib.io.file_io.recursive_create_dir",
      "tensorflow_core.python.lib.io.file_io.recursive_create_dir_v2",
      "tensorflow_core.python.lib.io.file_io.rename",
      "tensorflow_core.python.lib.io.file_io.rename_v2",
      "tensorflow_core.python.lib.io.file_io.stat",
      "tensorflow_core.python.lib.io.file_io.stat_v2",
      "tensorflow_core.python.lib.io.file_io.walk",
      "tensorflow_core.python.lib.io.file_io.walk_v2",
      "tensorflow_core.python.lib.io.file_io.write_string_to_file"
    ],
    "tensorflow_core/python/lib/io/python_io.py": [],
    "tensorflow_core/python/lib/io/tf_record.py": [
      "tensorflow_core.python.lib.io.tf_record.TFRecordCompressionType",
      "tensorflow_core.python.lib.io.tf_record.TFRecordOptions",
      "tensorflow_core.python.lib.io.tf_record.TFRecordWriter",
      "tensorflow_core.python.lib.io.tf_record.tf_record_iterator"
    ],
    "tensorflow_core/python/module/__init__.py": [],
    "tensorflow_core/python/module/module.py": [
      "tensorflow_core.python.module.module.Module",
      "tensorflow_core.python.module.module.camel_to_snake",
      "tensorflow_core.python.module.module.valid_identifier"
    ],
    "tensorflow_core/python/ops/__init__.py": [],
    "tensorflow_core/python/ops/array_grad.py": [],
    "tensorflow_core/python/ops/array_ops.py": [
      "tensorflow_core.python.ops.array_ops.NEW_AXIS",
      "tensorflow_core.python.ops.array_ops.SHRINK_AXIS",
      "tensorflow_core.python.ops.array_ops.batch_gather",
      "tensorflow_core.python.ops.array_ops.batch_gather_nd",
      "tensorflow_core.python.ops.array_ops.batch_to_space",
      "tensorflow_core.python.ops.array_ops.batch_to_space_v2",
      "tensorflow_core.python.ops.array_ops.boolean_mask",
      "tensorflow_core.python.ops.array_ops.boolean_mask_v2",
      "tensorflow_core.python.ops.array_ops.broadcast_dynamic_shape",
      "tensorflow_core.python.ops.array_ops.broadcast_static_shape",
      "tensorflow_core.python.ops.array_ops.concat",
      "tensorflow_core.python.ops.array_ops.convert_to_int_tensor",
      "tensorflow_core.python.ops.array_ops.depth_to_space",
      "tensorflow_core.python.ops.array_ops.depth_to_space_v2",
      "tensorflow_core.python.ops.array_ops.edit_distance",
      "tensorflow_core.python.ops.array_ops.expand_dims",
      "tensorflow_core.python.ops.array_ops.expand_dims_v2",
      "tensorflow_core.python.ops.array_ops.extract_image_patches",
      "tensorflow_core.python.ops.array_ops.extract_image_patches_v2",
      "tensorflow_core.python.ops.array_ops.fill",
      "tensorflow_core.python.ops.array_ops.fingerprint",
      "tensorflow_core.python.ops.array_ops.gather",
      "tensorflow_core.python.ops.array_ops.gather_nd",
      "tensorflow_core.python.ops.array_ops.gather_nd_v2",
      "tensorflow_core.python.ops.array_ops.gather_v2",
      "tensorflow_core.python.ops.array_ops.get_positive_axis",
      "tensorflow_core.python.ops.array_ops.identity",
      "tensorflow_core.python.ops.array_ops.listdiff",
      "tensorflow_core.python.ops.array_ops.matrix_diag",
      "tensorflow_core.python.ops.array_ops.matrix_diag_part",
      "tensorflow_core.python.ops.array_ops.matrix_set_diag",
      "tensorflow_core.python.ops.array_ops.matrix_transpose",
      "tensorflow_core.python.ops.array_ops.meshgrid",
      "tensorflow_core.python.ops.array_ops.newaxis",
      "tensorflow_core.python.ops.array_ops.one_hot",
      "tensorflow_core.python.ops.array_ops.ones",
      "tensorflow_core.python.ops.array_ops.ones_like",
      "tensorflow_core.python.ops.array_ops.ones_like_impl",
      "tensorflow_core.python.ops.array_ops.ones_like_v2",
      "tensorflow_core.python.ops.array_ops.pad",
      "tensorflow_core.python.ops.array_ops.pad_v2",
      "tensorflow_core.python.ops.array_ops.parallel_stack",
      "tensorflow_core.python.ops.array_ops.placeholder",
      "tensorflow_core.python.ops.array_ops.placeholder_with_default",
      "tensorflow_core.python.ops.array_ops.quantize",
      "tensorflow_core.python.ops.array_ops.quantize_and_dequantize",
      "tensorflow_core.python.ops.array_ops.quantize_v2",
      "tensorflow_core.python.ops.array_ops.rank",
      "tensorflow_core.python.ops.array_ops.rank_internal",
      "tensorflow_core.python.ops.array_ops.repeat",
      "tensorflow_core.python.ops.array_ops.repeat_with_axis",
      "tensorflow_core.python.ops.array_ops.required_space_to_batch_paddings",
      "tensorflow_core.python.ops.array_ops.reshape",
      "tensorflow_core.python.ops.array_ops.reverse_sequence",
      "tensorflow_core.python.ops.array_ops.reverse_sequence_v2",
      "tensorflow_core.python.ops.array_ops.searchsorted",
      "tensorflow_core.python.ops.array_ops.sequence_mask",
      "tensorflow_core.python.ops.array_ops.setdiff1d",
      "tensorflow_core.python.ops.array_ops.shape",
      "tensorflow_core.python.ops.array_ops.shape_internal",
      "tensorflow_core.python.ops.array_ops.shape_n",
      "tensorflow_core.python.ops.array_ops.shape_v2",
      "tensorflow_core.python.ops.array_ops.size",
      "tensorflow_core.python.ops.array_ops.size_internal",
      "tensorflow_core.python.ops.array_ops.size_v2",
      "tensorflow_core.python.ops.array_ops.slice",
      "tensorflow_core.python.ops.array_ops.space_to_batch",
      "tensorflow_core.python.ops.array_ops.space_to_batch_v2",
      "tensorflow_core.python.ops.array_ops.space_to_depth",
      "tensorflow_core.python.ops.array_ops.space_to_depth_v2",
      "tensorflow_core.python.ops.array_ops.sparse_mask",
      "tensorflow_core.python.ops.array_ops.sparse_placeholder",
      "tensorflow_core.python.ops.array_ops.split",
      "tensorflow_core.python.ops.array_ops.squeeze",
      "tensorflow_core.python.ops.array_ops.squeeze_v2",
      "tensorflow_core.python.ops.array_ops.stack",
      "tensorflow_core.python.ops.array_ops.strided_slice",
      "tensorflow_core.python.ops.array_ops.tile_one_dimension",
      "tensorflow_core.python.ops.array_ops.transpose",
      "tensorflow_core.python.ops.array_ops.transpose_v2",
      "tensorflow_core.python.ops.array_ops.unique",
      "tensorflow_core.python.ops.array_ops.unique_with_counts",
      "tensorflow_core.python.ops.array_ops.unstack",
      "tensorflow_core.python.ops.array_ops.where",
      "tensorflow_core.python.ops.array_ops.where_v2",
      "tensorflow_core.python.ops.array_ops.zeros",
      "tensorflow_core.python.ops.array_ops.zeros_like",
      "tensorflow_core.python.ops.array_ops.zeros_like_impl",
      "tensorflow_core.python.ops.array_ops.zeros_like_v2"
    ],
    "tensorflow_core/python/ops/batch_ops.py": [
      "tensorflow_core.python.ops.batch_ops.batch_function"
    ],
    "tensorflow_core/python/ops/bitwise_ops.py": [],
    "tensorflow_core/python/ops/boosted_trees_ops.py": [
      "tensorflow_core.python.ops.boosted_trees_ops.PruningMode",
      "tensorflow_core.python.ops.boosted_trees_ops.QuantileAccumulator",
      "tensorflow_core.python.ops.boosted_trees_ops.QuantileAccumulatorSaveable",
      "tensorflow_core.python.ops.boosted_trees_ops.TreeEnsemble"
    ],
    "tensorflow_core/python/ops/candidate_sampling_ops.py": [
      "tensorflow_core.python.ops.candidate_sampling_ops.all_candidate_sampler",
      "tensorflow_core.python.ops.candidate_sampling_ops.compute_accidental_hits",
      "tensorflow_core.python.ops.candidate_sampling_ops.fixed_unigram_candidate_sampler",
      "tensorflow_core.python.ops.candidate_sampling_ops.learned_unigram_candidate_sampler",
      "tensorflow_core.python.ops.candidate_sampling_ops.log_uniform_candidate_sampler",
      "tensorflow_core.python.ops.candidate_sampling_ops.uniform_candidate_sampler"
    ],
    "tensorflow_core/python/ops/check_ops.py": [
      "tensorflow_core.python.ops.check_ops.NUMERIC_TYPES",
      "tensorflow_core.python.ops.check_ops.assert_equal",
      "tensorflow_core.python.ops.check_ops.assert_equal_v2",
      "tensorflow_core.python.ops.check_ops.assert_greater",
      "tensorflow_core.python.ops.check_ops.assert_greater_equal",
      "tensorflow_core.python.ops.check_ops.assert_greater_equal_v2",
      "tensorflow_core.python.ops.check_ops.assert_greater_v2",
      "tensorflow_core.python.ops.check_ops.assert_integer",
      "tensorflow_core.python.ops.check_ops.assert_integer_v2",
      "tensorflow_core.python.ops.check_ops.assert_less",
      "tensorflow_core.python.ops.check_ops.assert_less_equal",
      "tensorflow_core.python.ops.check_ops.assert_less_equal_v2",
      "tensorflow_core.python.ops.check_ops.assert_less_v2",
      "tensorflow_core.python.ops.check_ops.assert_near",
      "tensorflow_core.python.ops.check_ops.assert_near_v2",
      "tensorflow_core.python.ops.check_ops.assert_negative",
      "tensorflow_core.python.ops.check_ops.assert_negative_v2",
      "tensorflow_core.python.ops.check_ops.assert_non_negative",
      "tensorflow_core.python.ops.check_ops.assert_non_negative_v2",
      "tensorflow_core.python.ops.check_ops.assert_non_positive",
      "tensorflow_core.python.ops.check_ops.assert_non_positive_v2",
      "tensorflow_core.python.ops.check_ops.assert_none_equal",
      "tensorflow_core.python.ops.check_ops.assert_none_equal_v2",
      "tensorflow_core.python.ops.check_ops.assert_positive",
      "tensorflow_core.python.ops.check_ops.assert_positive_v2",
      "tensorflow_core.python.ops.check_ops.assert_proper_iterable",
      "tensorflow_core.python.ops.check_ops.assert_rank",
      "tensorflow_core.python.ops.check_ops.assert_rank_at_least",
      "tensorflow_core.python.ops.check_ops.assert_rank_at_least_v2",
      "tensorflow_core.python.ops.check_ops.assert_rank_in",
      "tensorflow_core.python.ops.check_ops.assert_rank_in_v2",
      "tensorflow_core.python.ops.check_ops.assert_rank_v2",
      "tensorflow_core.python.ops.check_ops.assert_same_float_dtype",
      "tensorflow_core.python.ops.check_ops.assert_scalar",
      "tensorflow_core.python.ops.check_ops.assert_scalar_v2",
      "tensorflow_core.python.ops.check_ops.assert_shapes",
      "tensorflow_core.python.ops.check_ops.assert_shapes_v2",
      "tensorflow_core.python.ops.check_ops.assert_type",
      "tensorflow_core.python.ops.check_ops.assert_type_v2",
      "tensorflow_core.python.ops.check_ops.ensure_shape",
      "tensorflow_core.python.ops.check_ops.is_non_decreasing",
      "tensorflow_core.python.ops.check_ops.is_numeric_tensor",
      "tensorflow_core.python.ops.check_ops.is_strictly_increasing"
    ],
    "tensorflow_core/python/ops/clip_ops.py": [
      "tensorflow_core.python.ops.clip_ops.clip_by_average_norm",
      "tensorflow_core.python.ops.clip_ops.clip_by_global_norm",
      "tensorflow_core.python.ops.clip_ops.clip_by_norm",
      "tensorflow_core.python.ops.clip_ops.clip_by_value",
      "tensorflow_core.python.ops.clip_ops.global_norm"
    ],
    "tensorflow_core/python/ops/clustering_ops.py": [
      "tensorflow_core.python.ops.clustering_ops.CLUSTERS_VAR_NAME",
      "tensorflow_core.python.ops.clustering_ops.COSINE_DISTANCE",
      "tensorflow_core.python.ops.clustering_ops.KMC2_INIT",
      "tensorflow_core.python.ops.clustering_ops.KMEANS_PLUS_PLUS_INIT",
      "tensorflow_core.python.ops.clustering_ops.KMeans",
      "tensorflow_core.python.ops.clustering_ops.RANDOM_INIT",
      "tensorflow_core.python.ops.clustering_ops.SQUARED_EUCLIDEAN_DISTANCE"
    ],
    "tensorflow_core/python/ops/collective_ops.py": [
      "tensorflow_core.python.ops.collective_ops.all_gather",
      "tensorflow_core.python.ops.collective_ops.all_reduce",
      "tensorflow_core.python.ops.collective_ops.broadcast_recv",
      "tensorflow_core.python.ops.collective_ops.broadcast_send"
    ],
    "tensorflow_core/python/ops/cond_v2.py": [
      "tensorflow_core.python.ops.cond_v2.cond_v2",
      "tensorflow_core.python.ops.cond_v2.get_func_graphs",
      "tensorflow_core.python.ops.cond_v2.indexed_case",
      "tensorflow_core.python.ops.cond_v2.verify_captures"
    ],
    "tensorflow_core/python/ops/confusion_matrix.py": [
      "tensorflow_core.python.ops.confusion_matrix.confusion_matrix",
      "tensorflow_core.python.ops.confusion_matrix.confusion_matrix_v1",
      "tensorflow_core.python.ops.confusion_matrix.remove_squeezable_dimensions"
    ],
    "tensorflow_core/python/ops/control_flow_grad.py": [],
    "tensorflow_core/python/ops/control_flow_ops.py": [
      "tensorflow_core.python.ops.control_flow_ops.Assert",
      "tensorflow_core.python.ops.control_flow_ops.CondContext",
      "tensorflow_core.python.ops.control_flow_ops.ControlFlowContext",
      "tensorflow_core.python.ops.control_flow_ops.WhileContext",
      "tensorflow_core.python.ops.control_flow_ops.XLAControlFlowContext",
      "tensorflow_core.python.ops.control_flow_ops.case",
      "tensorflow_core.python.ops.control_flow_ops.case_v2",
      "tensorflow_core.python.ops.control_flow_ops.cond",
      "tensorflow_core.python.ops.control_flow_ops.cond_for_tf_v2",
      "tensorflow_core.python.ops.control_flow_ops.cond_v2",
      "tensorflow_core.python.ops.control_flow_ops.exit",
      "tensorflow_core.python.ops.control_flow_ops.from_control_flow_context_def",
      "tensorflow_core.python.ops.control_flow_ops.group",
      "tensorflow_core.python.ops.control_flow_ops.merge",
      "tensorflow_core.python.ops.control_flow_ops.switch",
      "tensorflow_core.python.ops.control_flow_ops.switch_case",
      "tensorflow_core.python.ops.control_flow_ops.tuple",
      "tensorflow_core.python.ops.control_flow_ops.tuple_v2",
      "tensorflow_core.python.ops.control_flow_ops.while_loop",
      "tensorflow_core.python.ops.control_flow_ops.while_loop_v2",
      "tensorflow_core.python.ops.control_flow_ops.while_v2",
      "tensorflow_core.python.ops.control_flow_ops.with_dependencies"
    ],
    "tensorflow_core/python/ops/control_flow_state.py": [
      "tensorflow_core.python.ops.control_flow_state.MaybeCreateControlFlowState",
      "tensorflow_core.python.ops.control_flow_state.ZerosLikeOutsideLoop"
    ],
    "tensorflow_core/python/ops/control_flow_util.py": [
      "tensorflow_core.python.ops.control_flow_util.CheckInputFromValidContext",
      "tensorflow_core.python.ops.control_flow_util.ENABLE_CONTROL_FLOW_V2",
      "tensorflow_core.python.ops.control_flow_util.EnableControlFlowV2",
      "tensorflow_core.python.ops.control_flow_util.GetContainingCondContext",
      "tensorflow_core.python.ops.control_flow_util.GetContainingWhileContext",
      "tensorflow_core.python.ops.control_flow_util.GetContainingXLAContext",
      "tensorflow_core.python.ops.control_flow_util.GetLoopConstantEnter",
      "tensorflow_core.python.ops.control_flow_util.GetOutputContext",
      "tensorflow_core.python.ops.control_flow_util.GetWhileContext",
      "tensorflow_core.python.ops.control_flow_util.GraphOrParentsInXlaContext",
      "tensorflow_core.python.ops.control_flow_util.InXlaContext",
      "tensorflow_core.python.ops.control_flow_util.IsCondMerge",
      "tensorflow_core.python.ops.control_flow_util.IsCondSwitch",
      "tensorflow_core.python.ops.control_flow_util.IsContainingContext",
      "tensorflow_core.python.ops.control_flow_util.IsInCond",
      "tensorflow_core.python.ops.control_flow_util.IsInWhileLoop",
      "tensorflow_core.python.ops.control_flow_util.IsInXLAContext",
      "tensorflow_core.python.ops.control_flow_util.IsLoopConstantEnter",
      "tensorflow_core.python.ops.control_flow_util.IsLoopEnter",
      "tensorflow_core.python.ops.control_flow_util.IsLoopExit",
      "tensorflow_core.python.ops.control_flow_util.IsLoopMerge",
      "tensorflow_core.python.ops.control_flow_util.IsLoopSwitch",
      "tensorflow_core.python.ops.control_flow_util.IsMerge",
      "tensorflow_core.python.ops.control_flow_util.IsSwitch",
      "tensorflow_core.python.ops.control_flow_util.OpInContext",
      "tensorflow_core.python.ops.control_flow_util.TensorInContext",
      "tensorflow_core.python.ops.control_flow_util.enable_control_flow_v2"
    ],
    "tensorflow_core/python/ops/control_flow_util_v2.py": [
      "tensorflow_core.python.ops.control_flow_util_v2.CondBranchFuncGraph",
      "tensorflow_core.python.ops.control_flow_util_v2.WhileBodyFuncGraph",
      "tensorflow_core.python.ops.control_flow_util_v2.WhileCondFuncGraph",
      "tensorflow_core.python.ops.control_flow_util_v2.clear_control_inputs",
      "tensorflow_core.python.ops.control_flow_util_v2.create_new_tf_function",
      "tensorflow_core.python.ops.control_flow_util_v2.in_defun",
      "tensorflow_core.python.ops.control_flow_util_v2.maybe_propagate_compile_time_consts_in_xla",
      "tensorflow_core.python.ops.control_flow_util_v2.maybe_set_lowering_attr",
      "tensorflow_core.python.ops.control_flow_util_v2.output_all_intermediates",
      "tensorflow_core.python.ops.control_flow_util_v2.resource_input_index",
      "tensorflow_core.python.ops.control_flow_util_v2.unique_fn_name",
      "tensorflow_core.python.ops.control_flow_util_v2.unique_grad_fn_name"
    ],
    "tensorflow_core/python/ops/control_flow_v2_func_graphs.py": [
      "tensorflow_core.python.ops.control_flow_v2_func_graphs.CondBranchFuncGraph",
      "tensorflow_core.python.ops.control_flow_v2_func_graphs.WhileBodyFuncGraph",
      "tensorflow_core.python.ops.control_flow_v2_func_graphs.WhileCondFuncGraph"
    ],
    "tensorflow_core/python/ops/control_flow_v2_toggles.py": [
      "tensorflow_core.python.ops.control_flow_v2_toggles.control_flow_v2_enabled",
      "tensorflow_core.python.ops.control_flow_v2_toggles.disable_control_flow_v2",
      "tensorflow_core.python.ops.control_flow_v2_toggles.enable_control_flow_v2",
      "tensorflow_core.python.ops.control_flow_v2_toggles.output_all_intermediates"
    ],
    "tensorflow_core/python/ops/critical_section_ops.py": [
      "tensorflow_core.python.ops.critical_section_ops.CRITICAL_SECTIONS",
      "tensorflow_core.python.ops.critical_section_ops.CRITICAL_SECTION_EXECUTIONS",
      "tensorflow_core.python.ops.critical_section_ops.CriticalSection"
    ],
    "tensorflow_core/python/ops/ctc_ops.py": [
      "tensorflow_core.python.ops.ctc_ops.collapse_repeated",
      "tensorflow_core.python.ops.ctc_ops.ctc_beam_search_decoder",
      "tensorflow_core.python.ops.ctc_ops.ctc_beam_search_decoder_v2",
      "tensorflow_core.python.ops.ctc_ops.ctc_greedy_decoder",
      "tensorflow_core.python.ops.ctc_ops.ctc_loss",
      "tensorflow_core.python.ops.ctc_ops.ctc_loss_and_grad",
      "tensorflow_core.python.ops.ctc_ops.ctc_loss_dense",
      "tensorflow_core.python.ops.ctc_ops.ctc_loss_v2",
      "tensorflow_core.python.ops.ctc_ops.ctc_state_log_probs",
      "tensorflow_core.python.ops.ctc_ops.ctc_unique_labels",
      "tensorflow_core.python.ops.ctc_ops.dense_labels_to_sparse"
    ],
    "tensorflow_core/python/ops/cudnn_rnn_grad.py": [],
    "tensorflow_core/python/ops/custom_gradient.py": [
      "tensorflow_core.python.ops.custom_gradient.VAR_OP_TYPES",
      "tensorflow_core.python.ops.custom_gradient.copy_handle_data",
      "tensorflow_core.python.ops.custom_gradient.custom_gradient",
      "tensorflow_core.python.ops.custom_gradient.get_dependent_variables",
      "tensorflow_core.python.ops.custom_gradient.get_variable_by_name",
      "tensorflow_core.python.ops.custom_gradient.grad_pass_through",
      "tensorflow_core.python.ops.custom_gradient.recompute_grad"
    ],
    "tensorflow_core/python/ops/data_flow_grad.py": [],
    "tensorflow_core/python/ops/data_flow_ops.py": [
      "tensorflow_core.python.ops.data_flow_ops.Barrier",
      "tensorflow_core.python.ops.data_flow_ops.BaseStagingArea",
      "tensorflow_core.python.ops.data_flow_ops.ConditionalAccumulator",
      "tensorflow_core.python.ops.data_flow_ops.ConditionalAccumulatorBase",
      "tensorflow_core.python.ops.data_flow_ops.FIFOQueue",
      "tensorflow_core.python.ops.data_flow_ops.MapStagingArea",
      "tensorflow_core.python.ops.data_flow_ops.PaddingFIFOQueue",
      "tensorflow_core.python.ops.data_flow_ops.PriorityQueue",
      "tensorflow_core.python.ops.data_flow_ops.QueueBase",
      "tensorflow_core.python.ops.data_flow_ops.RandomShuffleQueue",
      "tensorflow_core.python.ops.data_flow_ops.RecordInput",
      "tensorflow_core.python.ops.data_flow_ops.SparseConditionalAccumulator",
      "tensorflow_core.python.ops.data_flow_ops.StagingArea"
    ],
    "tensorflow_core/python/ops/default_gradient.py": [
      "tensorflow_core.python.ops.default_gradient.get_zeros_dtype",
      "tensorflow_core.python.ops.default_gradient.shape_and_dtype",
      "tensorflow_core.python.ops.default_gradient.zeros_like"
    ],
    "tensorflow_core/python/ops/distributions/__init__.py": [],
    "tensorflow_core/python/ops/distributions/bernoulli.py": [
      "tensorflow_core.python.ops.distributions.bernoulli.Bernoulli"
    ],
    "tensorflow_core/python/ops/distributions/beta.py": [
      "tensorflow_core.python.ops.distributions.beta.Beta",
      "tensorflow_core.python.ops.distributions.beta.BetaWithSoftplusConcentration"
    ],
    "tensorflow_core/python/ops/distributions/bijector.py": [],
    "tensorflow_core/python/ops/distributions/bijector_impl.py": [
      "tensorflow_core.python.ops.distributions.bijector_impl.Bijector"
    ],
    "tensorflow_core/python/ops/distributions/bijector_test_util.py": [
      "tensorflow_core.python.ops.distributions.bijector_test_util.assert_bijective_and_finite",
      "tensorflow_core.python.ops.distributions.bijector_test_util.assert_finite",
      "tensorflow_core.python.ops.distributions.bijector_test_util.assert_scalar_congruency",
      "tensorflow_core.python.ops.distributions.bijector_test_util.assert_strictly_decreasing",
      "tensorflow_core.python.ops.distributions.bijector_test_util.assert_strictly_increasing",
      "tensorflow_core.python.ops.distributions.bijector_test_util.assert_strictly_monotonic"
    ],
    "tensorflow_core/python/ops/distributions/categorical.py": [
      "tensorflow_core.python.ops.distributions.categorical.Categorical"
    ],
    "tensorflow_core/python/ops/distributions/dirichlet.py": [
      "tensorflow_core.python.ops.distributions.dirichlet.Dirichlet"
    ],
    "tensorflow_core/python/ops/distributions/dirichlet_multinomial.py": [
      "tensorflow_core.python.ops.distributions.dirichlet_multinomial.DirichletMultinomial"
    ],
    "tensorflow_core/python/ops/distributions/distribution.py": [
      "tensorflow_core.python.ops.distributions.distribution.Distribution",
      "tensorflow_core.python.ops.distributions.distribution.FULLY_REPARAMETERIZED",
      "tensorflow_core.python.ops.distributions.distribution.NOT_REPARAMETERIZED",
      "tensorflow_core.python.ops.distributions.distribution.ReparameterizationType"
    ],
    "tensorflow_core/python/ops/distributions/distributions.py": [],
    "tensorflow_core/python/ops/distributions/exponential.py": [
      "tensorflow_core.python.ops.distributions.exponential.Exponential",
      "tensorflow_core.python.ops.distributions.exponential.ExponentialWithSoftplusRate"
    ],
    "tensorflow_core/python/ops/distributions/gamma.py": [
      "tensorflow_core.python.ops.distributions.gamma.Gamma",
      "tensorflow_core.python.ops.distributions.gamma.GammaWithSoftplusConcentrationRate"
    ],
    "tensorflow_core/python/ops/distributions/identity_bijector.py": [
      "tensorflow_core.python.ops.distributions.identity_bijector.Identity"
    ],
    "tensorflow_core/python/ops/distributions/kullback_leibler.py": [
      "tensorflow_core.python.ops.distributions.kullback_leibler.RegisterKL",
      "tensorflow_core.python.ops.distributions.kullback_leibler.cross_entropy",
      "tensorflow_core.python.ops.distributions.kullback_leibler.kl_divergence"
    ],
    "tensorflow_core/python/ops/distributions/laplace.py": [
      "tensorflow_core.python.ops.distributions.laplace.Laplace",
      "tensorflow_core.python.ops.distributions.laplace.LaplaceWithSoftplusScale"
    ],
    "tensorflow_core/python/ops/distributions/multinomial.py": [
      "tensorflow_core.python.ops.distributions.multinomial.Multinomial"
    ],
    "tensorflow_core/python/ops/distributions/normal.py": [
      "tensorflow_core.python.ops.distributions.normal.Normal",
      "tensorflow_core.python.ops.distributions.normal.NormalWithSoftplusScale"
    ],
    "tensorflow_core/python/ops/distributions/special_math.py": [
      "tensorflow_core.python.ops.distributions.special_math.LOGNDTR_FLOAT32_LOWER",
      "tensorflow_core.python.ops.distributions.special_math.LOGNDTR_FLOAT32_UPPER",
      "tensorflow_core.python.ops.distributions.special_math.LOGNDTR_FLOAT64_LOWER",
      "tensorflow_core.python.ops.distributions.special_math.LOGNDTR_FLOAT64_UPPER",
      "tensorflow_core.python.ops.distributions.special_math.erfinv",
      "tensorflow_core.python.ops.distributions.special_math.log_cdf_laplace",
      "tensorflow_core.python.ops.distributions.special_math.log_ndtr",
      "tensorflow_core.python.ops.distributions.special_math.ndtr",
      "tensorflow_core.python.ops.distributions.special_math.ndtri"
    ],
    "tensorflow_core/python/ops/distributions/student_t.py": [
      "tensorflow_core.python.ops.distributions.student_t.StudentT",
      "tensorflow_core.python.ops.distributions.student_t.StudentTWithAbsDfSoftplusScale"
    ],
    "tensorflow_core/python/ops/distributions/transformed_distribution.py": [
      "tensorflow_core.python.ops.distributions.transformed_distribution.TransformedDistribution"
    ],
    "tensorflow_core/python/ops/distributions/uniform.py": [
      "tensorflow_core.python.ops.distributions.uniform.Uniform"
    ],
    "tensorflow_core/python/ops/distributions/util.py": [
      "tensorflow_core.python.ops.distributions.util.AppendDocstring",
      "tensorflow_core.python.ops.distributions.util.assert_integer_form",
      "tensorflow_core.python.ops.distributions.util.assert_symmetric",
      "tensorflow_core.python.ops.distributions.util.dimension_size",
      "tensorflow_core.python.ops.distributions.util.embed_check_categorical_event_shape",
      "tensorflow_core.python.ops.distributions.util.embed_check_integer_casting_closed",
      "tensorflow_core.python.ops.distributions.util.embed_check_nonnegative_integer_form",
      "tensorflow_core.python.ops.distributions.util.fill_triangular",
      "tensorflow_core.python.ops.distributions.util.fill_triangular_inverse",
      "tensorflow_core.python.ops.distributions.util.gen_new_seed",
      "tensorflow_core.python.ops.distributions.util.get_logits_and_probs",
      "tensorflow_core.python.ops.distributions.util.log_combinations",
      "tensorflow_core.python.ops.distributions.util.matrix_diag_transform",
      "tensorflow_core.python.ops.distributions.util.maybe_get_static_value",
      "tensorflow_core.python.ops.distributions.util.pad",
      "tensorflow_core.python.ops.distributions.util.parent_frame_arguments",
      "tensorflow_core.python.ops.distributions.util.pick_vector",
      "tensorflow_core.python.ops.distributions.util.prefer_static_broadcast_shape",
      "tensorflow_core.python.ops.distributions.util.prefer_static_rank",
      "tensorflow_core.python.ops.distributions.util.prefer_static_shape",
      "tensorflow_core.python.ops.distributions.util.prefer_static_value",
      "tensorflow_core.python.ops.distributions.util.process_quadrature_grid_and_probs",
      "tensorflow_core.python.ops.distributions.util.reduce_weighted_logsumexp",
      "tensorflow_core.python.ops.distributions.util.rotate_transpose",
      "tensorflow_core.python.ops.distributions.util.same_dynamic_shape",
      "tensorflow_core.python.ops.distributions.util.softplus_inverse",
      "tensorflow_core.python.ops.distributions.util.tridiag"
    ],
    "tensorflow_core/python/ops/embedding_ops.py": [
      "tensorflow_core.python.ops.embedding_ops.embedding_lookup",
      "tensorflow_core.python.ops.embedding_ops.embedding_lookup_sparse",
      "tensorflow_core.python.ops.embedding_ops.embedding_lookup_sparse_v2",
      "tensorflow_core.python.ops.embedding_ops.embedding_lookup_v2",
      "tensorflow_core.python.ops.embedding_ops.safe_embedding_lookup_sparse",
      "tensorflow_core.python.ops.embedding_ops.safe_embedding_lookup_sparse_v2"
    ],
    "tensorflow_core/python/ops/functional_ops.py": [
      "tensorflow_core.python.ops.functional_ops.For",
      "tensorflow_core.python.ops.functional_ops.Gradient",
      "tensorflow_core.python.ops.functional_ops.If",
      "tensorflow_core.python.ops.functional_ops.While",
      "tensorflow_core.python.ops.functional_ops.foldl",
      "tensorflow_core.python.ops.functional_ops.foldr",
      "tensorflow_core.python.ops.functional_ops.partitioned_call",
      "tensorflow_core.python.ops.functional_ops.scan"
    ],
    "tensorflow_core/python/ops/gen_array_ops.py": [
      "tensorflow_core.python.ops.gen_array_ops.BatchMatrixBandPart",
      "tensorflow_core.python.ops.gen_array_ops.BatchMatrixDiag",
      "tensorflow_core.python.ops.gen_array_ops.BatchMatrixDiagPart",
      "tensorflow_core.python.ops.gen_array_ops.BatchMatrixSetDiag",
      "tensorflow_core.python.ops.gen_array_ops.BatchToSpace",
      "tensorflow_core.python.ops.gen_array_ops.BatchToSpaceND",
      "tensorflow_core.python.ops.gen_array_ops.Bitcast",
      "tensorflow_core.python.ops.gen_array_ops.BroadcastArgs",
      "tensorflow_core.python.ops.gen_array_ops.BroadcastGradientArgs",
      "tensorflow_core.python.ops.gen_array_ops.BroadcastTo",
      "tensorflow_core.python.ops.gen_array_ops.CheckNumerics",
      "tensorflow_core.python.ops.gen_array_ops.Concat",
      "tensorflow_core.python.ops.gen_array_ops.ConcatOffset",
      "tensorflow_core.python.ops.gen_array_ops.ConcatV2",
      "tensorflow_core.python.ops.gen_array_ops.ConjugateTranspose",
      "tensorflow_core.python.ops.gen_array_ops.Const",
      "tensorflow_core.python.ops.gen_array_ops.DebugGradientIdentity",
      "tensorflow_core.python.ops.gen_array_ops.DebugGradientRefIdentity",
      "tensorflow_core.python.ops.gen_array_ops.DeepCopy",
      "tensorflow_core.python.ops.gen_array_ops.DepthToSpace",
      "tensorflow_core.python.ops.gen_array_ops.Dequantize",
      "tensorflow_core.python.ops.gen_array_ops.Diag",
      "tensorflow_core.python.ops.gen_array_ops.DiagPart",
      "tensorflow_core.python.ops.gen_array_ops.EditDistance",
      "tensorflow_core.python.ops.gen_array_ops.Empty",
      "tensorflow_core.python.ops.gen_array_ops.EnsureShape",
      "tensorflow_core.python.ops.gen_array_ops.ExpandDims",
      "tensorflow_core.python.ops.gen_array_ops.ExtractImagePatches",
      "tensorflow_core.python.ops.gen_array_ops.ExtractVolumePatches",
      "tensorflow_core.python.ops.gen_array_ops.FakeQuantWithMinMaxArgs",
      "tensorflow_core.python.ops.gen_array_ops.FakeQuantWithMinMaxArgsGradient",
      "tensorflow_core.python.ops.gen_array_ops.FakeQuantWithMinMaxVars",
      "tensorflow_core.python.ops.gen_array_ops.FakeQuantWithMinMaxVarsGradient",
      "tensorflow_core.python.ops.gen_array_ops.FakeQuantWithMinMaxVarsPerChannel",
      "tensorflow_core.python.ops.gen_array_ops.FakeQuantWithMinMaxVarsPerChannelGradient",
      "tensorflow_core.python.ops.gen_array_ops.Fill",
      "tensorflow_core.python.ops.gen_array_ops.Fingerprint",
      "tensorflow_core.python.ops.gen_array_ops.Gather",
      "tensorflow_core.python.ops.gen_array_ops.GatherNd",
      "tensorflow_core.python.ops.gen_array_ops.GatherV2",
      "tensorflow_core.python.ops.gen_array_ops.GuaranteeConst",
      "tensorflow_core.python.ops.gen_array_ops.Identity",
      "tensorflow_core.python.ops.gen_array_ops.IdentityN",
      "tensorflow_core.python.ops.gen_array_ops.ImmutableConst",
      "tensorflow_core.python.ops.gen_array_ops.InplaceAdd",
      "tensorflow_core.python.ops.gen_array_ops.InplaceSub",
      "tensorflow_core.python.ops.gen_array_ops.InplaceUpdate",
      "tensorflow_core.python.ops.gen_array_ops.InvertPermutation",
      "tensorflow_core.python.ops.gen_array_ops.ListDiff",
      "tensorflow_core.python.ops.gen_array_ops.LowerBound",
      "tensorflow_core.python.ops.gen_array_ops.MatrixBandPart",
      "tensorflow_core.python.ops.gen_array_ops.MatrixDiag",
      "tensorflow_core.python.ops.gen_array_ops.MatrixDiagPart",
      "tensorflow_core.python.ops.gen_array_ops.MatrixDiagPartV2",
      "tensorflow_core.python.ops.gen_array_ops.MatrixDiagV2",
      "tensorflow_core.python.ops.gen_array_ops.MatrixSetDiag",
      "tensorflow_core.python.ops.gen_array_ops.MatrixSetDiagV2",
      "tensorflow_core.python.ops.gen_array_ops.MirrorPad",
      "tensorflow_core.python.ops.gen_array_ops.MirrorPadGrad",
      "tensorflow_core.python.ops.gen_array_ops.OneHot",
      "tensorflow_core.python.ops.gen_array_ops.OnesLike",
      "tensorflow_core.python.ops.gen_array_ops.Pack",
      "tensorflow_core.python.ops.gen_array_ops.Pad",
      "tensorflow_core.python.ops.gen_array_ops.PadV2",
      "tensorflow_core.python.ops.gen_array_ops.ParallelConcat",
      "tensorflow_core.python.ops.gen_array_ops.Placeholder",
      "tensorflow_core.python.ops.gen_array_ops.PlaceholderV2",
      "tensorflow_core.python.ops.gen_array_ops.PlaceholderWithDefault",
      "tensorflow_core.python.ops.gen_array_ops.PreventGradient",
      "tensorflow_core.python.ops.gen_array_ops.QuantizeAndDequantize",
      "tensorflow_core.python.ops.gen_array_ops.QuantizeAndDequantizeV2",
      "tensorflow_core.python.ops.gen_array_ops.QuantizeAndDequantizeV3",
      "tensorflow_core.python.ops.gen_array_ops.QuantizeV2",
      "tensorflow_core.python.ops.gen_array_ops.QuantizedConcat",
      "tensorflow_core.python.ops.gen_array_ops.QuantizedInstanceNorm",
      "tensorflow_core.python.ops.gen_array_ops.QuantizedReshape",
      "tensorflow_core.python.ops.gen_array_ops.Rank",
      "tensorflow_core.python.ops.gen_array_ops.RefIdentity",
      "tensorflow_core.python.ops.gen_array_ops.Reshape",
      "tensorflow_core.python.ops.gen_array_ops.ResourceStridedSliceAssign",
      "tensorflow_core.python.ops.gen_array_ops.Reverse",
      "tensorflow_core.python.ops.gen_array_ops.ReverseSequence",
      "tensorflow_core.python.ops.gen_array_ops.ReverseV2",
      "tensorflow_core.python.ops.gen_array_ops.ScatterNd",
      "tensorflow_core.python.ops.gen_array_ops.ScatterNdNonAliasingAdd",
      "tensorflow_core.python.ops.gen_array_ops.Shape",
      "tensorflow_core.python.ops.gen_array_ops.ShapeN",
      "tensorflow_core.python.ops.gen_array_ops.Size",
      "tensorflow_core.python.ops.gen_array_ops.Slice",
      "tensorflow_core.python.ops.gen_array_ops.Snapshot",
      "tensorflow_core.python.ops.gen_array_ops.SpaceToBatch",
      "tensorflow_core.python.ops.gen_array_ops.SpaceToBatchND",
      "tensorflow_core.python.ops.gen_array_ops.SpaceToDepth",
      "tensorflow_core.python.ops.gen_array_ops.Split",
      "tensorflow_core.python.ops.gen_array_ops.SplitV",
      "tensorflow_core.python.ops.gen_array_ops.Squeeze",
      "tensorflow_core.python.ops.gen_array_ops.StopGradient",
      "tensorflow_core.python.ops.gen_array_ops.StridedSlice",
      "tensorflow_core.python.ops.gen_array_ops.StridedSliceAssign",
      "tensorflow_core.python.ops.gen_array_ops.StridedSliceGrad",
      "tensorflow_core.python.ops.gen_array_ops.TensorScatterAdd",
      "tensorflow_core.python.ops.gen_array_ops.TensorScatterSub",
      "tensorflow_core.python.ops.gen_array_ops.TensorScatterUpdate",
      "tensorflow_core.python.ops.gen_array_ops.TensorStridedSliceUpdate",
      "tensorflow_core.python.ops.gen_array_ops.Tile",
      "tensorflow_core.python.ops.gen_array_ops.TileGrad",
      "tensorflow_core.python.ops.gen_array_ops.Transpose",
      "tensorflow_core.python.ops.gen_array_ops.Unique",
      "tensorflow_core.python.ops.gen_array_ops.UniqueV2",
      "tensorflow_core.python.ops.gen_array_ops.UniqueWithCounts",
      "tensorflow_core.python.ops.gen_array_ops.UniqueWithCountsV2",
      "tensorflow_core.python.ops.gen_array_ops.Unpack",
      "tensorflow_core.python.ops.gen_array_ops.UnravelIndex",
      "tensorflow_core.python.ops.gen_array_ops.UpperBound",
      "tensorflow_core.python.ops.gen_array_ops.Where",
      "tensorflow_core.python.ops.gen_array_ops.ZerosLike",
      "tensorflow_core.python.ops.gen_array_ops.batch_matrix_band_part",
      "tensorflow_core.python.ops.gen_array_ops.batch_matrix_band_part_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.batch_matrix_diag",
      "tensorflow_core.python.ops.gen_array_ops.batch_matrix_diag_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.batch_matrix_diag_part",
      "tensorflow_core.python.ops.gen_array_ops.batch_matrix_diag_part_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.batch_matrix_set_diag",
      "tensorflow_core.python.ops.gen_array_ops.batch_matrix_set_diag_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.batch_to_space",
      "tensorflow_core.python.ops.gen_array_ops.batch_to_space_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.batch_to_space_nd",
      "tensorflow_core.python.ops.gen_array_ops.batch_to_space_nd_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.bitcast",
      "tensorflow_core.python.ops.gen_array_ops.bitcast_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.broadcast_args",
      "tensorflow_core.python.ops.gen_array_ops.broadcast_args_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.broadcast_gradient_args",
      "tensorflow_core.python.ops.gen_array_ops.broadcast_gradient_args_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.broadcast_to",
      "tensorflow_core.python.ops.gen_array_ops.broadcast_to_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.check_numerics",
      "tensorflow_core.python.ops.gen_array_ops.check_numerics_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.concat",
      "tensorflow_core.python.ops.gen_array_ops.concat_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.concat_offset",
      "tensorflow_core.python.ops.gen_array_ops.concat_offset_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.concat_v2",
      "tensorflow_core.python.ops.gen_array_ops.concat_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.conjugate_transpose",
      "tensorflow_core.python.ops.gen_array_ops.conjugate_transpose_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.const",
      "tensorflow_core.python.ops.gen_array_ops.const_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.debug_gradient_identity",
      "tensorflow_core.python.ops.gen_array_ops.debug_gradient_identity_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.debug_gradient_ref_identity",
      "tensorflow_core.python.ops.gen_array_ops.debug_gradient_ref_identity_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.deep_copy",
      "tensorflow_core.python.ops.gen_array_ops.deep_copy_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.depth_to_space",
      "tensorflow_core.python.ops.gen_array_ops.depth_to_space_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.dequantize",
      "tensorflow_core.python.ops.gen_array_ops.dequantize_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.diag",
      "tensorflow_core.python.ops.gen_array_ops.diag_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.diag_part",
      "tensorflow_core.python.ops.gen_array_ops.diag_part_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.edit_distance",
      "tensorflow_core.python.ops.gen_array_ops.edit_distance_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.empty",
      "tensorflow_core.python.ops.gen_array_ops.empty_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.ensure_shape",
      "tensorflow_core.python.ops.gen_array_ops.ensure_shape_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.expand_dims",
      "tensorflow_core.python.ops.gen_array_ops.expand_dims_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.extract_image_patches",
      "tensorflow_core.python.ops.gen_array_ops.extract_image_patches_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.extract_volume_patches",
      "tensorflow_core.python.ops.gen_array_ops.extract_volume_patches_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_args",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_args_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_args_gradient",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_args_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_vars",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_vars_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_vars_gradient",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_vars_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_vars_per_channel",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_vars_per_channel_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_vars_per_channel_gradient",
      "tensorflow_core.python.ops.gen_array_ops.fake_quant_with_min_max_vars_per_channel_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.fill",
      "tensorflow_core.python.ops.gen_array_ops.fill_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.fingerprint",
      "tensorflow_core.python.ops.gen_array_ops.fingerprint_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.gather",
      "tensorflow_core.python.ops.gen_array_ops.gather_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.gather_nd",
      "tensorflow_core.python.ops.gen_array_ops.gather_nd_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.gather_v2",
      "tensorflow_core.python.ops.gen_array_ops.gather_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.guarantee_const",
      "tensorflow_core.python.ops.gen_array_ops.guarantee_const_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.identity",
      "tensorflow_core.python.ops.gen_array_ops.identity_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.identity_n",
      "tensorflow_core.python.ops.gen_array_ops.identity_n_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.immutable_const",
      "tensorflow_core.python.ops.gen_array_ops.immutable_const_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.inplace_add",
      "tensorflow_core.python.ops.gen_array_ops.inplace_add_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.inplace_sub",
      "tensorflow_core.python.ops.gen_array_ops.inplace_sub_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.inplace_update",
      "tensorflow_core.python.ops.gen_array_ops.inplace_update_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.invert_permutation",
      "tensorflow_core.python.ops.gen_array_ops.invert_permutation_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.list_diff",
      "tensorflow_core.python.ops.gen_array_ops.list_diff_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.lower_bound",
      "tensorflow_core.python.ops.gen_array_ops.lower_bound_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.matrix_band_part",
      "tensorflow_core.python.ops.gen_array_ops.matrix_band_part_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.matrix_diag",
      "tensorflow_core.python.ops.gen_array_ops.matrix_diag_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.matrix_diag_part",
      "tensorflow_core.python.ops.gen_array_ops.matrix_diag_part_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.matrix_diag_part_v2",
      "tensorflow_core.python.ops.gen_array_ops.matrix_diag_part_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.matrix_diag_v2",
      "tensorflow_core.python.ops.gen_array_ops.matrix_diag_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.matrix_set_diag",
      "tensorflow_core.python.ops.gen_array_ops.matrix_set_diag_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.matrix_set_diag_v2",
      "tensorflow_core.python.ops.gen_array_ops.matrix_set_diag_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.mirror_pad",
      "tensorflow_core.python.ops.gen_array_ops.mirror_pad_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.mirror_pad_grad",
      "tensorflow_core.python.ops.gen_array_ops.mirror_pad_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.one_hot",
      "tensorflow_core.python.ops.gen_array_ops.one_hot_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.ones_like",
      "tensorflow_core.python.ops.gen_array_ops.ones_like_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.pack",
      "tensorflow_core.python.ops.gen_array_ops.pack_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.pad",
      "tensorflow_core.python.ops.gen_array_ops.pad_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.pad_v2",
      "tensorflow_core.python.ops.gen_array_ops.pad_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.parallel_concat",
      "tensorflow_core.python.ops.gen_array_ops.parallel_concat_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.placeholder",
      "tensorflow_core.python.ops.gen_array_ops.placeholder_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.placeholder_v2",
      "tensorflow_core.python.ops.gen_array_ops.placeholder_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.placeholder_with_default",
      "tensorflow_core.python.ops.gen_array_ops.placeholder_with_default_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.prevent_gradient",
      "tensorflow_core.python.ops.gen_array_ops.prevent_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.quantize_and_dequantize",
      "tensorflow_core.python.ops.gen_array_ops.quantize_and_dequantize_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.quantize_and_dequantize_v2",
      "tensorflow_core.python.ops.gen_array_ops.quantize_and_dequantize_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.quantize_and_dequantize_v3",
      "tensorflow_core.python.ops.gen_array_ops.quantize_and_dequantize_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.quantize_v2",
      "tensorflow_core.python.ops.gen_array_ops.quantize_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.quantized_concat",
      "tensorflow_core.python.ops.gen_array_ops.quantized_concat_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.quantized_instance_norm",
      "tensorflow_core.python.ops.gen_array_ops.quantized_instance_norm_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.quantized_reshape",
      "tensorflow_core.python.ops.gen_array_ops.quantized_reshape_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.rank",
      "tensorflow_core.python.ops.gen_array_ops.rank_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.ref_identity",
      "tensorflow_core.python.ops.gen_array_ops.ref_identity_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.reshape",
      "tensorflow_core.python.ops.gen_array_ops.reshape_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.resource_strided_slice_assign",
      "tensorflow_core.python.ops.gen_array_ops.resource_strided_slice_assign_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.reverse",
      "tensorflow_core.python.ops.gen_array_ops.reverse_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.reverse_sequence",
      "tensorflow_core.python.ops.gen_array_ops.reverse_sequence_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.reverse_v2",
      "tensorflow_core.python.ops.gen_array_ops.reverse_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.scatter_nd",
      "tensorflow_core.python.ops.gen_array_ops.scatter_nd_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.scatter_nd_non_aliasing_add",
      "tensorflow_core.python.ops.gen_array_ops.scatter_nd_non_aliasing_add_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.shape",
      "tensorflow_core.python.ops.gen_array_ops.shape_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.shape_n",
      "tensorflow_core.python.ops.gen_array_ops.shape_n_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.size",
      "tensorflow_core.python.ops.gen_array_ops.size_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.snapshot",
      "tensorflow_core.python.ops.gen_array_ops.snapshot_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.space_to_batch",
      "tensorflow_core.python.ops.gen_array_ops.space_to_batch_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.space_to_batch_nd",
      "tensorflow_core.python.ops.gen_array_ops.space_to_batch_nd_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.space_to_depth",
      "tensorflow_core.python.ops.gen_array_ops.space_to_depth_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.split",
      "tensorflow_core.python.ops.gen_array_ops.split_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.split_v",
      "tensorflow_core.python.ops.gen_array_ops.split_v_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.squeeze",
      "tensorflow_core.python.ops.gen_array_ops.squeeze_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.stop_gradient",
      "tensorflow_core.python.ops.gen_array_ops.stop_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.strided_slice",
      "tensorflow_core.python.ops.gen_array_ops.strided_slice_assign",
      "tensorflow_core.python.ops.gen_array_ops.strided_slice_assign_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.strided_slice_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.strided_slice_grad",
      "tensorflow_core.python.ops.gen_array_ops.strided_slice_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.tensor_scatter_add",
      "tensorflow_core.python.ops.gen_array_ops.tensor_scatter_add_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.tensor_scatter_sub",
      "tensorflow_core.python.ops.gen_array_ops.tensor_scatter_sub_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.tensor_scatter_update",
      "tensorflow_core.python.ops.gen_array_ops.tensor_scatter_update_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.tensor_strided_slice_update",
      "tensorflow_core.python.ops.gen_array_ops.tensor_strided_slice_update_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.tile",
      "tensorflow_core.python.ops.gen_array_ops.tile_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.tile_grad",
      "tensorflow_core.python.ops.gen_array_ops.tile_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.transpose",
      "tensorflow_core.python.ops.gen_array_ops.transpose_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.unique",
      "tensorflow_core.python.ops.gen_array_ops.unique_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.unique_v2",
      "tensorflow_core.python.ops.gen_array_ops.unique_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.unique_with_counts",
      "tensorflow_core.python.ops.gen_array_ops.unique_with_counts_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.unique_with_counts_v2",
      "tensorflow_core.python.ops.gen_array_ops.unique_with_counts_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.unpack",
      "tensorflow_core.python.ops.gen_array_ops.unpack_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.unravel_index",
      "tensorflow_core.python.ops.gen_array_ops.unravel_index_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.upper_bound",
      "tensorflow_core.python.ops.gen_array_ops.upper_bound_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.where",
      "tensorflow_core.python.ops.gen_array_ops.where_eager_fallback",
      "tensorflow_core.python.ops.gen_array_ops.zeros_like",
      "tensorflow_core.python.ops.gen_array_ops.zeros_like_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_audio_ops.py": [
      "tensorflow_core.python.ops.gen_audio_ops.AudioSpectrogram",
      "tensorflow_core.python.ops.gen_audio_ops.DecodeWav",
      "tensorflow_core.python.ops.gen_audio_ops.EncodeWav",
      "tensorflow_core.python.ops.gen_audio_ops.Mfcc",
      "tensorflow_core.python.ops.gen_audio_ops.audio_spectrogram",
      "tensorflow_core.python.ops.gen_audio_ops.audio_spectrogram_eager_fallback",
      "tensorflow_core.python.ops.gen_audio_ops.decode_wav",
      "tensorflow_core.python.ops.gen_audio_ops.decode_wav_eager_fallback",
      "tensorflow_core.python.ops.gen_audio_ops.encode_wav",
      "tensorflow_core.python.ops.gen_audio_ops.encode_wav_eager_fallback",
      "tensorflow_core.python.ops.gen_audio_ops.mfcc",
      "tensorflow_core.python.ops.gen_audio_ops.mfcc_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_batch_ops.py": [
      "tensorflow_core.python.ops.gen_batch_ops.Batch",
      "tensorflow_core.python.ops.gen_batch_ops.BatchFunction",
      "tensorflow_core.python.ops.gen_batch_ops.Unbatch",
      "tensorflow_core.python.ops.gen_batch_ops.UnbatchGrad",
      "tensorflow_core.python.ops.gen_batch_ops.batch",
      "tensorflow_core.python.ops.gen_batch_ops.batch_eager_fallback",
      "tensorflow_core.python.ops.gen_batch_ops.batch_function",
      "tensorflow_core.python.ops.gen_batch_ops.batch_function_eager_fallback",
      "tensorflow_core.python.ops.gen_batch_ops.unbatch",
      "tensorflow_core.python.ops.gen_batch_ops.unbatch_eager_fallback",
      "tensorflow_core.python.ops.gen_batch_ops.unbatch_grad",
      "tensorflow_core.python.ops.gen_batch_ops.unbatch_grad_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_bitwise_ops.py": [
      "tensorflow_core.python.ops.gen_bitwise_ops.BitwiseAnd",
      "tensorflow_core.python.ops.gen_bitwise_ops.BitwiseOr",
      "tensorflow_core.python.ops.gen_bitwise_ops.BitwiseXor",
      "tensorflow_core.python.ops.gen_bitwise_ops.Invert",
      "tensorflow_core.python.ops.gen_bitwise_ops.LeftShift",
      "tensorflow_core.python.ops.gen_bitwise_ops.PopulationCount",
      "tensorflow_core.python.ops.gen_bitwise_ops.RightShift",
      "tensorflow_core.python.ops.gen_bitwise_ops.bitwise_and",
      "tensorflow_core.python.ops.gen_bitwise_ops.bitwise_and_eager_fallback",
      "tensorflow_core.python.ops.gen_bitwise_ops.bitwise_or",
      "tensorflow_core.python.ops.gen_bitwise_ops.bitwise_or_eager_fallback",
      "tensorflow_core.python.ops.gen_bitwise_ops.bitwise_xor",
      "tensorflow_core.python.ops.gen_bitwise_ops.bitwise_xor_eager_fallback",
      "tensorflow_core.python.ops.gen_bitwise_ops.invert",
      "tensorflow_core.python.ops.gen_bitwise_ops.invert_eager_fallback",
      "tensorflow_core.python.ops.gen_bitwise_ops.left_shift",
      "tensorflow_core.python.ops.gen_bitwise_ops.left_shift_eager_fallback",
      "tensorflow_core.python.ops.gen_bitwise_ops.population_count",
      "tensorflow_core.python.ops.gen_bitwise_ops.population_count_eager_fallback",
      "tensorflow_core.python.ops.gen_bitwise_ops.right_shift",
      "tensorflow_core.python.ops.gen_bitwise_ops.right_shift_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_boosted_trees_ops.py": [
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesAggregateStats",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesBucketize",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesCalculateBestFeatureSplit",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesCalculateBestGainsPerFeature",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesCenterBias",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesCreateEnsemble",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesCreateQuantileStreamResource",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesDeserializeEnsemble",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesEnsembleResourceHandleOp",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesExampleDebugOutputs",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesFlushQuantileSummaries",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesGetEnsembleStates",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesMakeQuantileSummaries",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesMakeStatsSummary",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesPredict",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesQuantileStreamResourceAddSummaries",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesQuantileStreamResourceDeserialize",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesQuantileStreamResourceFlush",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesQuantileStreamResourceGetBucketBoundaries",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesQuantileStreamResourceHandleOp",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesSerializeEnsemble",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesSparseAggregateStats",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesSparseCalculateBestFeatureSplit",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesTrainingPredict",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesUpdateEnsemble",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.BoostedTreesUpdateEnsembleV2",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.IsBoostedTreesEnsembleInitialized",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.IsBoostedTreesQuantileStreamResourceInitialized",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_aggregate_stats",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_aggregate_stats_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_bucketize",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_bucketize_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_calculate_best_feature_split",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_calculate_best_feature_split_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_calculate_best_gains_per_feature",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_calculate_best_gains_per_feature_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_center_bias",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_center_bias_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_create_ensemble",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_create_ensemble_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_create_quantile_stream_resource",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_create_quantile_stream_resource_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_deserialize_ensemble",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_deserialize_ensemble_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_ensemble_resource_handle_op",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_ensemble_resource_handle_op_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_example_debug_outputs",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_example_debug_outputs_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_flush_quantile_summaries",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_flush_quantile_summaries_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_get_ensemble_states",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_get_ensemble_states_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_make_quantile_summaries",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_make_quantile_summaries_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_make_stats_summary",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_make_stats_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_predict",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_predict_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_add_summaries",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_add_summaries_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_deserialize",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_deserialize_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_flush",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_flush_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_get_bucket_boundaries",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_get_bucket_boundaries_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_handle_op",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_quantile_stream_resource_handle_op_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_serialize_ensemble",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_serialize_ensemble_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_sparse_aggregate_stats",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_sparse_aggregate_stats_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_sparse_calculate_best_feature_split",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_sparse_calculate_best_feature_split_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_training_predict",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_training_predict_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_update_ensemble",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_update_ensemble_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_update_ensemble_v2",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.boosted_trees_update_ensemble_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.is_boosted_trees_ensemble_initialized",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.is_boosted_trees_ensemble_initialized_eager_fallback",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.is_boosted_trees_quantile_stream_resource_initialized",
      "tensorflow_core.python.ops.gen_boosted_trees_ops.is_boosted_trees_quantile_stream_resource_initialized_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_candidate_sampling_ops.py": [
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.AllCandidateSampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.ComputeAccidentalHits",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.FixedUnigramCandidateSampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.LearnedUnigramCandidateSampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.LogUniformCandidateSampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.ThreadUnsafeUnigramCandidateSampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.UniformCandidateSampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.all_candidate_sampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.all_candidate_sampler_eager_fallback",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.compute_accidental_hits",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.compute_accidental_hits_eager_fallback",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.fixed_unigram_candidate_sampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.fixed_unigram_candidate_sampler_eager_fallback",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.learned_unigram_candidate_sampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.learned_unigram_candidate_sampler_eager_fallback",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.log_uniform_candidate_sampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.log_uniform_candidate_sampler_eager_fallback",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.thread_unsafe_unigram_candidate_sampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.thread_unsafe_unigram_candidate_sampler_eager_fallback",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.uniform_candidate_sampler",
      "tensorflow_core.python.ops.gen_candidate_sampling_ops.uniform_candidate_sampler_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_checkpoint_ops.py": [
      "tensorflow_core.python.ops.gen_checkpoint_ops.GenerateVocabRemapping",
      "tensorflow_core.python.ops.gen_checkpoint_ops.LoadAndRemapMatrix",
      "tensorflow_core.python.ops.gen_checkpoint_ops.generate_vocab_remapping",
      "tensorflow_core.python.ops.gen_checkpoint_ops.generate_vocab_remapping_eager_fallback",
      "tensorflow_core.python.ops.gen_checkpoint_ops.load_and_remap_matrix",
      "tensorflow_core.python.ops.gen_checkpoint_ops.load_and_remap_matrix_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_clustering_ops.py": [
      "tensorflow_core.python.ops.gen_clustering_ops.KMC2ChainInitialization",
      "tensorflow_core.python.ops.gen_clustering_ops.KmeansPlusPlusInitialization",
      "tensorflow_core.python.ops.gen_clustering_ops.NearestNeighbors",
      "tensorflow_core.python.ops.gen_clustering_ops.kmc2_chain_initialization",
      "tensorflow_core.python.ops.gen_clustering_ops.kmc2_chain_initialization_eager_fallback",
      "tensorflow_core.python.ops.gen_clustering_ops.kmeans_plus_plus_initialization",
      "tensorflow_core.python.ops.gen_clustering_ops.kmeans_plus_plus_initialization_eager_fallback",
      "tensorflow_core.python.ops.gen_clustering_ops.nearest_neighbors",
      "tensorflow_core.python.ops.gen_clustering_ops.nearest_neighbors_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_collective_ops.py": [
      "tensorflow_core.python.ops.gen_collective_ops.CollectiveBcastRecv",
      "tensorflow_core.python.ops.gen_collective_ops.CollectiveBcastSend",
      "tensorflow_core.python.ops.gen_collective_ops.CollectiveGather",
      "tensorflow_core.python.ops.gen_collective_ops.CollectiveReduce",
      "tensorflow_core.python.ops.gen_collective_ops.collective_bcast_recv",
      "tensorflow_core.python.ops.gen_collective_ops.collective_bcast_recv_eager_fallback",
      "tensorflow_core.python.ops.gen_collective_ops.collective_bcast_send",
      "tensorflow_core.python.ops.gen_collective_ops.collective_bcast_send_eager_fallback",
      "tensorflow_core.python.ops.gen_collective_ops.collective_gather",
      "tensorflow_core.python.ops.gen_collective_ops.collective_gather_eager_fallback",
      "tensorflow_core.python.ops.gen_collective_ops.collective_reduce",
      "tensorflow_core.python.ops.gen_collective_ops.collective_reduce_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_control_flow_ops.py": [
      "tensorflow_core.python.ops.gen_control_flow_ops.Abort",
      "tensorflow_core.python.ops.gen_control_flow_ops.ControlTrigger",
      "tensorflow_core.python.ops.gen_control_flow_ops.Enter",
      "tensorflow_core.python.ops.gen_control_flow_ops.Exit",
      "tensorflow_core.python.ops.gen_control_flow_ops.LoopCond",
      "tensorflow_core.python.ops.gen_control_flow_ops.Merge",
      "tensorflow_core.python.ops.gen_control_flow_ops.NextIteration",
      "tensorflow_core.python.ops.gen_control_flow_ops.NoOp",
      "tensorflow_core.python.ops.gen_control_flow_ops.RefEnter",
      "tensorflow_core.python.ops.gen_control_flow_ops.RefExit",
      "tensorflow_core.python.ops.gen_control_flow_ops.RefMerge",
      "tensorflow_core.python.ops.gen_control_flow_ops.RefNextIteration",
      "tensorflow_core.python.ops.gen_control_flow_ops.RefSelect",
      "tensorflow_core.python.ops.gen_control_flow_ops.RefSwitch",
      "tensorflow_core.python.ops.gen_control_flow_ops.Switch",
      "tensorflow_core.python.ops.gen_control_flow_ops.abort",
      "tensorflow_core.python.ops.gen_control_flow_ops.abort_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.control_trigger",
      "tensorflow_core.python.ops.gen_control_flow_ops.control_trigger_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.enter",
      "tensorflow_core.python.ops.gen_control_flow_ops.enter_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.loop_cond",
      "tensorflow_core.python.ops.gen_control_flow_ops.loop_cond_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.merge",
      "tensorflow_core.python.ops.gen_control_flow_ops.merge_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.next_iteration",
      "tensorflow_core.python.ops.gen_control_flow_ops.next_iteration_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.no_op",
      "tensorflow_core.python.ops.gen_control_flow_ops.no_op_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_enter",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_enter_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_exit",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_exit_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_merge",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_merge_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_next_iteration",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_next_iteration_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_select",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_select_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_switch",
      "tensorflow_core.python.ops.gen_control_flow_ops.ref_switch_eager_fallback",
      "tensorflow_core.python.ops.gen_control_flow_ops.switch",
      "tensorflow_core.python.ops.gen_control_flow_ops.switch_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_ctc_ops.py": [
      "tensorflow_core.python.ops.gen_ctc_ops.CTCBeamSearchDecoder",
      "tensorflow_core.python.ops.gen_ctc_ops.CTCGreedyDecoder",
      "tensorflow_core.python.ops.gen_ctc_ops.CTCLoss",
      "tensorflow_core.python.ops.gen_ctc_ops.ctc_beam_search_decoder",
      "tensorflow_core.python.ops.gen_ctc_ops.ctc_beam_search_decoder_eager_fallback",
      "tensorflow_core.python.ops.gen_ctc_ops.ctc_greedy_decoder",
      "tensorflow_core.python.ops.gen_ctc_ops.ctc_greedy_decoder_eager_fallback",
      "tensorflow_core.python.ops.gen_ctc_ops.ctc_loss",
      "tensorflow_core.python.ops.gen_ctc_ops.ctc_loss_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_cudnn_rnn_ops.py": [
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNN",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNBackprop",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNBackpropV2",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNBackpropV3",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNCanonicalToParams",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNCanonicalToParamsV2",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNParamsSize",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNParamsToCanonical",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNParamsToCanonicalV2",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNV2",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.CudnnRNNV3",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_backprop",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_backprop_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_backprop_v2",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_backprop_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_backprop_v3",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_backprop_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_canonical_to_params",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_canonical_to_params_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_canonical_to_params_v2",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_canonical_to_params_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_size",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_size_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_to_canonical",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_to_canonical_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_to_canonical_v2",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnn_params_to_canonical_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnnv2",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnnv2_eager_fallback",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnnv3",
      "tensorflow_core.python.ops.gen_cudnn_rnn_ops.cudnn_rnnv3_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_data_flow_ops.py": [
      "tensorflow_core.python.ops.gen_data_flow_ops.AccumulatorApplyGradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.AccumulatorNumAccumulated",
      "tensorflow_core.python.ops.gen_data_flow_ops.AccumulatorSetGlobalStep",
      "tensorflow_core.python.ops.gen_data_flow_ops.AccumulatorTakeGradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.Barrier",
      "tensorflow_core.python.ops.gen_data_flow_ops.BarrierClose",
      "tensorflow_core.python.ops.gen_data_flow_ops.BarrierIncompleteSize",
      "tensorflow_core.python.ops.gen_data_flow_ops.BarrierInsertMany",
      "tensorflow_core.python.ops.gen_data_flow_ops.BarrierReadySize",
      "tensorflow_core.python.ops.gen_data_flow_ops.BarrierTakeMany",
      "tensorflow_core.python.ops.gen_data_flow_ops.ConditionalAccumulator",
      "tensorflow_core.python.ops.gen_data_flow_ops.DeleteSessionTensor",
      "tensorflow_core.python.ops.gen_data_flow_ops.DynamicPartition",
      "tensorflow_core.python.ops.gen_data_flow_ops.DynamicStitch",
      "tensorflow_core.python.ops.gen_data_flow_ops.FIFOQueue",
      "tensorflow_core.python.ops.gen_data_flow_ops.FIFOQueueV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.FakeQueue",
      "tensorflow_core.python.ops.gen_data_flow_ops.GetSessionHandle",
      "tensorflow_core.python.ops.gen_data_flow_ops.GetSessionHandleV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.GetSessionTensor",
      "tensorflow_core.python.ops.gen_data_flow_ops.MapClear",
      "tensorflow_core.python.ops.gen_data_flow_ops.MapIncompleteSize",
      "tensorflow_core.python.ops.gen_data_flow_ops.MapPeek",
      "tensorflow_core.python.ops.gen_data_flow_ops.MapSize",
      "tensorflow_core.python.ops.gen_data_flow_ops.MapStage",
      "tensorflow_core.python.ops.gen_data_flow_ops.MapUnstage",
      "tensorflow_core.python.ops.gen_data_flow_ops.MapUnstageNoKey",
      "tensorflow_core.python.ops.gen_data_flow_ops.OrderedMapClear",
      "tensorflow_core.python.ops.gen_data_flow_ops.OrderedMapIncompleteSize",
      "tensorflow_core.python.ops.gen_data_flow_ops.OrderedMapPeek",
      "tensorflow_core.python.ops.gen_data_flow_ops.OrderedMapSize",
      "tensorflow_core.python.ops.gen_data_flow_ops.OrderedMapStage",
      "tensorflow_core.python.ops.gen_data_flow_ops.OrderedMapUnstage",
      "tensorflow_core.python.ops.gen_data_flow_ops.OrderedMapUnstageNoKey",
      "tensorflow_core.python.ops.gen_data_flow_ops.PaddingFIFOQueue",
      "tensorflow_core.python.ops.gen_data_flow_ops.PaddingFIFOQueueV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.ParallelDynamicStitch",
      "tensorflow_core.python.ops.gen_data_flow_ops.PriorityQueue",
      "tensorflow_core.python.ops.gen_data_flow_ops.PriorityQueueV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueClose",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueCloseV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueDequeue",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueDequeueMany",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueDequeueManyV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueDequeueUpTo",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueDequeueUpToV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueDequeueV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueEnqueue",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueEnqueueMany",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueEnqueueManyV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueEnqueueV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueIsClosed",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueIsClosedV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueSize",
      "tensorflow_core.python.ops.gen_data_flow_ops.QueueSizeV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.RandomShuffleQueue",
      "tensorflow_core.python.ops.gen_data_flow_ops.RandomShuffleQueueV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.RecordInput",
      "tensorflow_core.python.ops.gen_data_flow_ops.ResourceAccumulatorApplyGradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.ResourceAccumulatorNumAccumulated",
      "tensorflow_core.python.ops.gen_data_flow_ops.ResourceAccumulatorSetGlobalStep",
      "tensorflow_core.python.ops.gen_data_flow_ops.ResourceAccumulatorTakeGradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.ResourceConditionalAccumulator",
      "tensorflow_core.python.ops.gen_data_flow_ops.SparseAccumulatorApplyGradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.SparseAccumulatorTakeGradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.SparseConditionalAccumulator",
      "tensorflow_core.python.ops.gen_data_flow_ops.Stack",
      "tensorflow_core.python.ops.gen_data_flow_ops.StackClose",
      "tensorflow_core.python.ops.gen_data_flow_ops.StackCloseV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.StackPop",
      "tensorflow_core.python.ops.gen_data_flow_ops.StackPopV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.StackPush",
      "tensorflow_core.python.ops.gen_data_flow_ops.StackPushV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.StackV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.Stage",
      "tensorflow_core.python.ops.gen_data_flow_ops.StageClear",
      "tensorflow_core.python.ops.gen_data_flow_ops.StagePeek",
      "tensorflow_core.python.ops.gen_data_flow_ops.StageSize",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArray",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayClose",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayCloseV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayCloseV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayConcat",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayConcatV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayConcatV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayGather",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayGatherV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayGatherV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayGrad",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayGradV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayGradV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayGradWithShape",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayPack",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayRead",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayReadV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayReadV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayScatter",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayScatterV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayScatterV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArraySize",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArraySizeV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArraySizeV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArraySplit",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArraySplitV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArraySplitV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayUnpack",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayWrite",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayWriteV2",
      "tensorflow_core.python.ops.gen_data_flow_ops.TensorArrayWriteV3",
      "tensorflow_core.python.ops.gen_data_flow_ops.Unstage",
      "tensorflow_core.python.ops.gen_data_flow_ops.accumulator_apply_gradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.accumulator_apply_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.accumulator_num_accumulated",
      "tensorflow_core.python.ops.gen_data_flow_ops.accumulator_num_accumulated_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.accumulator_set_global_step",
      "tensorflow_core.python.ops.gen_data_flow_ops.accumulator_set_global_step_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.accumulator_take_gradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.accumulator_take_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_close",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_close_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_incomplete_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_incomplete_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_insert_many",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_insert_many_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_ready_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_ready_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_take_many",
      "tensorflow_core.python.ops.gen_data_flow_ops.barrier_take_many_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.conditional_accumulator",
      "tensorflow_core.python.ops.gen_data_flow_ops.conditional_accumulator_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.delete_session_tensor",
      "tensorflow_core.python.ops.gen_data_flow_ops.delete_session_tensor_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.dynamic_partition",
      "tensorflow_core.python.ops.gen_data_flow_ops.dynamic_partition_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.dynamic_stitch",
      "tensorflow_core.python.ops.gen_data_flow_ops.dynamic_stitch_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.fake_queue",
      "tensorflow_core.python.ops.gen_data_flow_ops.fake_queue_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.fifo_queue",
      "tensorflow_core.python.ops.gen_data_flow_ops.fifo_queue_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.fifo_queue_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.fifo_queue_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.get_session_handle",
      "tensorflow_core.python.ops.gen_data_flow_ops.get_session_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.get_session_handle_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.get_session_handle_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.get_session_tensor",
      "tensorflow_core.python.ops.gen_data_flow_ops.get_session_tensor_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_clear",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_clear_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_incomplete_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_incomplete_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_peek",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_peek_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_stage",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_stage_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_unstage",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_unstage_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_unstage_no_key",
      "tensorflow_core.python.ops.gen_data_flow_ops.map_unstage_no_key_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_clear",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_clear_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_incomplete_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_incomplete_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_peek",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_peek_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_stage",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_stage_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_unstage",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_unstage_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_unstage_no_key",
      "tensorflow_core.python.ops.gen_data_flow_ops.ordered_map_unstage_no_key_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.padding_fifo_queue",
      "tensorflow_core.python.ops.gen_data_flow_ops.padding_fifo_queue_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.padding_fifo_queue_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.padding_fifo_queue_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.parallel_dynamic_stitch",
      "tensorflow_core.python.ops.gen_data_flow_ops.parallel_dynamic_stitch_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.priority_queue",
      "tensorflow_core.python.ops.gen_data_flow_ops.priority_queue_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.priority_queue_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.priority_queue_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_close",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_close_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_close_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_close_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_many",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_many_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_many_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_many_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_up_to",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_up_to_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_up_to_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_up_to_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_dequeue_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_enqueue",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_enqueue_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_enqueue_many",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_enqueue_many_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_enqueue_many_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_enqueue_many_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_enqueue_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_enqueue_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_is_closed",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_is_closed_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_is_closed_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_is_closed_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_size_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.queue_size_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.random_shuffle_queue",
      "tensorflow_core.python.ops.gen_data_flow_ops.random_shuffle_queue_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.random_shuffle_queue_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.random_shuffle_queue_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.record_input",
      "tensorflow_core.python.ops.gen_data_flow_ops.record_input_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_accumulator_apply_gradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_accumulator_apply_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_accumulator_num_accumulated",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_accumulator_num_accumulated_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_accumulator_set_global_step",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_accumulator_set_global_step_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_accumulator_take_gradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_accumulator_take_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_conditional_accumulator",
      "tensorflow_core.python.ops.gen_data_flow_ops.resource_conditional_accumulator_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.sparse_accumulator_apply_gradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.sparse_accumulator_apply_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.sparse_accumulator_take_gradient",
      "tensorflow_core.python.ops.gen_data_flow_ops.sparse_accumulator_take_gradient_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.sparse_conditional_accumulator",
      "tensorflow_core.python.ops.gen_data_flow_ops.sparse_conditional_accumulator_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_close",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_close_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_close_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_close_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_pop",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_pop_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_pop_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_pop_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_push",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_push_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_push_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_push_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.stack_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stage",
      "tensorflow_core.python.ops.gen_data_flow_ops.stage_clear",
      "tensorflow_core.python.ops.gen_data_flow_ops.stage_clear_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stage_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stage_peek",
      "tensorflow_core.python.ops.gen_data_flow_ops.stage_peek_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.stage_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.stage_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_close",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_close_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_close_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_close_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_close_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_close_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_concat",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_concat_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_concat_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_concat_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_concat_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_concat_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_gather",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_gather_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_gather_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_gather_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_gather_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_gather_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_grad",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_grad_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_grad_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_grad_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_grad_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_grad_with_shape",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_grad_with_shape_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_pack",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_pack_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_read",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_read_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_read_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_read_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_read_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_read_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_scatter",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_scatter_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_scatter_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_scatter_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_scatter_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_scatter_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_size",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_size_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_size_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_size_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_size_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_size_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_split",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_split_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_split_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_split_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_split_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_split_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_unpack",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_unpack_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_write",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_write_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_write_v2",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_write_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_write_v3",
      "tensorflow_core.python.ops.gen_data_flow_ops.tensor_array_write_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_data_flow_ops.unstage",
      "tensorflow_core.python.ops.gen_data_flow_ops.unstage_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_dataset_ops.py": [
      "tensorflow_core.python.ops.gen_dataset_ops.AnonymousIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.AnonymousIteratorV2",
      "tensorflow_core.python.ops.gen_dataset_ops.AnonymousMemoryCache",
      "tensorflow_core.python.ops.gen_dataset_ops.AnonymousMultiDeviceIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.AnonymousRandomSeedGenerator",
      "tensorflow_core.python.ops.gen_dataset_ops.BatchDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.BatchDatasetV2",
      "tensorflow_core.python.ops.gen_dataset_ops.CacheDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.CacheDatasetV2",
      "tensorflow_core.python.ops.gen_dataset_ops.ConcatenateDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.DatasetToGraph",
      "tensorflow_core.python.ops.gen_dataset_ops.DatasetToSingleElement",
      "tensorflow_core.python.ops.gen_dataset_ops.DeleteIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.DeleteMemoryCache",
      "tensorflow_core.python.ops.gen_dataset_ops.DeleteMultiDeviceIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.DeleteRandomSeedGenerator",
      "tensorflow_core.python.ops.gen_dataset_ops.DeserializeIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.FilterByLastComponentDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.FilterDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.FixedLengthRecordDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.FixedLengthRecordDatasetV2",
      "tensorflow_core.python.ops.gen_dataset_ops.FlatMapDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.GeneratorDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.InterleaveDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.Iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.IteratorFromStringHandle",
      "tensorflow_core.python.ops.gen_dataset_ops.IteratorFromStringHandleV2",
      "tensorflow_core.python.ops.gen_dataset_ops.IteratorGetNext",
      "tensorflow_core.python.ops.gen_dataset_ops.IteratorGetNextAsOptional",
      "tensorflow_core.python.ops.gen_dataset_ops.IteratorGetNextSync",
      "tensorflow_core.python.ops.gen_dataset_ops.IteratorToStringHandle",
      "tensorflow_core.python.ops.gen_dataset_ops.IteratorV2",
      "tensorflow_core.python.ops.gen_dataset_ops.MakeIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.MapDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.MapDefun",
      "tensorflow_core.python.ops.gen_dataset_ops.ModelDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.MultiDeviceIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.MultiDeviceIteratorFromStringHandle",
      "tensorflow_core.python.ops.gen_dataset_ops.MultiDeviceIteratorGetNextFromShard",
      "tensorflow_core.python.ops.gen_dataset_ops.MultiDeviceIteratorInit",
      "tensorflow_core.python.ops.gen_dataset_ops.MultiDeviceIteratorToStringHandle",
      "tensorflow_core.python.ops.gen_dataset_ops.OneShotIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.OptimizeDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.OptionalFromValue",
      "tensorflow_core.python.ops.gen_dataset_ops.OptionalGetValue",
      "tensorflow_core.python.ops.gen_dataset_ops.OptionalHasValue",
      "tensorflow_core.python.ops.gen_dataset_ops.OptionalNone",
      "tensorflow_core.python.ops.gen_dataset_ops.PaddedBatchDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.PaddedBatchDatasetV2",
      "tensorflow_core.python.ops.gen_dataset_ops.ParallelInterleaveDatasetV2",
      "tensorflow_core.python.ops.gen_dataset_ops.ParallelMapDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.PrefetchDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.RangeDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.ReduceDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.RepeatDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.SerializeIterator",
      "tensorflow_core.python.ops.gen_dataset_ops.ShardDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.ShuffleAndRepeatDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.ShuffleDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.ShuffleDatasetV2",
      "tensorflow_core.python.ops.gen_dataset_ops.SkipDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.SparseTensorSliceDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.TFRecordDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.TakeDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.TensorDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.TensorSliceDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.TextLineDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.UnwrapDatasetVariant",
      "tensorflow_core.python.ops.gen_dataset_ops.WindowDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.WrapDatasetVariant",
      "tensorflow_core.python.ops.gen_dataset_ops.ZipDataset",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_iterator_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_iterator_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_memory_cache",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_memory_cache_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_multi_device_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_multi_device_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_random_seed_generator",
      "tensorflow_core.python.ops.gen_dataset_ops.anonymous_random_seed_generator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.batch_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.batch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.batch_dataset_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.batch_dataset_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.cache_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.cache_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.cache_dataset_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.cache_dataset_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.concatenate_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.concatenate_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.dataset_to_graph",
      "tensorflow_core.python.ops.gen_dataset_ops.dataset_to_graph_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.dataset_to_single_element",
      "tensorflow_core.python.ops.gen_dataset_ops.dataset_to_single_element_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.delete_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.delete_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.delete_memory_cache",
      "tensorflow_core.python.ops.gen_dataset_ops.delete_memory_cache_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.delete_multi_device_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.delete_multi_device_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.delete_random_seed_generator",
      "tensorflow_core.python.ops.gen_dataset_ops.delete_random_seed_generator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.deserialize_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.deserialize_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.filter_by_last_component_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.filter_by_last_component_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.filter_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.filter_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.fixed_length_record_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.fixed_length_record_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.fixed_length_record_dataset_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.fixed_length_record_dataset_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.flat_map_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.flat_map_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.generator_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.generator_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.interleave_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.interleave_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_from_string_handle",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_from_string_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_from_string_handle_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_from_string_handle_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_get_next",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_get_next_as_optional",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_get_next_as_optional_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_get_next_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_get_next_sync",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_get_next_sync_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_to_string_handle",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_to_string_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.iterator_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.make_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.make_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.map_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.map_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.map_defun",
      "tensorflow_core.python.ops.gen_dataset_ops.map_defun_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.model_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.model_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_from_string_handle",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_from_string_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_get_next_from_shard",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_get_next_from_shard_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_init",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_init_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_to_string_handle",
      "tensorflow_core.python.ops.gen_dataset_ops.multi_device_iterator_to_string_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.one_shot_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.one_shot_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.optimize_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.optimize_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.optional_from_value",
      "tensorflow_core.python.ops.gen_dataset_ops.optional_from_value_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.optional_get_value",
      "tensorflow_core.python.ops.gen_dataset_ops.optional_get_value_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.optional_has_value",
      "tensorflow_core.python.ops.gen_dataset_ops.optional_has_value_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.optional_none",
      "tensorflow_core.python.ops.gen_dataset_ops.optional_none_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.padded_batch_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.padded_batch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.padded_batch_dataset_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.padded_batch_dataset_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.parallel_interleave_dataset_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.parallel_interleave_dataset_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.parallel_map_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.parallel_map_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.prefetch_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.prefetch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.range_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.range_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.reduce_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.reduce_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.repeat_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.repeat_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.serialize_iterator",
      "tensorflow_core.python.ops.gen_dataset_ops.serialize_iterator_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.shard_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.shard_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.shuffle_and_repeat_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.shuffle_and_repeat_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.shuffle_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.shuffle_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.shuffle_dataset_v2",
      "tensorflow_core.python.ops.gen_dataset_ops.shuffle_dataset_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.skip_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.skip_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.sparse_tensor_slice_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.sparse_tensor_slice_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.take_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.take_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.tensor_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.tensor_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.tensor_slice_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.tensor_slice_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.text_line_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.text_line_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.tf_record_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.tf_record_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.unwrap_dataset_variant",
      "tensorflow_core.python.ops.gen_dataset_ops.unwrap_dataset_variant_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.window_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.window_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.wrap_dataset_variant",
      "tensorflow_core.python.ops.gen_dataset_ops.wrap_dataset_variant_eager_fallback",
      "tensorflow_core.python.ops.gen_dataset_ops.zip_dataset",
      "tensorflow_core.python.ops.gen_dataset_ops.zip_dataset_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_decode_proto_ops.py": [
      "tensorflow_core.python.ops.gen_decode_proto_ops.DecodeProtoV2",
      "tensorflow_core.python.ops.gen_decode_proto_ops.decode_proto_v2",
      "tensorflow_core.python.ops.gen_decode_proto_ops.decode_proto_v2_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_encode_proto_ops.py": [
      "tensorflow_core.python.ops.gen_encode_proto_ops.EncodeProto",
      "tensorflow_core.python.ops.gen_encode_proto_ops.encode_proto",
      "tensorflow_core.python.ops.gen_encode_proto_ops.encode_proto_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_experimental_dataset_ops.py": [
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.AssertNextDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.AutoShardDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.BytesProducedStatsDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.CSVDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ChooseFastestBranchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ChooseFastestDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.DatasetCardinality",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.DatasetFromGraph",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.DatasetToTFRecord",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.DenseToSparseBatchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.DirectedInterleaveDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalAssertNextDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalAutoShardDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalBytesProducedStatsDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalCSVDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalChooseFastestDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalDatasetCardinality",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalDatasetToTFRecord",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalDenseToSparseBatchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalDirectedInterleaveDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalGroupByReducerDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalGroupByWindowDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalIgnoreErrorsDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalIteratorGetDevice",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalLMDBDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalLatencyStatsDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalMapAndBatchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalMapDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalMatchingFilesDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalMaxIntraOpParallelismDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalNonSerializableDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalParallelInterleaveDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalParseExampleDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalPrivateThreadPoolDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalRandomDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalRebatchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalScanDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalSetStatsAggregatorDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalSleepDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalSlidingWindowDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalSqlDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalStatsAggregatorHandle",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalStatsAggregatorSummary",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalTakeWhileDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalThreadPoolDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalThreadPoolHandle",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalUnbatchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ExperimentalUniqueDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.GroupByReducerDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.GroupByWindowDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.IgnoreErrorsDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.IteratorGetDevice",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.LMDBDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.LatencyStatsDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.MapAndBatchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.MatchingFilesDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.MaxIntraOpParallelismDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.NonSerializableDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ParallelInterleaveDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ParseExampleDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.PrivateThreadPoolDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.RandomDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.RebatchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.SamplingDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ScanDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.SetStatsAggregatorDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.SleepDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.SlidingWindowDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.SnapshotDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.SqlDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.StatsAggregatorHandle",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.StatsAggregatorHandleV2",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.StatsAggregatorSetSummaryWriter",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.StatsAggregatorSummary",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.TakeWhileDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ThreadPoolDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ThreadPoolHandle",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.UnbatchDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.UniqueDataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.assert_next_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.assert_next_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.auto_shard_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.auto_shard_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.bytes_produced_stats_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.bytes_produced_stats_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.choose_fastest_branch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.choose_fastest_branch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.choose_fastest_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.choose_fastest_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.csv_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.csv_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.dataset_cardinality",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.dataset_cardinality_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.dataset_from_graph",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.dataset_from_graph_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.dataset_to_tf_record",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.dataset_to_tf_record_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.dense_to_sparse_batch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.dense_to_sparse_batch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.directed_interleave_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.directed_interleave_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_assert_next_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_assert_next_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_auto_shard_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_auto_shard_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_bytes_produced_stats_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_bytes_produced_stats_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_choose_fastest_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_choose_fastest_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_csv_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_csv_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_dataset_cardinality",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_dataset_cardinality_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_dataset_to_tf_record",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_dataset_to_tf_record_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_dense_to_sparse_batch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_dense_to_sparse_batch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_directed_interleave_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_directed_interleave_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_group_by_reducer_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_group_by_reducer_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_group_by_window_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_group_by_window_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_ignore_errors_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_ignore_errors_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_iterator_get_device",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_iterator_get_device_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_latency_stats_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_latency_stats_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_lmdb_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_lmdb_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_map_and_batch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_map_and_batch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_map_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_map_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_matching_files_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_matching_files_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_max_intra_op_parallelism_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_max_intra_op_parallelism_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_non_serializable_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_non_serializable_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_parallel_interleave_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_parallel_interleave_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_parse_example_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_parse_example_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_private_thread_pool_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_private_thread_pool_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_random_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_random_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_rebatch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_rebatch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_scan_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_scan_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_set_stats_aggregator_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_set_stats_aggregator_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_sleep_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_sleep_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_sliding_window_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_sliding_window_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_sql_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_sql_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_stats_aggregator_handle",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_stats_aggregator_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_stats_aggregator_summary",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_stats_aggregator_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_take_while_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_take_while_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_thread_pool_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_thread_pool_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_thread_pool_handle",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_thread_pool_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_unbatch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_unbatch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_unique_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.experimental_unique_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.group_by_reducer_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.group_by_reducer_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.group_by_window_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.group_by_window_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ignore_errors_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.ignore_errors_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.iterator_get_device",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.iterator_get_device_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.latency_stats_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.latency_stats_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.lmdb_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.lmdb_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.map_and_batch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.map_and_batch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.matching_files_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.matching_files_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.max_intra_op_parallelism_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.max_intra_op_parallelism_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.non_serializable_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.non_serializable_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.parallel_interleave_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.parallel_interleave_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.parse_example_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.parse_example_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.private_thread_pool_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.private_thread_pool_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.random_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.random_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.rebatch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.rebatch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.sampling_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.sampling_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.scan_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.scan_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.set_stats_aggregator_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.set_stats_aggregator_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.sleep_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.sleep_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.sliding_window_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.sliding_window_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.snapshot_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.snapshot_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.sql_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.sql_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.stats_aggregator_handle",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.stats_aggregator_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.stats_aggregator_handle_v2",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.stats_aggregator_handle_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.stats_aggregator_set_summary_writer",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.stats_aggregator_set_summary_writer_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.stats_aggregator_summary",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.stats_aggregator_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.take_while_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.take_while_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.thread_pool_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.thread_pool_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.thread_pool_handle",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.thread_pool_handle_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.unbatch_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.unbatch_dataset_eager_fallback",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.unique_dataset",
      "tensorflow_core.python.ops.gen_experimental_dataset_ops.unique_dataset_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_functional_ops.py": [
      "tensorflow_core.python.ops.gen_functional_ops.Case",
      "tensorflow_core.python.ops.gen_functional_ops.FakeParam",
      "tensorflow_core.python.ops.gen_functional_ops.For",
      "tensorflow_core.python.ops.gen_functional_ops.If",
      "tensorflow_core.python.ops.gen_functional_ops.PartitionedCall",
      "tensorflow_core.python.ops.gen_functional_ops.RemoteCall",
      "tensorflow_core.python.ops.gen_functional_ops.StatefulPartitionedCall",
      "tensorflow_core.python.ops.gen_functional_ops.StatelessIf",
      "tensorflow_core.python.ops.gen_functional_ops.StatelessWhile",
      "tensorflow_core.python.ops.gen_functional_ops.SymbolicGradient",
      "tensorflow_core.python.ops.gen_functional_ops.While",
      "tensorflow_core.python.ops.gen_functional_ops.case",
      "tensorflow_core.python.ops.gen_functional_ops.case_eager_fallback",
      "tensorflow_core.python.ops.gen_functional_ops.fake_param",
      "tensorflow_core.python.ops.gen_functional_ops.fake_param_eager_fallback",
      "tensorflow_core.python.ops.gen_functional_ops.partitioned_call",
      "tensorflow_core.python.ops.gen_functional_ops.partitioned_call_eager_fallback",
      "tensorflow_core.python.ops.gen_functional_ops.remote_call",
      "tensorflow_core.python.ops.gen_functional_ops.remote_call_eager_fallback",
      "tensorflow_core.python.ops.gen_functional_ops.stateful_partitioned_call",
      "tensorflow_core.python.ops.gen_functional_ops.stateful_partitioned_call_eager_fallback",
      "tensorflow_core.python.ops.gen_functional_ops.stateless_if",
      "tensorflow_core.python.ops.gen_functional_ops.stateless_if_eager_fallback",
      "tensorflow_core.python.ops.gen_functional_ops.stateless_while",
      "tensorflow_core.python.ops.gen_functional_ops.stateless_while_eager_fallback",
      "tensorflow_core.python.ops.gen_functional_ops.symbolic_gradient",
      "tensorflow_core.python.ops.gen_functional_ops.symbolic_gradient_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_image_ops.py": [
      "tensorflow_core.python.ops.gen_image_ops.AdjustContrast",
      "tensorflow_core.python.ops.gen_image_ops.AdjustContrastv2",
      "tensorflow_core.python.ops.gen_image_ops.AdjustHue",
      "tensorflow_core.python.ops.gen_image_ops.AdjustSaturation",
      "tensorflow_core.python.ops.gen_image_ops.CombinedNonMaxSuppression",
      "tensorflow_core.python.ops.gen_image_ops.CropAndResize",
      "tensorflow_core.python.ops.gen_image_ops.CropAndResizeGradBoxes",
      "tensorflow_core.python.ops.gen_image_ops.CropAndResizeGradImage",
      "tensorflow_core.python.ops.gen_image_ops.DecodeAndCropJpeg",
      "tensorflow_core.python.ops.gen_image_ops.DecodeBmp",
      "tensorflow_core.python.ops.gen_image_ops.DecodeGif",
      "tensorflow_core.python.ops.gen_image_ops.DecodeJpeg",
      "tensorflow_core.python.ops.gen_image_ops.DecodePng",
      "tensorflow_core.python.ops.gen_image_ops.DrawBoundingBoxes",
      "tensorflow_core.python.ops.gen_image_ops.DrawBoundingBoxesV2",
      "tensorflow_core.python.ops.gen_image_ops.EncodeJpeg",
      "tensorflow_core.python.ops.gen_image_ops.EncodeJpegVariableQuality",
      "tensorflow_core.python.ops.gen_image_ops.EncodePng",
      "tensorflow_core.python.ops.gen_image_ops.ExtractGlimpse",
      "tensorflow_core.python.ops.gen_image_ops.ExtractJpegShape",
      "tensorflow_core.python.ops.gen_image_ops.HSVToRGB",
      "tensorflow_core.python.ops.gen_image_ops.NonMaxSuppression",
      "tensorflow_core.python.ops.gen_image_ops.NonMaxSuppressionV2",
      "tensorflow_core.python.ops.gen_image_ops.NonMaxSuppressionV3",
      "tensorflow_core.python.ops.gen_image_ops.NonMaxSuppressionV4",
      "tensorflow_core.python.ops.gen_image_ops.NonMaxSuppressionV5",
      "tensorflow_core.python.ops.gen_image_ops.NonMaxSuppressionWithOverlaps",
      "tensorflow_core.python.ops.gen_image_ops.QuantizedResizeBilinear",
      "tensorflow_core.python.ops.gen_image_ops.RGBToHSV",
      "tensorflow_core.python.ops.gen_image_ops.RandomCrop",
      "tensorflow_core.python.ops.gen_image_ops.ResizeArea",
      "tensorflow_core.python.ops.gen_image_ops.ResizeBicubic",
      "tensorflow_core.python.ops.gen_image_ops.ResizeBicubicGrad",
      "tensorflow_core.python.ops.gen_image_ops.ResizeBilinear",
      "tensorflow_core.python.ops.gen_image_ops.ResizeBilinearGrad",
      "tensorflow_core.python.ops.gen_image_ops.ResizeNearestNeighbor",
      "tensorflow_core.python.ops.gen_image_ops.ResizeNearestNeighborGrad",
      "tensorflow_core.python.ops.gen_image_ops.SampleDistortedBoundingBox",
      "tensorflow_core.python.ops.gen_image_ops.SampleDistortedBoundingBoxV2",
      "tensorflow_core.python.ops.gen_image_ops.ScaleAndTranslate",
      "tensorflow_core.python.ops.gen_image_ops.ScaleAndTranslateGrad",
      "tensorflow_core.python.ops.gen_image_ops.adjust_contrast",
      "tensorflow_core.python.ops.gen_image_ops.adjust_contrast_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.adjust_contrastv2",
      "tensorflow_core.python.ops.gen_image_ops.adjust_contrastv2_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.adjust_hue",
      "tensorflow_core.python.ops.gen_image_ops.adjust_hue_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.adjust_saturation",
      "tensorflow_core.python.ops.gen_image_ops.adjust_saturation_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.combined_non_max_suppression",
      "tensorflow_core.python.ops.gen_image_ops.combined_non_max_suppression_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.crop_and_resize",
      "tensorflow_core.python.ops.gen_image_ops.crop_and_resize_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.crop_and_resize_grad_boxes",
      "tensorflow_core.python.ops.gen_image_ops.crop_and_resize_grad_boxes_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.crop_and_resize_grad_image",
      "tensorflow_core.python.ops.gen_image_ops.crop_and_resize_grad_image_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.decode_and_crop_jpeg",
      "tensorflow_core.python.ops.gen_image_ops.decode_and_crop_jpeg_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.decode_bmp",
      "tensorflow_core.python.ops.gen_image_ops.decode_bmp_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.decode_gif",
      "tensorflow_core.python.ops.gen_image_ops.decode_gif_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.decode_jpeg",
      "tensorflow_core.python.ops.gen_image_ops.decode_jpeg_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.decode_png",
      "tensorflow_core.python.ops.gen_image_ops.decode_png_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.draw_bounding_boxes",
      "tensorflow_core.python.ops.gen_image_ops.draw_bounding_boxes_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.draw_bounding_boxes_v2",
      "tensorflow_core.python.ops.gen_image_ops.draw_bounding_boxes_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.encode_jpeg",
      "tensorflow_core.python.ops.gen_image_ops.encode_jpeg_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.encode_jpeg_variable_quality",
      "tensorflow_core.python.ops.gen_image_ops.encode_jpeg_variable_quality_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.encode_png",
      "tensorflow_core.python.ops.gen_image_ops.encode_png_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.extract_glimpse",
      "tensorflow_core.python.ops.gen_image_ops.extract_glimpse_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.extract_jpeg_shape",
      "tensorflow_core.python.ops.gen_image_ops.extract_jpeg_shape_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.hsv_to_rgb",
      "tensorflow_core.python.ops.gen_image_ops.hsv_to_rgb_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_v2",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_v3",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_v4",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_v4_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_v5",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_v5_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_with_overlaps",
      "tensorflow_core.python.ops.gen_image_ops.non_max_suppression_with_overlaps_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.quantized_resize_bilinear",
      "tensorflow_core.python.ops.gen_image_ops.quantized_resize_bilinear_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.random_crop",
      "tensorflow_core.python.ops.gen_image_ops.random_crop_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.resize_area",
      "tensorflow_core.python.ops.gen_image_ops.resize_area_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.resize_bicubic",
      "tensorflow_core.python.ops.gen_image_ops.resize_bicubic_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.resize_bicubic_grad",
      "tensorflow_core.python.ops.gen_image_ops.resize_bicubic_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.resize_bilinear",
      "tensorflow_core.python.ops.gen_image_ops.resize_bilinear_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.resize_bilinear_grad",
      "tensorflow_core.python.ops.gen_image_ops.resize_bilinear_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.resize_nearest_neighbor",
      "tensorflow_core.python.ops.gen_image_ops.resize_nearest_neighbor_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.resize_nearest_neighbor_grad",
      "tensorflow_core.python.ops.gen_image_ops.resize_nearest_neighbor_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.rgb_to_hsv",
      "tensorflow_core.python.ops.gen_image_ops.rgb_to_hsv_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.sample_distorted_bounding_box",
      "tensorflow_core.python.ops.gen_image_ops.sample_distorted_bounding_box_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.sample_distorted_bounding_box_v2",
      "tensorflow_core.python.ops.gen_image_ops.sample_distorted_bounding_box_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.scale_and_translate",
      "tensorflow_core.python.ops.gen_image_ops.scale_and_translate_eager_fallback",
      "tensorflow_core.python.ops.gen_image_ops.scale_and_translate_grad",
      "tensorflow_core.python.ops.gen_image_ops.scale_and_translate_grad_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_io_ops.py": [
      "tensorflow_core.python.ops.gen_io_ops.FixedLengthRecordReader",
      "tensorflow_core.python.ops.gen_io_ops.FixedLengthRecordReaderV2",
      "tensorflow_core.python.ops.gen_io_ops.IdentityReader",
      "tensorflow_core.python.ops.gen_io_ops.IdentityReaderV2",
      "tensorflow_core.python.ops.gen_io_ops.LMDBReader",
      "tensorflow_core.python.ops.gen_io_ops.MatchingFiles",
      "tensorflow_core.python.ops.gen_io_ops.MergeV2Checkpoints",
      "tensorflow_core.python.ops.gen_io_ops.ReadFile",
      "tensorflow_core.python.ops.gen_io_ops.ReaderNumRecordsProduced",
      "tensorflow_core.python.ops.gen_io_ops.ReaderNumRecordsProducedV2",
      "tensorflow_core.python.ops.gen_io_ops.ReaderNumWorkUnitsCompleted",
      "tensorflow_core.python.ops.gen_io_ops.ReaderNumWorkUnitsCompletedV2",
      "tensorflow_core.python.ops.gen_io_ops.ReaderRead",
      "tensorflow_core.python.ops.gen_io_ops.ReaderReadUpTo",
      "tensorflow_core.python.ops.gen_io_ops.ReaderReadUpToV2",
      "tensorflow_core.python.ops.gen_io_ops.ReaderReadV2",
      "tensorflow_core.python.ops.gen_io_ops.ReaderReset",
      "tensorflow_core.python.ops.gen_io_ops.ReaderResetV2",
      "tensorflow_core.python.ops.gen_io_ops.ReaderRestoreState",
      "tensorflow_core.python.ops.gen_io_ops.ReaderRestoreStateV2",
      "tensorflow_core.python.ops.gen_io_ops.ReaderSerializeState",
      "tensorflow_core.python.ops.gen_io_ops.ReaderSerializeStateV2",
      "tensorflow_core.python.ops.gen_io_ops.Restore",
      "tensorflow_core.python.ops.gen_io_ops.RestoreSlice",
      "tensorflow_core.python.ops.gen_io_ops.RestoreV2",
      "tensorflow_core.python.ops.gen_io_ops.Save",
      "tensorflow_core.python.ops.gen_io_ops.SaveSlices",
      "tensorflow_core.python.ops.gen_io_ops.SaveV2",
      "tensorflow_core.python.ops.gen_io_ops.ShardedFilename",
      "tensorflow_core.python.ops.gen_io_ops.ShardedFilespec",
      "tensorflow_core.python.ops.gen_io_ops.TFRecordReader",
      "tensorflow_core.python.ops.gen_io_ops.TFRecordReaderV2",
      "tensorflow_core.python.ops.gen_io_ops.TextLineReader",
      "tensorflow_core.python.ops.gen_io_ops.TextLineReaderV2",
      "tensorflow_core.python.ops.gen_io_ops.WholeFileReader",
      "tensorflow_core.python.ops.gen_io_ops.WholeFileReaderV2",
      "tensorflow_core.python.ops.gen_io_ops.WriteFile",
      "tensorflow_core.python.ops.gen_io_ops.fixed_length_record_reader",
      "tensorflow_core.python.ops.gen_io_ops.fixed_length_record_reader_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.fixed_length_record_reader_v2",
      "tensorflow_core.python.ops.gen_io_ops.fixed_length_record_reader_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.identity_reader",
      "tensorflow_core.python.ops.gen_io_ops.identity_reader_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.identity_reader_v2",
      "tensorflow_core.python.ops.gen_io_ops.identity_reader_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.lmdb_reader",
      "tensorflow_core.python.ops.gen_io_ops.lmdb_reader_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.matching_files",
      "tensorflow_core.python.ops.gen_io_ops.matching_files_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.merge_v2_checkpoints",
      "tensorflow_core.python.ops.gen_io_ops.merge_v2_checkpoints_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.read_file",
      "tensorflow_core.python.ops.gen_io_ops.read_file_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_num_records_produced",
      "tensorflow_core.python.ops.gen_io_ops.reader_num_records_produced_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_num_records_produced_v2",
      "tensorflow_core.python.ops.gen_io_ops.reader_num_records_produced_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_num_work_units_completed",
      "tensorflow_core.python.ops.gen_io_ops.reader_num_work_units_completed_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_num_work_units_completed_v2",
      "tensorflow_core.python.ops.gen_io_ops.reader_num_work_units_completed_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_read",
      "tensorflow_core.python.ops.gen_io_ops.reader_read_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_read_up_to",
      "tensorflow_core.python.ops.gen_io_ops.reader_read_up_to_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_read_up_to_v2",
      "tensorflow_core.python.ops.gen_io_ops.reader_read_up_to_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_read_v2",
      "tensorflow_core.python.ops.gen_io_ops.reader_read_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_reset",
      "tensorflow_core.python.ops.gen_io_ops.reader_reset_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_reset_v2",
      "tensorflow_core.python.ops.gen_io_ops.reader_reset_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_restore_state",
      "tensorflow_core.python.ops.gen_io_ops.reader_restore_state_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_restore_state_v2",
      "tensorflow_core.python.ops.gen_io_ops.reader_restore_state_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_serialize_state",
      "tensorflow_core.python.ops.gen_io_ops.reader_serialize_state_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.reader_serialize_state_v2",
      "tensorflow_core.python.ops.gen_io_ops.reader_serialize_state_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.restore",
      "tensorflow_core.python.ops.gen_io_ops.restore_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.restore_slice",
      "tensorflow_core.python.ops.gen_io_ops.restore_slice_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.restore_v2",
      "tensorflow_core.python.ops.gen_io_ops.restore_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.save",
      "tensorflow_core.python.ops.gen_io_ops.save_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.save_slices",
      "tensorflow_core.python.ops.gen_io_ops.save_slices_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.save_v2",
      "tensorflow_core.python.ops.gen_io_ops.save_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.sharded_filename",
      "tensorflow_core.python.ops.gen_io_ops.sharded_filename_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.sharded_filespec",
      "tensorflow_core.python.ops.gen_io_ops.sharded_filespec_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.text_line_reader",
      "tensorflow_core.python.ops.gen_io_ops.text_line_reader_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.text_line_reader_v2",
      "tensorflow_core.python.ops.gen_io_ops.text_line_reader_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.tf_record_reader",
      "tensorflow_core.python.ops.gen_io_ops.tf_record_reader_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.tf_record_reader_v2",
      "tensorflow_core.python.ops.gen_io_ops.tf_record_reader_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.whole_file_reader",
      "tensorflow_core.python.ops.gen_io_ops.whole_file_reader_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.whole_file_reader_v2",
      "tensorflow_core.python.ops.gen_io_ops.whole_file_reader_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_io_ops.write_file",
      "tensorflow_core.python.ops.gen_io_ops.write_file_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_linalg_ops.py": [
      "tensorflow_core.python.ops.gen_linalg_ops.BatchCholesky",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchCholeskyGrad",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchMatrixDeterminant",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchMatrixInverse",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchMatrixSolve",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchMatrixSolveLs",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchMatrixTriangularSolve",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchSelfAdjointEig",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchSelfAdjointEigV2",
      "tensorflow_core.python.ops.gen_linalg_ops.BatchSvd",
      "tensorflow_core.python.ops.gen_linalg_ops.Cholesky",
      "tensorflow_core.python.ops.gen_linalg_ops.CholeskyGrad",
      "tensorflow_core.python.ops.gen_linalg_ops.Einsum",
      "tensorflow_core.python.ops.gen_linalg_ops.LogMatrixDeterminant",
      "tensorflow_core.python.ops.gen_linalg_ops.Lu",
      "tensorflow_core.python.ops.gen_linalg_ops.MatrixDeterminant",
      "tensorflow_core.python.ops.gen_linalg_ops.MatrixExponential",
      "tensorflow_core.python.ops.gen_linalg_ops.MatrixInverse",
      "tensorflow_core.python.ops.gen_linalg_ops.MatrixLogarithm",
      "tensorflow_core.python.ops.gen_linalg_ops.MatrixSolve",
      "tensorflow_core.python.ops.gen_linalg_ops.MatrixSolveLs",
      "tensorflow_core.python.ops.gen_linalg_ops.MatrixSquareRoot",
      "tensorflow_core.python.ops.gen_linalg_ops.MatrixTriangularSolve",
      "tensorflow_core.python.ops.gen_linalg_ops.Qr",
      "tensorflow_core.python.ops.gen_linalg_ops.SelfAdjointEig",
      "tensorflow_core.python.ops.gen_linalg_ops.SelfAdjointEigV2",
      "tensorflow_core.python.ops.gen_linalg_ops.Svd",
      "tensorflow_core.python.ops.gen_linalg_ops.TridiagonalMatMul",
      "tensorflow_core.python.ops.gen_linalg_ops.TridiagonalSolve",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_cholesky",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_cholesky_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_cholesky_grad",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_cholesky_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_determinant",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_determinant_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_inverse",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_inverse_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_solve",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_solve_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_solve_ls",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_solve_ls_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_triangular_solve",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_matrix_triangular_solve_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_self_adjoint_eig",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_self_adjoint_eig_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_self_adjoint_eig_v2",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_self_adjoint_eig_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_svd",
      "tensorflow_core.python.ops.gen_linalg_ops.batch_svd_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.cholesky",
      "tensorflow_core.python.ops.gen_linalg_ops.cholesky_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.cholesky_grad",
      "tensorflow_core.python.ops.gen_linalg_ops.cholesky_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.einsum",
      "tensorflow_core.python.ops.gen_linalg_ops.einsum_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.log_matrix_determinant",
      "tensorflow_core.python.ops.gen_linalg_ops.log_matrix_determinant_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.lu",
      "tensorflow_core.python.ops.gen_linalg_ops.lu_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_determinant",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_determinant_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_exponential",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_exponential_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_inverse",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_inverse_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_logarithm",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_logarithm_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_solve",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_solve_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_solve_ls",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_solve_ls_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_square_root",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_square_root_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_triangular_solve",
      "tensorflow_core.python.ops.gen_linalg_ops.matrix_triangular_solve_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.qr",
      "tensorflow_core.python.ops.gen_linalg_ops.qr_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.self_adjoint_eig",
      "tensorflow_core.python.ops.gen_linalg_ops.self_adjoint_eig_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.self_adjoint_eig_v2",
      "tensorflow_core.python.ops.gen_linalg_ops.self_adjoint_eig_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.svd",
      "tensorflow_core.python.ops.gen_linalg_ops.svd_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.tridiagonal_mat_mul",
      "tensorflow_core.python.ops.gen_linalg_ops.tridiagonal_mat_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_linalg_ops.tridiagonal_solve",
      "tensorflow_core.python.ops.gen_linalg_ops.tridiagonal_solve_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_list_ops.py": [
      "tensorflow_core.python.ops.gen_list_ops.EmptyTensorList",
      "tensorflow_core.python.ops.gen_list_ops.TensorListConcat",
      "tensorflow_core.python.ops.gen_list_ops.TensorListConcatLists",
      "tensorflow_core.python.ops.gen_list_ops.TensorListConcatV2",
      "tensorflow_core.python.ops.gen_list_ops.TensorListElementShape",
      "tensorflow_core.python.ops.gen_list_ops.TensorListFromTensor",
      "tensorflow_core.python.ops.gen_list_ops.TensorListGather",
      "tensorflow_core.python.ops.gen_list_ops.TensorListGetItem",
      "tensorflow_core.python.ops.gen_list_ops.TensorListLength",
      "tensorflow_core.python.ops.gen_list_ops.TensorListPopBack",
      "tensorflow_core.python.ops.gen_list_ops.TensorListPushBack",
      "tensorflow_core.python.ops.gen_list_ops.TensorListPushBackBatch",
      "tensorflow_core.python.ops.gen_list_ops.TensorListReserve",
      "tensorflow_core.python.ops.gen_list_ops.TensorListResize",
      "tensorflow_core.python.ops.gen_list_ops.TensorListScatter",
      "tensorflow_core.python.ops.gen_list_ops.TensorListScatterIntoExistingList",
      "tensorflow_core.python.ops.gen_list_ops.TensorListScatterV2",
      "tensorflow_core.python.ops.gen_list_ops.TensorListSetItem",
      "tensorflow_core.python.ops.gen_list_ops.TensorListSplit",
      "tensorflow_core.python.ops.gen_list_ops.TensorListStack",
      "tensorflow_core.python.ops.gen_list_ops.empty_tensor_list",
      "tensorflow_core.python.ops.gen_list_ops.empty_tensor_list_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_concat",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_concat_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_concat_lists",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_concat_lists_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_concat_v2",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_concat_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_element_shape",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_element_shape_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_from_tensor",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_from_tensor_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_gather",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_gather_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_get_item",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_get_item_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_length",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_length_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_pop_back",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_pop_back_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_push_back",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_push_back_batch",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_push_back_batch_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_push_back_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_reserve",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_reserve_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_resize",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_resize_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_scatter",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_scatter_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_scatter_into_existing_list",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_scatter_into_existing_list_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_scatter_v2",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_scatter_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_set_item",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_set_item_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_split",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_split_eager_fallback",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_stack",
      "tensorflow_core.python.ops.gen_list_ops.tensor_list_stack_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_logging_ops.py": [
      "tensorflow_core.python.ops.gen_logging_ops.Assert",
      "tensorflow_core.python.ops.gen_logging_ops.AudioSummary",
      "tensorflow_core.python.ops.gen_logging_ops.AudioSummaryV2",
      "tensorflow_core.python.ops.gen_logging_ops.HistogramSummary",
      "tensorflow_core.python.ops.gen_logging_ops.ImageSummary",
      "tensorflow_core.python.ops.gen_logging_ops.MergeSummary",
      "tensorflow_core.python.ops.gen_logging_ops.Print",
      "tensorflow_core.python.ops.gen_logging_ops.PrintV2",
      "tensorflow_core.python.ops.gen_logging_ops.ScalarSummary",
      "tensorflow_core.python.ops.gen_logging_ops.TensorSummary",
      "tensorflow_core.python.ops.gen_logging_ops.TensorSummaryV2",
      "tensorflow_core.python.ops.gen_logging_ops.Timestamp",
      "tensorflow_core.python.ops.gen_logging_ops.audio_summary",
      "tensorflow_core.python.ops.gen_logging_ops.audio_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.audio_summary_v2",
      "tensorflow_core.python.ops.gen_logging_ops.audio_summary_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.histogram_summary",
      "tensorflow_core.python.ops.gen_logging_ops.histogram_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.image_summary",
      "tensorflow_core.python.ops.gen_logging_ops.image_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.merge_summary",
      "tensorflow_core.python.ops.gen_logging_ops.merge_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.print_v2",
      "tensorflow_core.python.ops.gen_logging_ops.print_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.scalar_summary",
      "tensorflow_core.python.ops.gen_logging_ops.scalar_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.tensor_summary",
      "tensorflow_core.python.ops.gen_logging_ops.tensor_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.tensor_summary_v2",
      "tensorflow_core.python.ops.gen_logging_ops.tensor_summary_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_logging_ops.timestamp",
      "tensorflow_core.python.ops.gen_logging_ops.timestamp_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_lookup_ops.py": [
      "tensorflow_core.python.ops.gen_lookup_ops.HashTable",
      "tensorflow_core.python.ops.gen_lookup_ops.HashTableV2",
      "tensorflow_core.python.ops.gen_lookup_ops.InitializeTable",
      "tensorflow_core.python.ops.gen_lookup_ops.InitializeTableFromTextFile",
      "tensorflow_core.python.ops.gen_lookup_ops.InitializeTableFromTextFileV2",
      "tensorflow_core.python.ops.gen_lookup_ops.InitializeTableV2",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableExport",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableExportV2",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableFind",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableFindV2",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableImport",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableImportV2",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableInsert",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableInsertV2",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableRemoveV2",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableSize",
      "tensorflow_core.python.ops.gen_lookup_ops.LookupTableSizeV2",
      "tensorflow_core.python.ops.gen_lookup_ops.MutableDenseHashTable",
      "tensorflow_core.python.ops.gen_lookup_ops.MutableDenseHashTableV2",
      "tensorflow_core.python.ops.gen_lookup_ops.MutableHashTable",
      "tensorflow_core.python.ops.gen_lookup_ops.MutableHashTableOfTensors",
      "tensorflow_core.python.ops.gen_lookup_ops.MutableHashTableOfTensorsV2",
      "tensorflow_core.python.ops.gen_lookup_ops.MutableHashTableV2",
      "tensorflow_core.python.ops.gen_lookup_ops.hash_table",
      "tensorflow_core.python.ops.gen_lookup_ops.hash_table_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.hash_table_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.hash_table_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.initialize_table",
      "tensorflow_core.python.ops.gen_lookup_ops.initialize_table_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.initialize_table_from_text_file",
      "tensorflow_core.python.ops.gen_lookup_ops.initialize_table_from_text_file_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.initialize_table_from_text_file_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.initialize_table_from_text_file_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.initialize_table_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.initialize_table_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_export",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_export_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_export_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_export_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_find",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_find_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_find_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_find_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_import",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_import_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_import_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_import_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_insert",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_insert_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_insert_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_insert_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_remove_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_remove_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_size",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_size_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_size_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.lookup_table_size_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_dense_hash_table",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_dense_hash_table_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_dense_hash_table_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_dense_hash_table_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_hash_table",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_hash_table_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_hash_table_of_tensors",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_hash_table_of_tensors_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_hash_table_of_tensors_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_hash_table_of_tensors_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_hash_table_v2",
      "tensorflow_core.python.ops.gen_lookup_ops.mutable_hash_table_v2_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_manip_ops.py": [
      "tensorflow_core.python.ops.gen_manip_ops.Roll",
      "tensorflow_core.python.ops.gen_manip_ops.roll",
      "tensorflow_core.python.ops.gen_manip_ops.roll_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_math_ops.py": [
      "tensorflow_core.python.ops.gen_math_ops.Abs",
      "tensorflow_core.python.ops.gen_math_ops.AccumulateNV2",
      "tensorflow_core.python.ops.gen_math_ops.Acos",
      "tensorflow_core.python.ops.gen_math_ops.Acosh",
      "tensorflow_core.python.ops.gen_math_ops.Add",
      "tensorflow_core.python.ops.gen_math_ops.AddN",
      "tensorflow_core.python.ops.gen_math_ops.AddV2",
      "tensorflow_core.python.ops.gen_math_ops.All",
      "tensorflow_core.python.ops.gen_math_ops.Angle",
      "tensorflow_core.python.ops.gen_math_ops.Any",
      "tensorflow_core.python.ops.gen_math_ops.ApproximateEqual",
      "tensorflow_core.python.ops.gen_math_ops.ArgMax",
      "tensorflow_core.python.ops.gen_math_ops.ArgMin",
      "tensorflow_core.python.ops.gen_math_ops.Asin",
      "tensorflow_core.python.ops.gen_math_ops.Asinh",
      "tensorflow_core.python.ops.gen_math_ops.Atan",
      "tensorflow_core.python.ops.gen_math_ops.Atan2",
      "tensorflow_core.python.ops.gen_math_ops.Atanh",
      "tensorflow_core.python.ops.gen_math_ops.BatchMatMul",
      "tensorflow_core.python.ops.gen_math_ops.BatchMatMulV2",
      "tensorflow_core.python.ops.gen_math_ops.BesselI0e",
      "tensorflow_core.python.ops.gen_math_ops.BesselI1e",
      "tensorflow_core.python.ops.gen_math_ops.Betainc",
      "tensorflow_core.python.ops.gen_math_ops.Bincount",
      "tensorflow_core.python.ops.gen_math_ops.Bucketize",
      "tensorflow_core.python.ops.gen_math_ops.Cast",
      "tensorflow_core.python.ops.gen_math_ops.Ceil",
      "tensorflow_core.python.ops.gen_math_ops.ClipByValue",
      "tensorflow_core.python.ops.gen_math_ops.CompareAndBitpack",
      "tensorflow_core.python.ops.gen_math_ops.Complex",
      "tensorflow_core.python.ops.gen_math_ops.ComplexAbs",
      "tensorflow_core.python.ops.gen_math_ops.Conj",
      "tensorflow_core.python.ops.gen_math_ops.Cos",
      "tensorflow_core.python.ops.gen_math_ops.Cosh",
      "tensorflow_core.python.ops.gen_math_ops.Cross",
      "tensorflow_core.python.ops.gen_math_ops.Cumprod",
      "tensorflow_core.python.ops.gen_math_ops.Cumsum",
      "tensorflow_core.python.ops.gen_math_ops.CumulativeLogsumexp",
      "tensorflow_core.python.ops.gen_math_ops.Digamma",
      "tensorflow_core.python.ops.gen_math_ops.Div",
      "tensorflow_core.python.ops.gen_math_ops.DivNoNan",
      "tensorflow_core.python.ops.gen_math_ops.Equal",
      "tensorflow_core.python.ops.gen_math_ops.Erf",
      "tensorflow_core.python.ops.gen_math_ops.Erfc",
      "tensorflow_core.python.ops.gen_math_ops.EuclideanNorm",
      "tensorflow_core.python.ops.gen_math_ops.Exp",
      "tensorflow_core.python.ops.gen_math_ops.Expm1",
      "tensorflow_core.python.ops.gen_math_ops.Floor",
      "tensorflow_core.python.ops.gen_math_ops.FloorDiv",
      "tensorflow_core.python.ops.gen_math_ops.FloorMod",
      "tensorflow_core.python.ops.gen_math_ops.Greater",
      "tensorflow_core.python.ops.gen_math_ops.GreaterEqual",
      "tensorflow_core.python.ops.gen_math_ops.HistogramFixedWidth",
      "tensorflow_core.python.ops.gen_math_ops.Igamma",
      "tensorflow_core.python.ops.gen_math_ops.IgammaGradA",
      "tensorflow_core.python.ops.gen_math_ops.Igammac",
      "tensorflow_core.python.ops.gen_math_ops.Imag",
      "tensorflow_core.python.ops.gen_math_ops.Inv",
      "tensorflow_core.python.ops.gen_math_ops.InvGrad",
      "tensorflow_core.python.ops.gen_math_ops.IsFinite",
      "tensorflow_core.python.ops.gen_math_ops.IsInf",
      "tensorflow_core.python.ops.gen_math_ops.IsNan",
      "tensorflow_core.python.ops.gen_math_ops.Less",
      "tensorflow_core.python.ops.gen_math_ops.LessEqual",
      "tensorflow_core.python.ops.gen_math_ops.Lgamma",
      "tensorflow_core.python.ops.gen_math_ops.LinSpace",
      "tensorflow_core.python.ops.gen_math_ops.Log",
      "tensorflow_core.python.ops.gen_math_ops.Log1p",
      "tensorflow_core.python.ops.gen_math_ops.LogicalAnd",
      "tensorflow_core.python.ops.gen_math_ops.LogicalNot",
      "tensorflow_core.python.ops.gen_math_ops.LogicalOr",
      "tensorflow_core.python.ops.gen_math_ops.MatMul",
      "tensorflow_core.python.ops.gen_math_ops.Max",
      "tensorflow_core.python.ops.gen_math_ops.Maximum",
      "tensorflow_core.python.ops.gen_math_ops.Mean",
      "tensorflow_core.python.ops.gen_math_ops.Min",
      "tensorflow_core.python.ops.gen_math_ops.Minimum",
      "tensorflow_core.python.ops.gen_math_ops.Mod",
      "tensorflow_core.python.ops.gen_math_ops.Mul",
      "tensorflow_core.python.ops.gen_math_ops.MulNoNan",
      "tensorflow_core.python.ops.gen_math_ops.Neg",
      "tensorflow_core.python.ops.gen_math_ops.NextAfter",
      "tensorflow_core.python.ops.gen_math_ops.NotEqual",
      "tensorflow_core.python.ops.gen_math_ops.Polygamma",
      "tensorflow_core.python.ops.gen_math_ops.Pow",
      "tensorflow_core.python.ops.gen_math_ops.Prod",
      "tensorflow_core.python.ops.gen_math_ops.QuantizeDownAndShrinkRange",
      "tensorflow_core.python.ops.gen_math_ops.QuantizedAdd",
      "tensorflow_core.python.ops.gen_math_ops.QuantizedMatMul",
      "tensorflow_core.python.ops.gen_math_ops.QuantizedMul",
      "tensorflow_core.python.ops.gen_math_ops.Range",
      "tensorflow_core.python.ops.gen_math_ops.Real",
      "tensorflow_core.python.ops.gen_math_ops.RealDiv",
      "tensorflow_core.python.ops.gen_math_ops.Reciprocal",
      "tensorflow_core.python.ops.gen_math_ops.ReciprocalGrad",
      "tensorflow_core.python.ops.gen_math_ops.RequantizationRange",
      "tensorflow_core.python.ops.gen_math_ops.RequantizationRangePerChannel",
      "tensorflow_core.python.ops.gen_math_ops.Requantize",
      "tensorflow_core.python.ops.gen_math_ops.RequantizePerChannel",
      "tensorflow_core.python.ops.gen_math_ops.Rint",
      "tensorflow_core.python.ops.gen_math_ops.Round",
      "tensorflow_core.python.ops.gen_math_ops.Rsqrt",
      "tensorflow_core.python.ops.gen_math_ops.RsqrtGrad",
      "tensorflow_core.python.ops.gen_math_ops.SegmentMax",
      "tensorflow_core.python.ops.gen_math_ops.SegmentMean",
      "tensorflow_core.python.ops.gen_math_ops.SegmentMin",
      "tensorflow_core.python.ops.gen_math_ops.SegmentProd",
      "tensorflow_core.python.ops.gen_math_ops.SegmentSum",
      "tensorflow_core.python.ops.gen_math_ops.Select",
      "tensorflow_core.python.ops.gen_math_ops.SelectV2",
      "tensorflow_core.python.ops.gen_math_ops.Sigmoid",
      "tensorflow_core.python.ops.gen_math_ops.SigmoidGrad",
      "tensorflow_core.python.ops.gen_math_ops.Sign",
      "tensorflow_core.python.ops.gen_math_ops.Sin",
      "tensorflow_core.python.ops.gen_math_ops.Sinh",
      "tensorflow_core.python.ops.gen_math_ops.SparseMatMul",
      "tensorflow_core.python.ops.gen_math_ops.SparseSegmentMean",
      "tensorflow_core.python.ops.gen_math_ops.SparseSegmentMeanGrad",
      "tensorflow_core.python.ops.gen_math_ops.SparseSegmentMeanWithNumSegments",
      "tensorflow_core.python.ops.gen_math_ops.SparseSegmentSqrtN",
      "tensorflow_core.python.ops.gen_math_ops.SparseSegmentSqrtNGrad",
      "tensorflow_core.python.ops.gen_math_ops.SparseSegmentSqrtNWithNumSegments",
      "tensorflow_core.python.ops.gen_math_ops.SparseSegmentSum",
      "tensorflow_core.python.ops.gen_math_ops.SparseSegmentSumWithNumSegments",
      "tensorflow_core.python.ops.gen_math_ops.Sqrt",
      "tensorflow_core.python.ops.gen_math_ops.SqrtGrad",
      "tensorflow_core.python.ops.gen_math_ops.Square",
      "tensorflow_core.python.ops.gen_math_ops.SquaredDifference",
      "tensorflow_core.python.ops.gen_math_ops.Sub",
      "tensorflow_core.python.ops.gen_math_ops.Sum",
      "tensorflow_core.python.ops.gen_math_ops.Tan",
      "tensorflow_core.python.ops.gen_math_ops.Tanh",
      "tensorflow_core.python.ops.gen_math_ops.TanhGrad",
      "tensorflow_core.python.ops.gen_math_ops.TruncateDiv",
      "tensorflow_core.python.ops.gen_math_ops.TruncateMod",
      "tensorflow_core.python.ops.gen_math_ops.UnsortedSegmentMax",
      "tensorflow_core.python.ops.gen_math_ops.UnsortedSegmentMin",
      "tensorflow_core.python.ops.gen_math_ops.UnsortedSegmentProd",
      "tensorflow_core.python.ops.gen_math_ops.UnsortedSegmentSum",
      "tensorflow_core.python.ops.gen_math_ops.Xdivy",
      "tensorflow_core.python.ops.gen_math_ops.Xlogy",
      "tensorflow_core.python.ops.gen_math_ops.Zeta",
      "tensorflow_core.python.ops.gen_math_ops.accumulate_nv2",
      "tensorflow_core.python.ops.gen_math_ops.accumulate_nv2_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.acos",
      "tensorflow_core.python.ops.gen_math_ops.acos_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.acosh",
      "tensorflow_core.python.ops.gen_math_ops.acosh_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.add",
      "tensorflow_core.python.ops.gen_math_ops.add_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.add_n",
      "tensorflow_core.python.ops.gen_math_ops.add_n_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.add_v2",
      "tensorflow_core.python.ops.gen_math_ops.add_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.angle",
      "tensorflow_core.python.ops.gen_math_ops.angle_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.approximate_equal",
      "tensorflow_core.python.ops.gen_math_ops.approximate_equal_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.arg_max",
      "tensorflow_core.python.ops.gen_math_ops.arg_max_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.arg_min",
      "tensorflow_core.python.ops.gen_math_ops.arg_min_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.asin",
      "tensorflow_core.python.ops.gen_math_ops.asin_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.asinh",
      "tensorflow_core.python.ops.gen_math_ops.asinh_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.atan",
      "tensorflow_core.python.ops.gen_math_ops.atan2",
      "tensorflow_core.python.ops.gen_math_ops.atan2_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.atan_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.atanh",
      "tensorflow_core.python.ops.gen_math_ops.atanh_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.batch_mat_mul",
      "tensorflow_core.python.ops.gen_math_ops.batch_mat_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.batch_mat_mul_v2",
      "tensorflow_core.python.ops.gen_math_ops.batch_mat_mul_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.bessel_i0e",
      "tensorflow_core.python.ops.gen_math_ops.bessel_i0e_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.bessel_i1e",
      "tensorflow_core.python.ops.gen_math_ops.bessel_i1e_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.betainc",
      "tensorflow_core.python.ops.gen_math_ops.betainc_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.bincount",
      "tensorflow_core.python.ops.gen_math_ops.bincount_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.bucketize",
      "tensorflow_core.python.ops.gen_math_ops.bucketize_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.cast",
      "tensorflow_core.python.ops.gen_math_ops.cast_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.ceil",
      "tensorflow_core.python.ops.gen_math_ops.ceil_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.compare_and_bitpack",
      "tensorflow_core.python.ops.gen_math_ops.compare_and_bitpack_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.complex_abs",
      "tensorflow_core.python.ops.gen_math_ops.complex_abs_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.conj",
      "tensorflow_core.python.ops.gen_math_ops.conj_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.cos",
      "tensorflow_core.python.ops.gen_math_ops.cos_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.cosh",
      "tensorflow_core.python.ops.gen_math_ops.cosh_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.cross",
      "tensorflow_core.python.ops.gen_math_ops.cross_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.cumprod",
      "tensorflow_core.python.ops.gen_math_ops.cumprod_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.cumsum",
      "tensorflow_core.python.ops.gen_math_ops.cumsum_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.cumulative_logsumexp",
      "tensorflow_core.python.ops.gen_math_ops.cumulative_logsumexp_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.digamma",
      "tensorflow_core.python.ops.gen_math_ops.digamma_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.div",
      "tensorflow_core.python.ops.gen_math_ops.div_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.div_no_nan",
      "tensorflow_core.python.ops.gen_math_ops.div_no_nan_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.equal",
      "tensorflow_core.python.ops.gen_math_ops.equal_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.erf",
      "tensorflow_core.python.ops.gen_math_ops.erf_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.erfc",
      "tensorflow_core.python.ops.gen_math_ops.erfc_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.euclidean_norm",
      "tensorflow_core.python.ops.gen_math_ops.euclidean_norm_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.exp",
      "tensorflow_core.python.ops.gen_math_ops.exp_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.expm1",
      "tensorflow_core.python.ops.gen_math_ops.expm1_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.floor",
      "tensorflow_core.python.ops.gen_math_ops.floor_div",
      "tensorflow_core.python.ops.gen_math_ops.floor_div_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.floor_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.floor_mod",
      "tensorflow_core.python.ops.gen_math_ops.floor_mod_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.greater",
      "tensorflow_core.python.ops.gen_math_ops.greater_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.greater_equal",
      "tensorflow_core.python.ops.gen_math_ops.greater_equal_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.igamma",
      "tensorflow_core.python.ops.gen_math_ops.igamma_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.igamma_grad_a",
      "tensorflow_core.python.ops.gen_math_ops.igamma_grad_a_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.igammac",
      "tensorflow_core.python.ops.gen_math_ops.igammac_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.imag",
      "tensorflow_core.python.ops.gen_math_ops.imag_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.inv",
      "tensorflow_core.python.ops.gen_math_ops.inv_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.inv_grad",
      "tensorflow_core.python.ops.gen_math_ops.inv_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.is_finite",
      "tensorflow_core.python.ops.gen_math_ops.is_finite_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.is_inf",
      "tensorflow_core.python.ops.gen_math_ops.is_inf_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.is_nan",
      "tensorflow_core.python.ops.gen_math_ops.is_nan_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.less",
      "tensorflow_core.python.ops.gen_math_ops.less_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.less_equal",
      "tensorflow_core.python.ops.gen_math_ops.less_equal_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.lgamma",
      "tensorflow_core.python.ops.gen_math_ops.lgamma_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.lin_space",
      "tensorflow_core.python.ops.gen_math_ops.lin_space_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.log",
      "tensorflow_core.python.ops.gen_math_ops.log1p",
      "tensorflow_core.python.ops.gen_math_ops.log1p_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.log_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.logical_and",
      "tensorflow_core.python.ops.gen_math_ops.logical_and_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.logical_not",
      "tensorflow_core.python.ops.gen_math_ops.logical_not_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.logical_or",
      "tensorflow_core.python.ops.gen_math_ops.logical_or_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.mat_mul",
      "tensorflow_core.python.ops.gen_math_ops.mat_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.maximum",
      "tensorflow_core.python.ops.gen_math_ops.maximum_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.mean",
      "tensorflow_core.python.ops.gen_math_ops.mean_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.minimum",
      "tensorflow_core.python.ops.gen_math_ops.minimum_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.mod",
      "tensorflow_core.python.ops.gen_math_ops.mod_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.mul",
      "tensorflow_core.python.ops.gen_math_ops.mul_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.mul_no_nan",
      "tensorflow_core.python.ops.gen_math_ops.mul_no_nan_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.neg",
      "tensorflow_core.python.ops.gen_math_ops.neg_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.next_after",
      "tensorflow_core.python.ops.gen_math_ops.next_after_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.not_equal",
      "tensorflow_core.python.ops.gen_math_ops.not_equal_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.polygamma",
      "tensorflow_core.python.ops.gen_math_ops.polygamma_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.prod",
      "tensorflow_core.python.ops.gen_math_ops.prod_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.quantize_down_and_shrink_range",
      "tensorflow_core.python.ops.gen_math_ops.quantize_down_and_shrink_range_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.quantized_add",
      "tensorflow_core.python.ops.gen_math_ops.quantized_add_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.quantized_mat_mul",
      "tensorflow_core.python.ops.gen_math_ops.quantized_mat_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.quantized_mul",
      "tensorflow_core.python.ops.gen_math_ops.quantized_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.real",
      "tensorflow_core.python.ops.gen_math_ops.real_div",
      "tensorflow_core.python.ops.gen_math_ops.real_div_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.real_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.reciprocal",
      "tensorflow_core.python.ops.gen_math_ops.reciprocal_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.reciprocal_grad",
      "tensorflow_core.python.ops.gen_math_ops.reciprocal_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.requantization_range",
      "tensorflow_core.python.ops.gen_math_ops.requantization_range_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.requantization_range_per_channel",
      "tensorflow_core.python.ops.gen_math_ops.requantization_range_per_channel_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.requantize",
      "tensorflow_core.python.ops.gen_math_ops.requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.requantize_per_channel",
      "tensorflow_core.python.ops.gen_math_ops.requantize_per_channel_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.rint",
      "tensorflow_core.python.ops.gen_math_ops.rint_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.round",
      "tensorflow_core.python.ops.gen_math_ops.round_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.rsqrt",
      "tensorflow_core.python.ops.gen_math_ops.rsqrt_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.rsqrt_grad",
      "tensorflow_core.python.ops.gen_math_ops.rsqrt_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.segment_max",
      "tensorflow_core.python.ops.gen_math_ops.segment_max_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.segment_mean",
      "tensorflow_core.python.ops.gen_math_ops.segment_mean_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.segment_min",
      "tensorflow_core.python.ops.gen_math_ops.segment_min_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.segment_prod",
      "tensorflow_core.python.ops.gen_math_ops.segment_prod_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.segment_sum",
      "tensorflow_core.python.ops.gen_math_ops.segment_sum_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.select",
      "tensorflow_core.python.ops.gen_math_ops.select_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.select_v2",
      "tensorflow_core.python.ops.gen_math_ops.select_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sigmoid",
      "tensorflow_core.python.ops.gen_math_ops.sigmoid_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sigmoid_grad",
      "tensorflow_core.python.ops.gen_math_ops.sigmoid_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sign",
      "tensorflow_core.python.ops.gen_math_ops.sign_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sin",
      "tensorflow_core.python.ops.gen_math_ops.sin_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sinh",
      "tensorflow_core.python.ops.gen_math_ops.sinh_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_mat_mul",
      "tensorflow_core.python.ops.gen_math_ops.sparse_mat_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_mean",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_mean_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_mean_grad",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_mean_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_mean_with_num_segments",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_mean_with_num_segments_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sqrt_n",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sqrt_n_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sqrt_n_grad",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sqrt_n_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sqrt_n_with_num_segments",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sqrt_n_with_num_segments_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sum",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sum_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sum_with_num_segments",
      "tensorflow_core.python.ops.gen_math_ops.sparse_segment_sum_with_num_segments_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sqrt",
      "tensorflow_core.python.ops.gen_math_ops.sqrt_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sqrt_grad",
      "tensorflow_core.python.ops.gen_math_ops.sqrt_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.square",
      "tensorflow_core.python.ops.gen_math_ops.square_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.squared_difference",
      "tensorflow_core.python.ops.gen_math_ops.squared_difference_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.sub",
      "tensorflow_core.python.ops.gen_math_ops.sub_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.tan",
      "tensorflow_core.python.ops.gen_math_ops.tan_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.tanh",
      "tensorflow_core.python.ops.gen_math_ops.tanh_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.tanh_grad",
      "tensorflow_core.python.ops.gen_math_ops.tanh_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.truncate_div",
      "tensorflow_core.python.ops.gen_math_ops.truncate_div_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.truncate_mod",
      "tensorflow_core.python.ops.gen_math_ops.truncate_mod_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.unsorted_segment_max",
      "tensorflow_core.python.ops.gen_math_ops.unsorted_segment_max_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.unsorted_segment_min",
      "tensorflow_core.python.ops.gen_math_ops.unsorted_segment_min_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.unsorted_segment_prod",
      "tensorflow_core.python.ops.gen_math_ops.unsorted_segment_prod_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.unsorted_segment_sum",
      "tensorflow_core.python.ops.gen_math_ops.unsorted_segment_sum_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.xdivy",
      "tensorflow_core.python.ops.gen_math_ops.xdivy_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.xlogy",
      "tensorflow_core.python.ops.gen_math_ops.xlogy_eager_fallback",
      "tensorflow_core.python.ops.gen_math_ops.zeta",
      "tensorflow_core.python.ops.gen_math_ops.zeta_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_nccl_ops.py": [
      "tensorflow_core.python.ops.gen_nccl_ops.NcclAllReduce",
      "tensorflow_core.python.ops.gen_nccl_ops.NcclBroadcast",
      "tensorflow_core.python.ops.gen_nccl_ops.NcclReduce",
      "tensorflow_core.python.ops.gen_nccl_ops.nccl_all_reduce",
      "tensorflow_core.python.ops.gen_nccl_ops.nccl_all_reduce_eager_fallback",
      "tensorflow_core.python.ops.gen_nccl_ops.nccl_broadcast",
      "tensorflow_core.python.ops.gen_nccl_ops.nccl_broadcast_eager_fallback",
      "tensorflow_core.python.ops.gen_nccl_ops.nccl_reduce",
      "tensorflow_core.python.ops.gen_nccl_ops.nccl_reduce_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_nn_ops.py": [
      "tensorflow_core.python.ops.gen_nn_ops.AvgPool",
      "tensorflow_core.python.ops.gen_nn_ops.AvgPool3D",
      "tensorflow_core.python.ops.gen_nn_ops.AvgPool3DGrad",
      "tensorflow_core.python.ops.gen_nn_ops.AvgPoolGrad",
      "tensorflow_core.python.ops.gen_nn_ops.BatchNormWithGlobalNormalization",
      "tensorflow_core.python.ops.gen_nn_ops.BatchNormWithGlobalNormalizationGrad",
      "tensorflow_core.python.ops.gen_nn_ops.BiasAdd",
      "tensorflow_core.python.ops.gen_nn_ops.BiasAddGrad",
      "tensorflow_core.python.ops.gen_nn_ops.BiasAddV1",
      "tensorflow_core.python.ops.gen_nn_ops.Conv2D",
      "tensorflow_core.python.ops.gen_nn_ops.Conv2DBackpropFilter",
      "tensorflow_core.python.ops.gen_nn_ops.Conv2DBackpropInput",
      "tensorflow_core.python.ops.gen_nn_ops.Conv3D",
      "tensorflow_core.python.ops.gen_nn_ops.Conv3DBackpropFilter",
      "tensorflow_core.python.ops.gen_nn_ops.Conv3DBackpropFilterV2",
      "tensorflow_core.python.ops.gen_nn_ops.Conv3DBackpropInput",
      "tensorflow_core.python.ops.gen_nn_ops.Conv3DBackpropInputV2",
      "tensorflow_core.python.ops.gen_nn_ops.DataFormatDimMap",
      "tensorflow_core.python.ops.gen_nn_ops.DataFormatVecPermute",
      "tensorflow_core.python.ops.gen_nn_ops.DepthwiseConv2dNative",
      "tensorflow_core.python.ops.gen_nn_ops.DepthwiseConv2dNativeBackpropFilter",
      "tensorflow_core.python.ops.gen_nn_ops.DepthwiseConv2dNativeBackpropInput",
      "tensorflow_core.python.ops.gen_nn_ops.Dilation2D",
      "tensorflow_core.python.ops.gen_nn_ops.Dilation2DBackpropFilter",
      "tensorflow_core.python.ops.gen_nn_ops.Dilation2DBackpropInput",
      "tensorflow_core.python.ops.gen_nn_ops.Elu",
      "tensorflow_core.python.ops.gen_nn_ops.EluGrad",
      "tensorflow_core.python.ops.gen_nn_ops.FractionalAvgPool",
      "tensorflow_core.python.ops.gen_nn_ops.FractionalAvgPoolGrad",
      "tensorflow_core.python.ops.gen_nn_ops.FractionalMaxPool",
      "tensorflow_core.python.ops.gen_nn_ops.FractionalMaxPoolGrad",
      "tensorflow_core.python.ops.gen_nn_ops.FusedBatchNorm",
      "tensorflow_core.python.ops.gen_nn_ops.FusedBatchNormGrad",
      "tensorflow_core.python.ops.gen_nn_ops.FusedBatchNormGradV2",
      "tensorflow_core.python.ops.gen_nn_ops.FusedBatchNormGradV3",
      "tensorflow_core.python.ops.gen_nn_ops.FusedBatchNormV2",
      "tensorflow_core.python.ops.gen_nn_ops.FusedBatchNormV3",
      "tensorflow_core.python.ops.gen_nn_ops.FusedPadConv2D",
      "tensorflow_core.python.ops.gen_nn_ops.FusedResizeAndPadConv2D",
      "tensorflow_core.python.ops.gen_nn_ops.InTopK",
      "tensorflow_core.python.ops.gen_nn_ops.InTopKV2",
      "tensorflow_core.python.ops.gen_nn_ops.L2Loss",
      "tensorflow_core.python.ops.gen_nn_ops.LRN",
      "tensorflow_core.python.ops.gen_nn_ops.LRNGrad",
      "tensorflow_core.python.ops.gen_nn_ops.LeakyRelu",
      "tensorflow_core.python.ops.gen_nn_ops.LeakyReluGrad",
      "tensorflow_core.python.ops.gen_nn_ops.LogSoftmax",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPool",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPool3D",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPool3DGrad",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPool3DGradGrad",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPoolGrad",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPoolGradGrad",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPoolGradGradV2",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPoolGradGradWithArgmax",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPoolGradV2",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPoolGradWithArgmax",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPoolV2",
      "tensorflow_core.python.ops.gen_nn_ops.MaxPoolWithArgmax",
      "tensorflow_core.python.ops.gen_nn_ops.NthElement",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedAvgPool",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedBatchNormWithGlobalNormalization",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedBiasAdd",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2D",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DAndRelu",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DAndReluAndRequantize",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DAndRequantize",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DPerChannel",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DWithBias",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DWithBiasAndRelu",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DWithBiasAndReluAndRequantize",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DWithBiasAndRequantize",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DWithBiasSignedSumAndReluAndRequantize",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DWithBiasSumAndRelu",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedConv2DWithBiasSumAndReluAndRequantize",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedDepthwiseConv2D",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedDepthwiseConv2DWithBias",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedDepthwiseConv2DWithBiasAndRelu",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedDepthwiseConv2DWithBiasAndReluAndRequantize",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedMatMulWithBias",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedMatMulWithBiasAndRelu",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedMatMulWithBiasAndReluAndRequantize",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedMaxPool",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedRelu",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedRelu6",
      "tensorflow_core.python.ops.gen_nn_ops.QuantizedReluX",
      "tensorflow_core.python.ops.gen_nn_ops.Relu",
      "tensorflow_core.python.ops.gen_nn_ops.Relu6",
      "tensorflow_core.python.ops.gen_nn_ops.Relu6Grad",
      "tensorflow_core.python.ops.gen_nn_ops.ReluGrad",
      "tensorflow_core.python.ops.gen_nn_ops.Selu",
      "tensorflow_core.python.ops.gen_nn_ops.SeluGrad",
      "tensorflow_core.python.ops.gen_nn_ops.Softmax",
      "tensorflow_core.python.ops.gen_nn_ops.SoftmaxCrossEntropyWithLogits",
      "tensorflow_core.python.ops.gen_nn_ops.Softplus",
      "tensorflow_core.python.ops.gen_nn_ops.SoftplusGrad",
      "tensorflow_core.python.ops.gen_nn_ops.Softsign",
      "tensorflow_core.python.ops.gen_nn_ops.SoftsignGrad",
      "tensorflow_core.python.ops.gen_nn_ops.SparseSoftmaxCrossEntropyWithLogits",
      "tensorflow_core.python.ops.gen_nn_ops.TopK",
      "tensorflow_core.python.ops.gen_nn_ops.TopKV2",
      "tensorflow_core.python.ops.gen_nn_ops.avg_pool",
      "tensorflow_core.python.ops.gen_nn_ops.avg_pool3d",
      "tensorflow_core.python.ops.gen_nn_ops.avg_pool3d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.avg_pool3d_grad",
      "tensorflow_core.python.ops.gen_nn_ops.avg_pool3d_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.avg_pool_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.avg_pool_grad",
      "tensorflow_core.python.ops.gen_nn_ops.avg_pool_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.batch_norm_with_global_normalization_grad",
      "tensorflow_core.python.ops.gen_nn_ops.batch_norm_with_global_normalization_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.bias_add",
      "tensorflow_core.python.ops.gen_nn_ops.bias_add_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.bias_add_grad",
      "tensorflow_core.python.ops.gen_nn_ops.bias_add_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.bias_add_v1",
      "tensorflow_core.python.ops.gen_nn_ops.bias_add_v1_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.conv2d",
      "tensorflow_core.python.ops.gen_nn_ops.conv2d_backprop_filter",
      "tensorflow_core.python.ops.gen_nn_ops.conv2d_backprop_filter_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.conv2d_backprop_input",
      "tensorflow_core.python.ops.gen_nn_ops.conv2d_backprop_input_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.conv2d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_backprop_filter",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_backprop_filter_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_backprop_filter_v2",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_backprop_filter_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_backprop_input",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_backprop_input_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_backprop_input_v2",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_backprop_input_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.conv3d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.data_format_dim_map",
      "tensorflow_core.python.ops.gen_nn_ops.data_format_dim_map_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.data_format_vec_permute",
      "tensorflow_core.python.ops.gen_nn_ops.data_format_vec_permute_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.depthwise_conv2d_native",
      "tensorflow_core.python.ops.gen_nn_ops.depthwise_conv2d_native_backprop_filter",
      "tensorflow_core.python.ops.gen_nn_ops.depthwise_conv2d_native_backprop_filter_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.depthwise_conv2d_native_backprop_input",
      "tensorflow_core.python.ops.gen_nn_ops.depthwise_conv2d_native_backprop_input_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.depthwise_conv2d_native_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.dilation2d",
      "tensorflow_core.python.ops.gen_nn_ops.dilation2d_backprop_filter",
      "tensorflow_core.python.ops.gen_nn_ops.dilation2d_backprop_filter_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.dilation2d_backprop_input",
      "tensorflow_core.python.ops.gen_nn_ops.dilation2d_backprop_input_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.dilation2d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.elu",
      "tensorflow_core.python.ops.gen_nn_ops.elu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.elu_grad",
      "tensorflow_core.python.ops.gen_nn_ops.elu_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fractional_avg_pool",
      "tensorflow_core.python.ops.gen_nn_ops.fractional_avg_pool_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fractional_avg_pool_grad",
      "tensorflow_core.python.ops.gen_nn_ops.fractional_avg_pool_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fractional_max_pool",
      "tensorflow_core.python.ops.gen_nn_ops.fractional_max_pool_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fractional_max_pool_grad",
      "tensorflow_core.python.ops.gen_nn_ops.fractional_max_pool_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_grad",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_grad_v2",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_grad_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_grad_v3",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_grad_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_v2",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_v3",
      "tensorflow_core.python.ops.gen_nn_ops.fused_batch_norm_v3_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fused_pad_conv2d",
      "tensorflow_core.python.ops.gen_nn_ops.fused_pad_conv2d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.fused_resize_and_pad_conv2d",
      "tensorflow_core.python.ops.gen_nn_ops.fused_resize_and_pad_conv2d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.in_top_k",
      "tensorflow_core.python.ops.gen_nn_ops.in_top_k_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.in_top_kv2",
      "tensorflow_core.python.ops.gen_nn_ops.in_top_kv2_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.l2_loss",
      "tensorflow_core.python.ops.gen_nn_ops.l2_loss_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.leaky_relu",
      "tensorflow_core.python.ops.gen_nn_ops.leaky_relu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.leaky_relu_grad",
      "tensorflow_core.python.ops.gen_nn_ops.leaky_relu_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.log_softmax",
      "tensorflow_core.python.ops.gen_nn_ops.log_softmax_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.lrn",
      "tensorflow_core.python.ops.gen_nn_ops.lrn_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.lrn_grad",
      "tensorflow_core.python.ops.gen_nn_ops.lrn_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool3d",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool3d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool3d_grad",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool3d_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool3d_grad_grad",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool3d_grad_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_grad",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_grad_v2",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_grad_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_grad_with_argmax",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_grad_with_argmax_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_v2",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_with_argmax",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_grad_with_argmax_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_v2",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_with_argmax",
      "tensorflow_core.python.ops.gen_nn_ops.max_pool_with_argmax_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.nth_element",
      "tensorflow_core.python.ops.gen_nn_ops.nth_element_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_avg_pool",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_avg_pool_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_batch_norm_with_global_normalization",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_batch_norm_with_global_normalization_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_bias_add",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_bias_add_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_and_relu",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_and_relu_and_requantize",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_and_relu_and_requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_and_relu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_and_requantize",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_and_requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_per_channel",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_per_channel_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_and_relu",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_and_relu_and_requantize",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_and_relu_and_requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_and_relu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_and_requantize",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_and_requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_signed_sum_and_relu_and_requantize",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_signed_sum_and_relu_and_requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_sum_and_relu",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_sum_and_relu_and_requantize",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_sum_and_relu_and_requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_conv2d_with_bias_sum_and_relu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_depthwise_conv2d",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_depthwise_conv2d_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_depthwise_conv2d_with_bias",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_depthwise_conv2d_with_bias_and_relu",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_depthwise_conv2d_with_bias_and_relu_and_requantize",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_depthwise_conv2d_with_bias_and_relu_and_requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_depthwise_conv2d_with_bias_and_relu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_depthwise_conv2d_with_bias_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_mat_mul_with_bias",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_mat_mul_with_bias_and_relu",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_mat_mul_with_bias_and_relu_and_requantize",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_mat_mul_with_bias_and_relu_and_requantize_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_mat_mul_with_bias_and_relu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_mat_mul_with_bias_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_max_pool",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_max_pool_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_relu",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_relu6",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_relu6_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_relu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_relu_x",
      "tensorflow_core.python.ops.gen_nn_ops.quantized_relu_x_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.relu",
      "tensorflow_core.python.ops.gen_nn_ops.relu6",
      "tensorflow_core.python.ops.gen_nn_ops.relu6_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.relu6_grad",
      "tensorflow_core.python.ops.gen_nn_ops.relu6_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.relu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.relu_grad",
      "tensorflow_core.python.ops.gen_nn_ops.relu_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.selu",
      "tensorflow_core.python.ops.gen_nn_ops.selu_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.selu_grad",
      "tensorflow_core.python.ops.gen_nn_ops.selu_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.softmax",
      "tensorflow_core.python.ops.gen_nn_ops.softmax_cross_entropy_with_logits",
      "tensorflow_core.python.ops.gen_nn_ops.softmax_cross_entropy_with_logits_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.softmax_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.softplus",
      "tensorflow_core.python.ops.gen_nn_ops.softplus_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.softplus_grad",
      "tensorflow_core.python.ops.gen_nn_ops.softplus_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.softsign",
      "tensorflow_core.python.ops.gen_nn_ops.softsign_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.softsign_grad",
      "tensorflow_core.python.ops.gen_nn_ops.softsign_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.sparse_softmax_cross_entropy_with_logits",
      "tensorflow_core.python.ops.gen_nn_ops.sparse_softmax_cross_entropy_with_logits_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.top_k",
      "tensorflow_core.python.ops.gen_nn_ops.top_k_eager_fallback",
      "tensorflow_core.python.ops.gen_nn_ops.top_kv2",
      "tensorflow_core.python.ops.gen_nn_ops.top_kv2_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_parsing_ops.py": [
      "tensorflow_core.python.ops.gen_parsing_ops.DecodeCSV",
      "tensorflow_core.python.ops.gen_parsing_ops.DecodeCompressed",
      "tensorflow_core.python.ops.gen_parsing_ops.DecodeJSONExample",
      "tensorflow_core.python.ops.gen_parsing_ops.DecodePaddedRaw",
      "tensorflow_core.python.ops.gen_parsing_ops.DecodeRaw",
      "tensorflow_core.python.ops.gen_parsing_ops.ParseExample",
      "tensorflow_core.python.ops.gen_parsing_ops.ParseSequenceExample",
      "tensorflow_core.python.ops.gen_parsing_ops.ParseSingleExample",
      "tensorflow_core.python.ops.gen_parsing_ops.ParseSingleSequenceExample",
      "tensorflow_core.python.ops.gen_parsing_ops.ParseTensor",
      "tensorflow_core.python.ops.gen_parsing_ops.SerializeTensor",
      "tensorflow_core.python.ops.gen_parsing_ops.StringToNumber",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_compressed",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_compressed_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_csv",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_csv_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_json_example",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_json_example_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_padded_raw",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_padded_raw_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_raw",
      "tensorflow_core.python.ops.gen_parsing_ops.decode_raw_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_example",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_example_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_sequence_example",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_sequence_example_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_single_example",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_single_example_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_single_sequence_example",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_single_sequence_example_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_tensor",
      "tensorflow_core.python.ops.gen_parsing_ops.parse_tensor_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.serialize_tensor",
      "tensorflow_core.python.ops.gen_parsing_ops.serialize_tensor_eager_fallback",
      "tensorflow_core.python.ops.gen_parsing_ops.string_to_number",
      "tensorflow_core.python.ops.gen_parsing_ops.string_to_number_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_ragged_array_ops.py": [
      "tensorflow_core.python.ops.gen_ragged_array_ops.RaggedGather",
      "tensorflow_core.python.ops.gen_ragged_array_ops.ragged_gather",
      "tensorflow_core.python.ops.gen_ragged_array_ops.ragged_gather_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_ragged_conversion_ops.py": [
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.RaggedTensorFromVariant",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.RaggedTensorToSparse",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.RaggedTensorToTensor",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.RaggedTensorToVariant",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.ragged_tensor_from_variant",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.ragged_tensor_from_variant_eager_fallback",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.ragged_tensor_to_sparse",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.ragged_tensor_to_sparse_eager_fallback",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.ragged_tensor_to_tensor",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.ragged_tensor_to_tensor_eager_fallback",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.ragged_tensor_to_variant",
      "tensorflow_core.python.ops.gen_ragged_conversion_ops.ragged_tensor_to_variant_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_ragged_math_ops.py": [
      "tensorflow_core.python.ops.gen_ragged_math_ops.RaggedRange",
      "tensorflow_core.python.ops.gen_ragged_math_ops.ragged_range",
      "tensorflow_core.python.ops.gen_ragged_math_ops.ragged_range_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_random_ops.py": [
      "tensorflow_core.python.ops.gen_random_ops.Multinomial",
      "tensorflow_core.python.ops.gen_random_ops.ParameterizedTruncatedNormal",
      "tensorflow_core.python.ops.gen_random_ops.RandomGamma",
      "tensorflow_core.python.ops.gen_random_ops.RandomGammaGrad",
      "tensorflow_core.python.ops.gen_random_ops.RandomPoisson",
      "tensorflow_core.python.ops.gen_random_ops.RandomPoissonV2",
      "tensorflow_core.python.ops.gen_random_ops.RandomShuffle",
      "tensorflow_core.python.ops.gen_random_ops.RandomStandardNormal",
      "tensorflow_core.python.ops.gen_random_ops.RandomUniform",
      "tensorflow_core.python.ops.gen_random_ops.RandomUniformInt",
      "tensorflow_core.python.ops.gen_random_ops.TruncatedNormal",
      "tensorflow_core.python.ops.gen_random_ops.multinomial",
      "tensorflow_core.python.ops.gen_random_ops.multinomial_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.parameterized_truncated_normal",
      "tensorflow_core.python.ops.gen_random_ops.parameterized_truncated_normal_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.random_gamma",
      "tensorflow_core.python.ops.gen_random_ops.random_gamma_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.random_gamma_grad",
      "tensorflow_core.python.ops.gen_random_ops.random_gamma_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.random_poisson",
      "tensorflow_core.python.ops.gen_random_ops.random_poisson_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.random_poisson_v2",
      "tensorflow_core.python.ops.gen_random_ops.random_poisson_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.random_shuffle",
      "tensorflow_core.python.ops.gen_random_ops.random_shuffle_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.random_standard_normal",
      "tensorflow_core.python.ops.gen_random_ops.random_standard_normal_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.random_uniform",
      "tensorflow_core.python.ops.gen_random_ops.random_uniform_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.random_uniform_int",
      "tensorflow_core.python.ops.gen_random_ops.random_uniform_int_eager_fallback",
      "tensorflow_core.python.ops.gen_random_ops.truncated_normal",
      "tensorflow_core.python.ops.gen_random_ops.truncated_normal_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_resource_variable_ops.py": [
      "tensorflow_core.python.ops.gen_resource_variable_ops.AssignAddVariableOp",
      "tensorflow_core.python.ops.gen_resource_variable_ops.AssignSubVariableOp",
      "tensorflow_core.python.ops.gen_resource_variable_ops.AssignVariableOp",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ConsumeMutexLock",
      "tensorflow_core.python.ops.gen_resource_variable_ops.DestroyResourceOp",
      "tensorflow_core.python.ops.gen_resource_variable_ops.MutexLock",
      "tensorflow_core.python.ops.gen_resource_variable_ops.MutexV2",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ReadVariableOp",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceGather",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceGatherNd",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceScatterAdd",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceScatterDiv",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceScatterMax",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceScatterMin",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceScatterMul",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceScatterSub",
      "tensorflow_core.python.ops.gen_resource_variable_ops.ResourceScatterUpdate",
      "tensorflow_core.python.ops.gen_resource_variable_ops.VarHandleOp",
      "tensorflow_core.python.ops.gen_resource_variable_ops.VarIsInitializedOp",
      "tensorflow_core.python.ops.gen_resource_variable_ops.VariableShape",
      "tensorflow_core.python.ops.gen_resource_variable_ops.assign_add_variable_op",
      "tensorflow_core.python.ops.gen_resource_variable_ops.assign_add_variable_op_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.assign_sub_variable_op",
      "tensorflow_core.python.ops.gen_resource_variable_ops.assign_sub_variable_op_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.assign_variable_op",
      "tensorflow_core.python.ops.gen_resource_variable_ops.assign_variable_op_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.consume_mutex_lock",
      "tensorflow_core.python.ops.gen_resource_variable_ops.consume_mutex_lock_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.destroy_resource_op",
      "tensorflow_core.python.ops.gen_resource_variable_ops.destroy_resource_op_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.mutex_lock",
      "tensorflow_core.python.ops.gen_resource_variable_ops.mutex_lock_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.mutex_v2",
      "tensorflow_core.python.ops.gen_resource_variable_ops.mutex_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.read_variable_op",
      "tensorflow_core.python.ops.gen_resource_variable_ops.read_variable_op_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_gather",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_gather_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_gather_nd",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_gather_nd_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_add",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_add_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_div",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_div_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_max",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_max_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_min",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_min_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_mul",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_sub",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_sub_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_update",
      "tensorflow_core.python.ops.gen_resource_variable_ops.resource_scatter_update_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.var_handle_op",
      "tensorflow_core.python.ops.gen_resource_variable_ops.var_handle_op_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.var_is_initialized_op",
      "tensorflow_core.python.ops.gen_resource_variable_ops.var_is_initialized_op_eager_fallback",
      "tensorflow_core.python.ops.gen_resource_variable_ops.variable_shape",
      "tensorflow_core.python.ops.gen_resource_variable_ops.variable_shape_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_rnn_ops.py": [
      "tensorflow_core.python.ops.gen_rnn_ops.BlockLSTM",
      "tensorflow_core.python.ops.gen_rnn_ops.BlockLSTMGrad",
      "tensorflow_core.python.ops.gen_rnn_ops.BlockLSTMGradV2",
      "tensorflow_core.python.ops.gen_rnn_ops.BlockLSTMV2",
      "tensorflow_core.python.ops.gen_rnn_ops.GRUBlockCell",
      "tensorflow_core.python.ops.gen_rnn_ops.GRUBlockCellGrad",
      "tensorflow_core.python.ops.gen_rnn_ops.LSTMBlockCell",
      "tensorflow_core.python.ops.gen_rnn_ops.LSTMBlockCellGrad",
      "tensorflow_core.python.ops.gen_rnn_ops.block_lstm",
      "tensorflow_core.python.ops.gen_rnn_ops.block_lstm_eager_fallback",
      "tensorflow_core.python.ops.gen_rnn_ops.block_lstm_grad",
      "tensorflow_core.python.ops.gen_rnn_ops.block_lstm_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_rnn_ops.block_lstm_grad_v2",
      "tensorflow_core.python.ops.gen_rnn_ops.block_lstm_grad_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_rnn_ops.block_lstmv2",
      "tensorflow_core.python.ops.gen_rnn_ops.block_lstmv2_eager_fallback",
      "tensorflow_core.python.ops.gen_rnn_ops.gru_block_cell",
      "tensorflow_core.python.ops.gen_rnn_ops.gru_block_cell_eager_fallback",
      "tensorflow_core.python.ops.gen_rnn_ops.gru_block_cell_grad",
      "tensorflow_core.python.ops.gen_rnn_ops.gru_block_cell_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_rnn_ops.lstm_block_cell",
      "tensorflow_core.python.ops.gen_rnn_ops.lstm_block_cell_eager_fallback",
      "tensorflow_core.python.ops.gen_rnn_ops.lstm_block_cell_grad",
      "tensorflow_core.python.ops.gen_rnn_ops.lstm_block_cell_grad_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_script_ops.py": [
      "tensorflow_core.python.ops.gen_script_ops.EagerPyFunc",
      "tensorflow_core.python.ops.gen_script_ops.PyFunc",
      "tensorflow_core.python.ops.gen_script_ops.PyFuncStateless",
      "tensorflow_core.python.ops.gen_script_ops.eager_py_func",
      "tensorflow_core.python.ops.gen_script_ops.eager_py_func_eager_fallback",
      "tensorflow_core.python.ops.gen_script_ops.py_func",
      "tensorflow_core.python.ops.gen_script_ops.py_func_eager_fallback",
      "tensorflow_core.python.ops.gen_script_ops.py_func_stateless",
      "tensorflow_core.python.ops.gen_script_ops.py_func_stateless_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_sdca_ops.py": [
      "tensorflow_core.python.ops.gen_sdca_ops.SdcaFprint",
      "tensorflow_core.python.ops.gen_sdca_ops.SdcaOptimizer",
      "tensorflow_core.python.ops.gen_sdca_ops.SdcaOptimizerV2",
      "tensorflow_core.python.ops.gen_sdca_ops.SdcaShrinkL1",
      "tensorflow_core.python.ops.gen_sdca_ops.sdca_fprint",
      "tensorflow_core.python.ops.gen_sdca_ops.sdca_fprint_eager_fallback",
      "tensorflow_core.python.ops.gen_sdca_ops.sdca_optimizer",
      "tensorflow_core.python.ops.gen_sdca_ops.sdca_optimizer_eager_fallback",
      "tensorflow_core.python.ops.gen_sdca_ops.sdca_optimizer_v2",
      "tensorflow_core.python.ops.gen_sdca_ops.sdca_optimizer_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_sdca_ops.sdca_shrink_l1",
      "tensorflow_core.python.ops.gen_sdca_ops.sdca_shrink_l1_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_set_ops.py": [
      "tensorflow_core.python.ops.gen_set_ops.DenseToDenseSetOperation",
      "tensorflow_core.python.ops.gen_set_ops.DenseToSparseSetOperation",
      "tensorflow_core.python.ops.gen_set_ops.SetSize",
      "tensorflow_core.python.ops.gen_set_ops.SparseToSparseSetOperation",
      "tensorflow_core.python.ops.gen_set_ops.dense_to_dense_set_operation",
      "tensorflow_core.python.ops.gen_set_ops.dense_to_dense_set_operation_eager_fallback",
      "tensorflow_core.python.ops.gen_set_ops.dense_to_sparse_set_operation",
      "tensorflow_core.python.ops.gen_set_ops.dense_to_sparse_set_operation_eager_fallback",
      "tensorflow_core.python.ops.gen_set_ops.set_size",
      "tensorflow_core.python.ops.gen_set_ops.set_size_eager_fallback",
      "tensorflow_core.python.ops.gen_set_ops.sparse_to_sparse_set_operation",
      "tensorflow_core.python.ops.gen_set_ops.sparse_to_sparse_set_operation_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_sparse_ops.py": [
      "tensorflow_core.python.ops.gen_sparse_ops.AddManySparseToTensorsMap",
      "tensorflow_core.python.ops.gen_sparse_ops.AddSparseToTensorsMap",
      "tensorflow_core.python.ops.gen_sparse_ops.DeserializeManySparse",
      "tensorflow_core.python.ops.gen_sparse_ops.DeserializeSparse",
      "tensorflow_core.python.ops.gen_sparse_ops.SerializeManySparse",
      "tensorflow_core.python.ops.gen_sparse_ops.SerializeSparse",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseAdd",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseAddGrad",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseConcat",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseCross",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseDenseCwiseAdd",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseDenseCwiseDiv",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseDenseCwiseMul",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseFillEmptyRows",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseFillEmptyRowsGrad",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseReduceMax",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseReduceMaxSparse",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseReduceSum",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseReduceSumSparse",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseReorder",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseReshape",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseSlice",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseSliceGrad",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseSoftmax",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseSparseMaximum",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseSparseMinimum",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseSplit",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseTensorDenseAdd",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseTensorDenseMatMul",
      "tensorflow_core.python.ops.gen_sparse_ops.SparseToDense",
      "tensorflow_core.python.ops.gen_sparse_ops.TakeManySparseFromTensorsMap",
      "tensorflow_core.python.ops.gen_sparse_ops.add_many_sparse_to_tensors_map",
      "tensorflow_core.python.ops.gen_sparse_ops.add_many_sparse_to_tensors_map_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.add_sparse_to_tensors_map",
      "tensorflow_core.python.ops.gen_sparse_ops.add_sparse_to_tensors_map_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.deserialize_many_sparse",
      "tensorflow_core.python.ops.gen_sparse_ops.deserialize_many_sparse_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.deserialize_sparse",
      "tensorflow_core.python.ops.gen_sparse_ops.deserialize_sparse_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.serialize_many_sparse",
      "tensorflow_core.python.ops.gen_sparse_ops.serialize_many_sparse_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.serialize_sparse",
      "tensorflow_core.python.ops.gen_sparse_ops.serialize_sparse_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_add",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_add_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_add_grad",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_add_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_concat",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_concat_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_cross",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_cross_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_dense_cwise_add",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_dense_cwise_add_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_dense_cwise_div",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_dense_cwise_div_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_dense_cwise_mul",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_dense_cwise_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_fill_empty_rows",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_fill_empty_rows_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_fill_empty_rows_grad",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_fill_empty_rows_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reduce_max",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reduce_max_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reduce_max_sparse",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reduce_max_sparse_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reduce_sum",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reduce_sum_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reduce_sum_sparse",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reduce_sum_sparse_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reorder",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reorder_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reshape",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_reshape_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_slice",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_slice_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_slice_grad",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_slice_grad_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_softmax",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_softmax_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_sparse_maximum",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_sparse_maximum_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_sparse_minimum",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_sparse_minimum_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_split",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_split_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_tensor_dense_add",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_tensor_dense_add_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_tensor_dense_mat_mul",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_tensor_dense_mat_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_to_dense",
      "tensorflow_core.python.ops.gen_sparse_ops.sparse_to_dense_eager_fallback",
      "tensorflow_core.python.ops.gen_sparse_ops.take_many_sparse_from_tensors_map",
      "tensorflow_core.python.ops.gen_sparse_ops.take_many_sparse_from_tensors_map_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_spectral_ops.py": [
      "tensorflow_core.python.ops.gen_spectral_ops.BatchFFT",
      "tensorflow_core.python.ops.gen_spectral_ops.BatchFFT2D",
      "tensorflow_core.python.ops.gen_spectral_ops.BatchFFT3D",
      "tensorflow_core.python.ops.gen_spectral_ops.BatchIFFT",
      "tensorflow_core.python.ops.gen_spectral_ops.BatchIFFT2D",
      "tensorflow_core.python.ops.gen_spectral_ops.BatchIFFT3D",
      "tensorflow_core.python.ops.gen_spectral_ops.FFT",
      "tensorflow_core.python.ops.gen_spectral_ops.FFT2D",
      "tensorflow_core.python.ops.gen_spectral_ops.FFT3D",
      "tensorflow_core.python.ops.gen_spectral_ops.IFFT",
      "tensorflow_core.python.ops.gen_spectral_ops.IFFT2D",
      "tensorflow_core.python.ops.gen_spectral_ops.IFFT3D",
      "tensorflow_core.python.ops.gen_spectral_ops.IRFFT",
      "tensorflow_core.python.ops.gen_spectral_ops.IRFFT2D",
      "tensorflow_core.python.ops.gen_spectral_ops.IRFFT3D",
      "tensorflow_core.python.ops.gen_spectral_ops.RFFT",
      "tensorflow_core.python.ops.gen_spectral_ops.RFFT2D",
      "tensorflow_core.python.ops.gen_spectral_ops.RFFT3D",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_fft",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_fft2d",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_fft2d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_fft3d",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_fft3d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_fft_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_ifft",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_ifft2d",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_ifft2d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_ifft3d",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_ifft3d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.batch_ifft_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.fft",
      "tensorflow_core.python.ops.gen_spectral_ops.fft2d",
      "tensorflow_core.python.ops.gen_spectral_ops.fft2d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.fft3d",
      "tensorflow_core.python.ops.gen_spectral_ops.fft3d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.fft_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.ifft",
      "tensorflow_core.python.ops.gen_spectral_ops.ifft2d",
      "tensorflow_core.python.ops.gen_spectral_ops.ifft2d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.ifft3d",
      "tensorflow_core.python.ops.gen_spectral_ops.ifft3d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.ifft_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.irfft",
      "tensorflow_core.python.ops.gen_spectral_ops.irfft2d",
      "tensorflow_core.python.ops.gen_spectral_ops.irfft2d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.irfft3d",
      "tensorflow_core.python.ops.gen_spectral_ops.irfft3d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.irfft_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.rfft",
      "tensorflow_core.python.ops.gen_spectral_ops.rfft2d",
      "tensorflow_core.python.ops.gen_spectral_ops.rfft2d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.rfft3d",
      "tensorflow_core.python.ops.gen_spectral_ops.rfft3d_eager_fallback",
      "tensorflow_core.python.ops.gen_spectral_ops.rfft_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_state_ops.py": [
      "tensorflow_core.python.ops.gen_state_ops.Assign",
      "tensorflow_core.python.ops.gen_state_ops.AssignAdd",
      "tensorflow_core.python.ops.gen_state_ops.AssignSub",
      "tensorflow_core.python.ops.gen_state_ops.CountUpTo",
      "tensorflow_core.python.ops.gen_state_ops.DestroyTemporaryVariable",
      "tensorflow_core.python.ops.gen_state_ops.IsVariableInitialized",
      "tensorflow_core.python.ops.gen_state_ops.ResourceCountUpTo",
      "tensorflow_core.python.ops.gen_state_ops.ResourceScatterNdAdd",
      "tensorflow_core.python.ops.gen_state_ops.ResourceScatterNdSub",
      "tensorflow_core.python.ops.gen_state_ops.ResourceScatterNdUpdate",
      "tensorflow_core.python.ops.gen_state_ops.ScatterAdd",
      "tensorflow_core.python.ops.gen_state_ops.ScatterDiv",
      "tensorflow_core.python.ops.gen_state_ops.ScatterMax",
      "tensorflow_core.python.ops.gen_state_ops.ScatterMin",
      "tensorflow_core.python.ops.gen_state_ops.ScatterMul",
      "tensorflow_core.python.ops.gen_state_ops.ScatterNdAdd",
      "tensorflow_core.python.ops.gen_state_ops.ScatterNdSub",
      "tensorflow_core.python.ops.gen_state_ops.ScatterNdUpdate",
      "tensorflow_core.python.ops.gen_state_ops.ScatterSub",
      "tensorflow_core.python.ops.gen_state_ops.ScatterUpdate",
      "tensorflow_core.python.ops.gen_state_ops.TemporaryVariable",
      "tensorflow_core.python.ops.gen_state_ops.Variable",
      "tensorflow_core.python.ops.gen_state_ops.VariableV2",
      "tensorflow_core.python.ops.gen_state_ops.assign",
      "tensorflow_core.python.ops.gen_state_ops.assign_add",
      "tensorflow_core.python.ops.gen_state_ops.assign_add_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.assign_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.assign_sub",
      "tensorflow_core.python.ops.gen_state_ops.assign_sub_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.count_up_to",
      "tensorflow_core.python.ops.gen_state_ops.count_up_to_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.destroy_temporary_variable",
      "tensorflow_core.python.ops.gen_state_ops.destroy_temporary_variable_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.is_variable_initialized",
      "tensorflow_core.python.ops.gen_state_ops.is_variable_initialized_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.resource_count_up_to",
      "tensorflow_core.python.ops.gen_state_ops.resource_count_up_to_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.resource_scatter_nd_add",
      "tensorflow_core.python.ops.gen_state_ops.resource_scatter_nd_add_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.resource_scatter_nd_sub",
      "tensorflow_core.python.ops.gen_state_ops.resource_scatter_nd_sub_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.resource_scatter_nd_update",
      "tensorflow_core.python.ops.gen_state_ops.resource_scatter_nd_update_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_add",
      "tensorflow_core.python.ops.gen_state_ops.scatter_add_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_div",
      "tensorflow_core.python.ops.gen_state_ops.scatter_div_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_max",
      "tensorflow_core.python.ops.gen_state_ops.scatter_max_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_min",
      "tensorflow_core.python.ops.gen_state_ops.scatter_min_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_mul",
      "tensorflow_core.python.ops.gen_state_ops.scatter_mul_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_nd_add",
      "tensorflow_core.python.ops.gen_state_ops.scatter_nd_add_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_nd_sub",
      "tensorflow_core.python.ops.gen_state_ops.scatter_nd_sub_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_nd_update",
      "tensorflow_core.python.ops.gen_state_ops.scatter_nd_update_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_sub",
      "tensorflow_core.python.ops.gen_state_ops.scatter_sub_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.scatter_update",
      "tensorflow_core.python.ops.gen_state_ops.scatter_update_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.temporary_variable",
      "tensorflow_core.python.ops.gen_state_ops.temporary_variable_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.variable",
      "tensorflow_core.python.ops.gen_state_ops.variable_eager_fallback",
      "tensorflow_core.python.ops.gen_state_ops.variable_v2",
      "tensorflow_core.python.ops.gen_state_ops.variable_v2_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_stateful_random_ops.py": [
      "tensorflow_core.python.ops.gen_stateful_random_ops.NonDeterministicInts",
      "tensorflow_core.python.ops.gen_stateful_random_ops.RngSkip",
      "tensorflow_core.python.ops.gen_stateful_random_ops.StatefulRandomBinomial",
      "tensorflow_core.python.ops.gen_stateful_random_ops.StatefulStandardNormal",
      "tensorflow_core.python.ops.gen_stateful_random_ops.StatefulStandardNormalV2",
      "tensorflow_core.python.ops.gen_stateful_random_ops.StatefulTruncatedNormal",
      "tensorflow_core.python.ops.gen_stateful_random_ops.StatefulUniform",
      "tensorflow_core.python.ops.gen_stateful_random_ops.StatefulUniformFullInt",
      "tensorflow_core.python.ops.gen_stateful_random_ops.StatefulUniformInt",
      "tensorflow_core.python.ops.gen_stateful_random_ops.non_deterministic_ints",
      "tensorflow_core.python.ops.gen_stateful_random_ops.non_deterministic_ints_eager_fallback",
      "tensorflow_core.python.ops.gen_stateful_random_ops.rng_skip",
      "tensorflow_core.python.ops.gen_stateful_random_ops.rng_skip_eager_fallback",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_random_binomial",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_random_binomial_eager_fallback",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_standard_normal",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_standard_normal_eager_fallback",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_standard_normal_v2",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_standard_normal_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_truncated_normal",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_truncated_normal_eager_fallback",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_uniform",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_uniform_eager_fallback",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_uniform_full_int",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_uniform_full_int_eager_fallback",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_uniform_int",
      "tensorflow_core.python.ops.gen_stateful_random_ops.stateful_uniform_int_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_stateless_random_ops.py": [
      "tensorflow_core.python.ops.gen_stateless_random_ops.StatelessMultinomial",
      "tensorflow_core.python.ops.gen_stateless_random_ops.StatelessRandomNormal",
      "tensorflow_core.python.ops.gen_stateless_random_ops.StatelessRandomUniform",
      "tensorflow_core.python.ops.gen_stateless_random_ops.StatelessRandomUniformInt",
      "tensorflow_core.python.ops.gen_stateless_random_ops.StatelessTruncatedNormal",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_multinomial",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_multinomial_eager_fallback",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_random_normal",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_random_normal_eager_fallback",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_random_uniform",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_random_uniform_eager_fallback",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_random_uniform_int",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_random_uniform_int_eager_fallback",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_truncated_normal",
      "tensorflow_core.python.ops.gen_stateless_random_ops.stateless_truncated_normal_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_string_ops.py": [
      "tensorflow_core.python.ops.gen_string_ops.AsString",
      "tensorflow_core.python.ops.gen_string_ops.DecodeBase64",
      "tensorflow_core.python.ops.gen_string_ops.EncodeBase64",
      "tensorflow_core.python.ops.gen_string_ops.ReduceJoin",
      "tensorflow_core.python.ops.gen_string_ops.RegexFullMatch",
      "tensorflow_core.python.ops.gen_string_ops.RegexReplace",
      "tensorflow_core.python.ops.gen_string_ops.StaticRegexFullMatch",
      "tensorflow_core.python.ops.gen_string_ops.StaticRegexReplace",
      "tensorflow_core.python.ops.gen_string_ops.StringFormat",
      "tensorflow_core.python.ops.gen_string_ops.StringJoin",
      "tensorflow_core.python.ops.gen_string_ops.StringLength",
      "tensorflow_core.python.ops.gen_string_ops.StringLower",
      "tensorflow_core.python.ops.gen_string_ops.StringNGrams",
      "tensorflow_core.python.ops.gen_string_ops.StringSplit",
      "tensorflow_core.python.ops.gen_string_ops.StringSplitV2",
      "tensorflow_core.python.ops.gen_string_ops.StringStrip",
      "tensorflow_core.python.ops.gen_string_ops.StringToHashBucket",
      "tensorflow_core.python.ops.gen_string_ops.StringToHashBucketFast",
      "tensorflow_core.python.ops.gen_string_ops.StringToHashBucketStrong",
      "tensorflow_core.python.ops.gen_string_ops.StringUpper",
      "tensorflow_core.python.ops.gen_string_ops.Substr",
      "tensorflow_core.python.ops.gen_string_ops.UnicodeDecode",
      "tensorflow_core.python.ops.gen_string_ops.UnicodeDecodeWithOffsets",
      "tensorflow_core.python.ops.gen_string_ops.UnicodeEncode",
      "tensorflow_core.python.ops.gen_string_ops.UnicodeScript",
      "tensorflow_core.python.ops.gen_string_ops.UnicodeTranscode",
      "tensorflow_core.python.ops.gen_string_ops.UnsortedSegmentJoin",
      "tensorflow_core.python.ops.gen_string_ops.as_string",
      "tensorflow_core.python.ops.gen_string_ops.as_string_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.decode_base64",
      "tensorflow_core.python.ops.gen_string_ops.decode_base64_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.encode_base64",
      "tensorflow_core.python.ops.gen_string_ops.encode_base64_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.reduce_join",
      "tensorflow_core.python.ops.gen_string_ops.reduce_join_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.regex_full_match",
      "tensorflow_core.python.ops.gen_string_ops.regex_full_match_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.regex_replace",
      "tensorflow_core.python.ops.gen_string_ops.regex_replace_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.static_regex_full_match",
      "tensorflow_core.python.ops.gen_string_ops.static_regex_full_match_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.static_regex_replace",
      "tensorflow_core.python.ops.gen_string_ops.static_regex_replace_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_format",
      "tensorflow_core.python.ops.gen_string_ops.string_format_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_join",
      "tensorflow_core.python.ops.gen_string_ops.string_join_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_length",
      "tensorflow_core.python.ops.gen_string_ops.string_length_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_lower",
      "tensorflow_core.python.ops.gen_string_ops.string_lower_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_n_grams",
      "tensorflow_core.python.ops.gen_string_ops.string_n_grams_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_split",
      "tensorflow_core.python.ops.gen_string_ops.string_split_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_split_v2",
      "tensorflow_core.python.ops.gen_string_ops.string_split_v2_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_strip",
      "tensorflow_core.python.ops.gen_string_ops.string_strip_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_to_hash_bucket",
      "tensorflow_core.python.ops.gen_string_ops.string_to_hash_bucket_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_to_hash_bucket_fast",
      "tensorflow_core.python.ops.gen_string_ops.string_to_hash_bucket_fast_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_to_hash_bucket_strong",
      "tensorflow_core.python.ops.gen_string_ops.string_to_hash_bucket_strong_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.string_upper",
      "tensorflow_core.python.ops.gen_string_ops.string_upper_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.substr",
      "tensorflow_core.python.ops.gen_string_ops.substr_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.unicode_decode",
      "tensorflow_core.python.ops.gen_string_ops.unicode_decode_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.unicode_decode_with_offsets",
      "tensorflow_core.python.ops.gen_string_ops.unicode_decode_with_offsets_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.unicode_encode",
      "tensorflow_core.python.ops.gen_string_ops.unicode_encode_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.unicode_script",
      "tensorflow_core.python.ops.gen_string_ops.unicode_script_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.unicode_transcode",
      "tensorflow_core.python.ops.gen_string_ops.unicode_transcode_eager_fallback",
      "tensorflow_core.python.ops.gen_string_ops.unsorted_segment_join",
      "tensorflow_core.python.ops.gen_string_ops.unsorted_segment_join_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_summary_ops.py": [
      "tensorflow_core.python.ops.gen_summary_ops.CloseSummaryWriter",
      "tensorflow_core.python.ops.gen_summary_ops.CreateSummaryDbWriter",
      "tensorflow_core.python.ops.gen_summary_ops.CreateSummaryFileWriter",
      "tensorflow_core.python.ops.gen_summary_ops.FlushSummaryWriter",
      "tensorflow_core.python.ops.gen_summary_ops.ImportEvent",
      "tensorflow_core.python.ops.gen_summary_ops.SummaryWriter",
      "tensorflow_core.python.ops.gen_summary_ops.WriteAudioSummary",
      "tensorflow_core.python.ops.gen_summary_ops.WriteGraphSummary",
      "tensorflow_core.python.ops.gen_summary_ops.WriteHistogramSummary",
      "tensorflow_core.python.ops.gen_summary_ops.WriteImageSummary",
      "tensorflow_core.python.ops.gen_summary_ops.WriteRawProtoSummary",
      "tensorflow_core.python.ops.gen_summary_ops.WriteScalarSummary",
      "tensorflow_core.python.ops.gen_summary_ops.WriteSummary",
      "tensorflow_core.python.ops.gen_summary_ops.close_summary_writer",
      "tensorflow_core.python.ops.gen_summary_ops.close_summary_writer_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.create_summary_db_writer",
      "tensorflow_core.python.ops.gen_summary_ops.create_summary_db_writer_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.create_summary_file_writer",
      "tensorflow_core.python.ops.gen_summary_ops.create_summary_file_writer_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.flush_summary_writer",
      "tensorflow_core.python.ops.gen_summary_ops.flush_summary_writer_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.import_event",
      "tensorflow_core.python.ops.gen_summary_ops.import_event_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.summary_writer",
      "tensorflow_core.python.ops.gen_summary_ops.summary_writer_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.write_audio_summary",
      "tensorflow_core.python.ops.gen_summary_ops.write_audio_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.write_graph_summary",
      "tensorflow_core.python.ops.gen_summary_ops.write_graph_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.write_histogram_summary",
      "tensorflow_core.python.ops.gen_summary_ops.write_histogram_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.write_image_summary",
      "tensorflow_core.python.ops.gen_summary_ops.write_image_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.write_raw_proto_summary",
      "tensorflow_core.python.ops.gen_summary_ops.write_raw_proto_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.write_scalar_summary",
      "tensorflow_core.python.ops.gen_summary_ops.write_scalar_summary_eager_fallback",
      "tensorflow_core.python.ops.gen_summary_ops.write_summary",
      "tensorflow_core.python.ops.gen_summary_ops.write_summary_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_tensor_forest_ops.py": [
      "tensorflow_core.python.ops.gen_tensor_forest_ops.TensorForestCreateTreeVariable",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.TensorForestTreeDeserialize",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.TensorForestTreeIsInitializedOp",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.TensorForestTreePredict",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.TensorForestTreeResourceHandleOp",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.TensorForestTreeSerialize",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.TensorForestTreeSize",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_create_tree_variable",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_create_tree_variable_eager_fallback",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_deserialize",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_deserialize_eager_fallback",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_is_initialized_op",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_is_initialized_op_eager_fallback",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_predict",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_predict_eager_fallback",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_resource_handle_op",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_resource_handle_op_eager_fallback",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_serialize",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_serialize_eager_fallback",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_size",
      "tensorflow_core.python.ops.gen_tensor_forest_ops.tensor_forest_tree_size_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_tpu_ops.py": [
      "tensorflow_core.python.ops.gen_tpu_ops.AllToAll",
      "tensorflow_core.python.ops.gen_tpu_ops.CollectivePermute",
      "tensorflow_core.python.ops.gen_tpu_ops.ConfigureDistributedTPU",
      "tensorflow_core.python.ops.gen_tpu_ops.ConfigureTPUEmbedding",
      "tensorflow_core.python.ops.gen_tpu_ops.CrossReplicaSum",
      "tensorflow_core.python.ops.gen_tpu_ops.EnqueueTPUEmbeddingIntegerBatch",
      "tensorflow_core.python.ops.gen_tpu_ops.EnqueueTPUEmbeddingSparseBatch",
      "tensorflow_core.python.ops.gen_tpu_ops.EnqueueTPUEmbeddingSparseTensorBatch",
      "tensorflow_core.python.ops.gen_tpu_ops.InfeedDequeue",
      "tensorflow_core.python.ops.gen_tpu_ops.InfeedDequeueTuple",
      "tensorflow_core.python.ops.gen_tpu_ops.InfeedEnqueue",
      "tensorflow_core.python.ops.gen_tpu_ops.InfeedEnqueuePrelinearizedBuffer",
      "tensorflow_core.python.ops.gen_tpu_ops.InfeedEnqueueTuple",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingADAMParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingADAMParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingAdadeltaParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingAdadeltaParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingAdagradParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingAdagradParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingCenteredRMSPropParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingFTRLParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingFTRLParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingMDLAdagradLightParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingMomentumParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingMomentumParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingProximalAdagradParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingProximalAdagradParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingRMSPropParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingRMSPropParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.LoadTPUEmbeddingStochasticGradientDescentParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.OutfeedDequeue",
      "tensorflow_core.python.ops.gen_tpu_ops.OutfeedDequeueTuple",
      "tensorflow_core.python.ops.gen_tpu_ops.OutfeedEnqueue",
      "tensorflow_core.python.ops.gen_tpu_ops.OutfeedEnqueueTuple",
      "tensorflow_core.python.ops.gen_tpu_ops.Prelinearize",
      "tensorflow_core.python.ops.gen_tpu_ops.PrelinearizeTuple",
      "tensorflow_core.python.ops.gen_tpu_ops.RecvTPUEmbeddingActivations",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingADAMParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingADAMParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingAdadeltaParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingAdadeltaParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingAdagradParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingAdagradParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingCenteredRMSPropParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingFTRLParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingFTRLParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingMDLAdagradLightParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingMomentumParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingMomentumParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingProximalAdagradParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingProximalAdagradParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingRMSPropParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingRMSPropParametersGradAccumDebug",
      "tensorflow_core.python.ops.gen_tpu_ops.RetrieveTPUEmbeddingStochasticGradientDescentParameters",
      "tensorflow_core.python.ops.gen_tpu_ops.SendTPUEmbeddingGradients",
      "tensorflow_core.python.ops.gen_tpu_ops.ShutdownDistributedTPU",
      "tensorflow_core.python.ops.gen_tpu_ops.TPUCompilationResult",
      "tensorflow_core.python.ops.gen_tpu_ops.TPUEmbeddingActivations",
      "tensorflow_core.python.ops.gen_tpu_ops.TPUOrdinalSelector",
      "tensorflow_core.python.ops.gen_tpu_ops.TPUPartitionedCall",
      "tensorflow_core.python.ops.gen_tpu_ops.TPUReplicateMetadata",
      "tensorflow_core.python.ops.gen_tpu_ops.TPUReplicatedInput",
      "tensorflow_core.python.ops.gen_tpu_ops.TPUReplicatedOutput",
      "tensorflow_core.python.ops.gen_tpu_ops.WorkerHeartbeat",
      "tensorflow_core.python.ops.gen_tpu_ops.all_to_all",
      "tensorflow_core.python.ops.gen_tpu_ops.all_to_all_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.collective_permute",
      "tensorflow_core.python.ops.gen_tpu_ops.collective_permute_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.configure_distributed_tpu",
      "tensorflow_core.python.ops.gen_tpu_ops.configure_distributed_tpu_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.configure_tpu_embedding",
      "tensorflow_core.python.ops.gen_tpu_ops.configure_tpu_embedding_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.cross_replica_sum",
      "tensorflow_core.python.ops.gen_tpu_ops.cross_replica_sum_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.enqueue_tpu_embedding_integer_batch",
      "tensorflow_core.python.ops.gen_tpu_ops.enqueue_tpu_embedding_integer_batch_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.enqueue_tpu_embedding_sparse_batch",
      "tensorflow_core.python.ops.gen_tpu_ops.enqueue_tpu_embedding_sparse_batch_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.enqueue_tpu_embedding_sparse_tensor_batch",
      "tensorflow_core.python.ops.gen_tpu_ops.enqueue_tpu_embedding_sparse_tensor_batch_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_dequeue",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_dequeue_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_dequeue_tuple",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_dequeue_tuple_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_enqueue",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_enqueue_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_enqueue_prelinearized_buffer",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_enqueue_prelinearized_buffer_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_enqueue_tuple",
      "tensorflow_core.python.ops.gen_tpu_ops.infeed_enqueue_tuple_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adadelta_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adadelta_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adadelta_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adadelta_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adagrad_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adagrad_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adagrad_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adagrad_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adam_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adam_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adam_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_adam_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_centered_rms_prop_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_centered_rms_prop_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_ftrl_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_ftrl_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_ftrl_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_ftrl_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_mdl_adagrad_light_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_mdl_adagrad_light_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_momentum_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_momentum_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_momentum_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_momentum_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_proximal_adagrad_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_proximal_adagrad_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_proximal_adagrad_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_proximal_adagrad_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_rms_prop_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_rms_prop_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_rms_prop_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_rms_prop_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_stochastic_gradient_descent_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.load_tpu_embedding_stochastic_gradient_descent_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.outfeed_dequeue",
      "tensorflow_core.python.ops.gen_tpu_ops.outfeed_dequeue_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.outfeed_dequeue_tuple",
      "tensorflow_core.python.ops.gen_tpu_ops.outfeed_dequeue_tuple_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.outfeed_enqueue",
      "tensorflow_core.python.ops.gen_tpu_ops.outfeed_enqueue_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.outfeed_enqueue_tuple",
      "tensorflow_core.python.ops.gen_tpu_ops.outfeed_enqueue_tuple_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.prelinearize",
      "tensorflow_core.python.ops.gen_tpu_ops.prelinearize_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.prelinearize_tuple",
      "tensorflow_core.python.ops.gen_tpu_ops.prelinearize_tuple_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.recv_tpu_embedding_activations",
      "tensorflow_core.python.ops.gen_tpu_ops.recv_tpu_embedding_activations_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adadelta_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adadelta_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adadelta_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adadelta_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adagrad_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adagrad_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adagrad_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adagrad_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adam_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adam_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adam_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_adam_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_centered_rms_prop_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_centered_rms_prop_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_ftrl_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_ftrl_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_ftrl_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_ftrl_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_mdl_adagrad_light_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_mdl_adagrad_light_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_momentum_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_momentum_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_momentum_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_momentum_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_proximal_adagrad_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_proximal_adagrad_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_proximal_adagrad_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_proximal_adagrad_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_rms_prop_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_rms_prop_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_rms_prop_parameters_grad_accum_debug",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_rms_prop_parameters_grad_accum_debug_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_stochastic_gradient_descent_parameters",
      "tensorflow_core.python.ops.gen_tpu_ops.retrieve_tpu_embedding_stochastic_gradient_descent_parameters_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.send_tpu_embedding_gradients",
      "tensorflow_core.python.ops.gen_tpu_ops.send_tpu_embedding_gradients_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.shutdown_distributed_tpu",
      "tensorflow_core.python.ops.gen_tpu_ops.shutdown_distributed_tpu_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_compilation_result",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_compilation_result_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_embedding_activations",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_embedding_activations_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_ordinal_selector",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_ordinal_selector_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_partitioned_call",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_partitioned_call_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_replicate_metadata",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_replicate_metadata_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_replicated_input",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_replicated_input_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_replicated_output",
      "tensorflow_core.python.ops.gen_tpu_ops.tpu_replicated_output_eager_fallback",
      "tensorflow_core.python.ops.gen_tpu_ops.worker_heartbeat",
      "tensorflow_core.python.ops.gen_tpu_ops.worker_heartbeat_eager_fallback"
    ],
    "tensorflow_core/python/ops/gen_user_ops.py": [
      "tensorflow_core.python.ops.gen_user_ops.Fact",
      "tensorflow_core.python.ops.gen_user_ops.fact",
      "tensorflow_core.python.ops.gen_user_ops.fact_eager_fallback"
    ],
    "tensorflow_core/python/ops/gradient_checker.py": [
      "tensorflow_core.python.ops.gradient_checker.compute_gradient",
      "tensorflow_core.python.ops.gradient_checker.compute_gradient_error"
    ],
    "tensorflow_core/python/ops/gradient_checker_v2.py": [
      "tensorflow_core.python.ops.gradient_checker_v2.compute_gradient",
      "tensorflow_core.python.ops.gradient_checker_v2.max_error"
    ],
    "tensorflow_core/python/ops/gradients.py": [],
    "tensorflow_core/python/ops/gradients_impl.py": [
      "tensorflow_core.python.ops.gradients_impl.HessiansV2",
      "tensorflow_core.python.ops.gradients_impl.gradients",
      "tensorflow_core.python.ops.gradients_impl.gradients_v2",
      "tensorflow_core.python.ops.gradients_impl.hessians"
    ],
    "tensorflow_core/python/ops/gradients_util.py": [
      "tensorflow_core.python.ops.gradients_util.AggregationMethod",
      "tensorflow_core.python.ops.gradients_util.IsTrainable"
    ],
    "tensorflow_core/python/ops/histogram_ops.py": [
      "tensorflow_core.python.ops.histogram_ops.histogram_fixed_width",
      "tensorflow_core.python.ops.histogram_ops.histogram_fixed_width_bins"
    ],
    "tensorflow_core/python/ops/image_grad.py": [],
    "tensorflow_core/python/ops/image_ops.py": [],
    "tensorflow_core/python/ops/image_ops_impl.py": [
      "tensorflow_core.python.ops.image_ops_impl.ResizeMethod",
      "tensorflow_core.python.ops.image_ops_impl.ResizeMethodV1",
      "tensorflow_core.python.ops.image_ops_impl.adjust_brightness",
      "tensorflow_core.python.ops.image_ops_impl.adjust_contrast",
      "tensorflow_core.python.ops.image_ops_impl.adjust_gamma",
      "tensorflow_core.python.ops.image_ops_impl.adjust_hue",
      "tensorflow_core.python.ops.image_ops_impl.adjust_jpeg_quality",
      "tensorflow_core.python.ops.image_ops_impl.adjust_saturation",
      "tensorflow_core.python.ops.image_ops_impl.central_crop",
      "tensorflow_core.python.ops.image_ops_impl.combined_non_max_suppression",
      "tensorflow_core.python.ops.image_ops_impl.convert_image_dtype",
      "tensorflow_core.python.ops.image_ops_impl.crop_and_resize_v1",
      "tensorflow_core.python.ops.image_ops_impl.crop_and_resize_v2",
      "tensorflow_core.python.ops.image_ops_impl.crop_to_bounding_box",
      "tensorflow_core.python.ops.image_ops_impl.decode_image",
      "tensorflow_core.python.ops.image_ops_impl.draw_bounding_boxes",
      "tensorflow_core.python.ops.image_ops_impl.draw_bounding_boxes_v2",
      "tensorflow_core.python.ops.image_ops_impl.extract_glimpse",
      "tensorflow_core.python.ops.image_ops_impl.extract_glimpse_v2",
      "tensorflow_core.python.ops.image_ops_impl.fix_image_flip_shape",
      "tensorflow_core.python.ops.image_ops_impl.flip_left_right",
      "tensorflow_core.python.ops.image_ops_impl.flip_up_down",
      "tensorflow_core.python.ops.image_ops_impl.grayscale_to_rgb",
      "tensorflow_core.python.ops.image_ops_impl.image_gradients",
      "tensorflow_core.python.ops.image_ops_impl.is_jpeg",
      "tensorflow_core.python.ops.image_ops_impl.non_max_suppression",
      "tensorflow_core.python.ops.image_ops_impl.non_max_suppression_padded",
      "tensorflow_core.python.ops.image_ops_impl.non_max_suppression_with_overlaps",
      "tensorflow_core.python.ops.image_ops_impl.non_max_suppression_with_scores",
      "tensorflow_core.python.ops.image_ops_impl.pad_to_bounding_box",
      "tensorflow_core.python.ops.image_ops_impl.per_image_standardization",
      "tensorflow_core.python.ops.image_ops_impl.psnr",
      "tensorflow_core.python.ops.image_ops_impl.random_brightness",
      "tensorflow_core.python.ops.image_ops_impl.random_contrast",
      "tensorflow_core.python.ops.image_ops_impl.random_flip_left_right",
      "tensorflow_core.python.ops.image_ops_impl.random_flip_up_down",
      "tensorflow_core.python.ops.image_ops_impl.random_hue",
      "tensorflow_core.python.ops.image_ops_impl.random_jpeg_quality",
      "tensorflow_core.python.ops.image_ops_impl.random_saturation",
      "tensorflow_core.python.ops.image_ops_impl.resize_area_deprecation",
      "tensorflow_core.python.ops.image_ops_impl.resize_bicubic",
      "tensorflow_core.python.ops.image_ops_impl.resize_bicubic_deprecation",
      "tensorflow_core.python.ops.image_ops_impl.resize_bilinear",
      "tensorflow_core.python.ops.image_ops_impl.resize_bilinear_deprecation",
      "tensorflow_core.python.ops.image_ops_impl.resize_image_with_crop_or_pad",
      "tensorflow_core.python.ops.image_ops_impl.resize_image_with_pad_v1",
      "tensorflow_core.python.ops.image_ops_impl.resize_image_with_pad_v2",
      "tensorflow_core.python.ops.image_ops_impl.resize_images",
      "tensorflow_core.python.ops.image_ops_impl.resize_images_v2",
      "tensorflow_core.python.ops.image_ops_impl.resize_nearest_neighbor",
      "tensorflow_core.python.ops.image_ops_impl.resize_nearest_neighbor_deprecation",
      "tensorflow_core.python.ops.image_ops_impl.rgb_to_grayscale",
      "tensorflow_core.python.ops.image_ops_impl.rgb_to_yiq",
      "tensorflow_core.python.ops.image_ops_impl.rgb_to_yuv",
      "tensorflow_core.python.ops.image_ops_impl.rot90",
      "tensorflow_core.python.ops.image_ops_impl.sample_distorted_bounding_box",
      "tensorflow_core.python.ops.image_ops_impl.sample_distorted_bounding_box_v2",
      "tensorflow_core.python.ops.image_ops_impl.sobel_edges",
      "tensorflow_core.python.ops.image_ops_impl.ssim",
      "tensorflow_core.python.ops.image_ops_impl.ssim_multiscale",
      "tensorflow_core.python.ops.image_ops_impl.total_variation",
      "tensorflow_core.python.ops.image_ops_impl.transpose",
      "tensorflow_core.python.ops.image_ops_impl.yiq_to_rgb",
      "tensorflow_core.python.ops.image_ops_impl.yuv_to_rgb"
    ],
    "tensorflow_core/python/ops/init_ops.py": [
      "tensorflow_core.python.ops.init_ops.Constant",
      "tensorflow_core.python.ops.init_ops.ConvolutionDeltaOrthogonal",
      "tensorflow_core.python.ops.init_ops.ConvolutionOrthogonal",
      "tensorflow_core.python.ops.init_ops.ConvolutionOrthogonal1D",
      "tensorflow_core.python.ops.init_ops.ConvolutionOrthogonal2D",
      "tensorflow_core.python.ops.init_ops.ConvolutionOrthogonal3D",
      "tensorflow_core.python.ops.init_ops.GlorotNormal",
      "tensorflow_core.python.ops.init_ops.GlorotUniform",
      "tensorflow_core.python.ops.init_ops.Identity",
      "tensorflow_core.python.ops.init_ops.Initializer",
      "tensorflow_core.python.ops.init_ops.Ones",
      "tensorflow_core.python.ops.init_ops.Orthogonal",
      "tensorflow_core.python.ops.init_ops.RandomNormal",
      "tensorflow_core.python.ops.init_ops.RandomUniform",
      "tensorflow_core.python.ops.init_ops.TruncatedNormal",
      "tensorflow_core.python.ops.init_ops.UniformUnitScaling",
      "tensorflow_core.python.ops.init_ops.VarianceScaling",
      "tensorflow_core.python.ops.init_ops.Zeros",
      "tensorflow_core.python.ops.init_ops.constant_initializer",
      "tensorflow_core.python.ops.init_ops.convolutional_delta_orthogonal",
      "tensorflow_core.python.ops.init_ops.convolutional_orthogonal_1d",
      "tensorflow_core.python.ops.init_ops.convolutional_orthogonal_2d",
      "tensorflow_core.python.ops.init_ops.convolutional_orthogonal_3d",
      "tensorflow_core.python.ops.init_ops.glorot_normal_initializer",
      "tensorflow_core.python.ops.init_ops.glorot_uniform_initializer",
      "tensorflow_core.python.ops.init_ops.he_normal",
      "tensorflow_core.python.ops.init_ops.he_uniform",
      "tensorflow_core.python.ops.init_ops.identity_initializer",
      "tensorflow_core.python.ops.init_ops.lecun_normal",
      "tensorflow_core.python.ops.init_ops.lecun_uniform",
      "tensorflow_core.python.ops.init_ops.ones_initializer",
      "tensorflow_core.python.ops.init_ops.orthogonal_initializer",
      "tensorflow_core.python.ops.init_ops.random_normal_initializer",
      "tensorflow_core.python.ops.init_ops.random_uniform_initializer",
      "tensorflow_core.python.ops.init_ops.truncated_normal_initializer",
      "tensorflow_core.python.ops.init_ops.uniform_unit_scaling_initializer",
      "tensorflow_core.python.ops.init_ops.variance_scaling_initializer",
      "tensorflow_core.python.ops.init_ops.zeros_initializer"
    ],
    "tensorflow_core/python/ops/init_ops_v2.py": [
      "tensorflow_core.python.ops.init_ops_v2.Constant",
      "tensorflow_core.python.ops.init_ops_v2.GlorotNormal",
      "tensorflow_core.python.ops.init_ops_v2.GlorotUniform",
      "tensorflow_core.python.ops.init_ops_v2.Identity",
      "tensorflow_core.python.ops.init_ops_v2.Initializer",
      "tensorflow_core.python.ops.init_ops_v2.Ones",
      "tensorflow_core.python.ops.init_ops_v2.Orthogonal",
      "tensorflow_core.python.ops.init_ops_v2.RandomNormal",
      "tensorflow_core.python.ops.init_ops_v2.RandomUniform",
      "tensorflow_core.python.ops.init_ops_v2.TruncatedNormal",
      "tensorflow_core.python.ops.init_ops_v2.VarianceScaling",
      "tensorflow_core.python.ops.init_ops_v2.Zeros",
      "tensorflow_core.python.ops.init_ops_v2.constant",
      "tensorflow_core.python.ops.init_ops_v2.constant_initializer",
      "tensorflow_core.python.ops.init_ops_v2.glorot_normal",
      "tensorflow_core.python.ops.init_ops_v2.glorot_normal_initializer",
      "tensorflow_core.python.ops.init_ops_v2.glorot_uniform",
      "tensorflow_core.python.ops.init_ops_v2.glorot_uniform_initializer",
      "tensorflow_core.python.ops.init_ops_v2.he_normal",
      "tensorflow_core.python.ops.init_ops_v2.he_uniform",
      "tensorflow_core.python.ops.init_ops_v2.identity",
      "tensorflow_core.python.ops.init_ops_v2.identity_initializer",
      "tensorflow_core.python.ops.init_ops_v2.lecun_normal",
      "tensorflow_core.python.ops.init_ops_v2.lecun_uniform",
      "tensorflow_core.python.ops.init_ops_v2.normal",
      "tensorflow_core.python.ops.init_ops_v2.one",
      "tensorflow_core.python.ops.init_ops_v2.ones",
      "tensorflow_core.python.ops.init_ops_v2.ones_initializer",
      "tensorflow_core.python.ops.init_ops_v2.orthogonal",
      "tensorflow_core.python.ops.init_ops_v2.orthogonal_initializer",
      "tensorflow_core.python.ops.init_ops_v2.random_normal",
      "tensorflow_core.python.ops.init_ops_v2.random_normal_initializer",
      "tensorflow_core.python.ops.init_ops_v2.random_uniform",
      "tensorflow_core.python.ops.init_ops_v2.random_uniform_initializer",
      "tensorflow_core.python.ops.init_ops_v2.truncated_normal",
      "tensorflow_core.python.ops.init_ops_v2.truncated_normal_initializer",
      "tensorflow_core.python.ops.init_ops_v2.uniform",
      "tensorflow_core.python.ops.init_ops_v2.variance_scaling_initializer",
      "tensorflow_core.python.ops.init_ops_v2.zero",
      "tensorflow_core.python.ops.init_ops_v2.zeros",
      "tensorflow_core.python.ops.init_ops_v2.zeros_initializer"
    ],
    "tensorflow_core/python/ops/initializers_ns.py": [
      "tensorflow_core.python.ops.initializers_ns.constant",
      "tensorflow_core.python.ops.initializers_ns.global_variables",
      "tensorflow_core.python.ops.initializers_ns.identity",
      "tensorflow_core.python.ops.initializers_ns.local_variables",
      "tensorflow_core.python.ops.initializers_ns.ones",
      "tensorflow_core.python.ops.initializers_ns.orthogonal",
      "tensorflow_core.python.ops.initializers_ns.random_normal",
      "tensorflow_core.python.ops.initializers_ns.random_uniform",
      "tensorflow_core.python.ops.initializers_ns.truncated_normal",
      "tensorflow_core.python.ops.initializers_ns.uniform_unit_scaling",
      "tensorflow_core.python.ops.initializers_ns.variables",
      "tensorflow_core.python.ops.initializers_ns.variance_scaling",
      "tensorflow_core.python.ops.initializers_ns.zeros"
    ],
    "tensorflow_core/python/ops/inplace_ops.py": [
      "tensorflow_core.python.ops.inplace_ops.alias_inplace_add",
      "tensorflow_core.python.ops.inplace_ops.alias_inplace_sub",
      "tensorflow_core.python.ops.inplace_ops.alias_inplace_update",
      "tensorflow_core.python.ops.inplace_ops.empty",
      "tensorflow_core.python.ops.inplace_ops.empty_like",
      "tensorflow_core.python.ops.inplace_ops.inplace_add",
      "tensorflow_core.python.ops.inplace_ops.inplace_sub",
      "tensorflow_core.python.ops.inplace_ops.inplace_update"
    ],
    "tensorflow_core/python/ops/io_ops.py": [
      "tensorflow_core.python.ops.io_ops.FixedLengthRecordReader",
      "tensorflow_core.python.ops.io_ops.IdentityReader",
      "tensorflow_core.python.ops.io_ops.LMDBReader",
      "tensorflow_core.python.ops.io_ops.ReaderBase",
      "tensorflow_core.python.ops.io_ops.TFRecordReader",
      "tensorflow_core.python.ops.io_ops.TextLineReader",
      "tensorflow_core.python.ops.io_ops.WholeFileReader"
    ],
    "tensorflow_core/python/ops/linalg/__init__.py": [],
    "tensorflow_core/python/ops/linalg/adjoint_registrations.py": [],
    "tensorflow_core/python/ops/linalg/cholesky_registrations.py": [],
    "tensorflow_core/python/ops/linalg/inverse_registrations.py": [],
    "tensorflow_core/python/ops/linalg/linalg.py": [],
    "tensorflow_core/python/ops/linalg/linalg_impl.py": [
      "tensorflow_core.python.ops.linalg.linalg_impl.adjoint",
      "tensorflow_core.python.ops.linalg.linalg_impl.band_part",
      "tensorflow_core.python.ops.linalg.linalg_impl.cholesky",
      "tensorflow_core.python.ops.linalg.linalg_impl.cholesky_solve",
      "tensorflow_core.python.ops.linalg.linalg_impl.det",
      "tensorflow_core.python.ops.linalg.linalg_impl.diag",
      "tensorflow_core.python.ops.linalg.linalg_impl.diag_part",
      "tensorflow_core.python.ops.linalg.linalg_impl.eigh",
      "tensorflow_core.python.ops.linalg.linalg_impl.eigvalsh",
      "tensorflow_core.python.ops.linalg.linalg_impl.einsum",
      "tensorflow_core.python.ops.linalg.linalg_impl.eye",
      "tensorflow_core.python.ops.linalg.linalg_impl.inv",
      "tensorflow_core.python.ops.linalg.linalg_impl.logdet",
      "tensorflow_core.python.ops.linalg.linalg_impl.logm",
      "tensorflow_core.python.ops.linalg.linalg_impl.lstsq",
      "tensorflow_core.python.ops.linalg.linalg_impl.lu",
      "tensorflow_core.python.ops.linalg.linalg_impl.matrix_exponential",
      "tensorflow_core.python.ops.linalg.linalg_impl.matrix_rank",
      "tensorflow_core.python.ops.linalg.linalg_impl.norm",
      "tensorflow_core.python.ops.linalg.linalg_impl.pinv",
      "tensorflow_core.python.ops.linalg.linalg_impl.qr",
      "tensorflow_core.python.ops.linalg.linalg_impl.set_diag",
      "tensorflow_core.python.ops.linalg.linalg_impl.slogdet",
      "tensorflow_core.python.ops.linalg.linalg_impl.solve",
      "tensorflow_core.python.ops.linalg.linalg_impl.sqrtm",
      "tensorflow_core.python.ops.linalg.linalg_impl.svd",
      "tensorflow_core.python.ops.linalg.linalg_impl.tensordot",
      "tensorflow_core.python.ops.linalg.linalg_impl.trace",
      "tensorflow_core.python.ops.linalg.linalg_impl.transpose",
      "tensorflow_core.python.ops.linalg.linalg_impl.triangular_solve",
      "tensorflow_core.python.ops.linalg.linalg_impl.tridiagonal_matmul",
      "tensorflow_core.python.ops.linalg.linalg_impl.tridiagonal_solve"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator.py": [
      "tensorflow_core.python.ops.linalg.linear_operator.LinearOperator"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_addition.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_addition.add_operators"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_adjoint.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_adjoint.LinearOperatorAdjoint"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_algebra.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.RegisterAdjoint",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.RegisterCholesky",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.RegisterInverse",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.RegisterMatmul",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.RegisterSolve",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.adjoint",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.cholesky",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.inverse",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.matmul",
      "tensorflow_core.python.ops.linalg.linear_operator_algebra.solve"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_block_diag.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_block_diag.LinearOperatorBlockDiag"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_circulant.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_circulant.LinearOperatorCirculant",
      "tensorflow_core.python.ops.linalg.linear_operator_circulant.LinearOperatorCirculant2D",
      "tensorflow_core.python.ops.linalg.linear_operator_circulant.LinearOperatorCirculant3D"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_composition.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_composition.LinearOperatorComposition"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_diag.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_diag.LinearOperatorDiag"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_full_matrix.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_full_matrix.LinearOperatorFullMatrix"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_householder.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_householder.LinearOperatorHouseholder"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_identity.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_identity.BaseLinearOperatorIdentity",
      "tensorflow_core.python.ops.linalg.linear_operator_identity.LinearOperatorIdentity",
      "tensorflow_core.python.ops.linalg.linear_operator_identity.LinearOperatorScaledIdentity"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_inversion.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_inversion.LinearOperatorInversion"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_kronecker.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_kronecker.LinearOperatorKronecker"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_low_rank_update.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_low_rank_update.LinearOperatorLowRankUpdate"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_lower_triangular.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_lower_triangular.LinearOperatorLowerTriangular"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_test_util.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.CheckTapeSafeSkipOptions",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.LinearOperatorDerivedClassTest",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.NonSquareLinearOperatorDerivedClassTest",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.OperatorShapesInfo",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.SquareLinearOperatorDerivedClassTest",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.add_tests",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.random_normal",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.random_normal_correlated_columns",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.random_positive_definite_matrix",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.random_sign_uniform",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.random_tril_matrix",
      "tensorflow_core.python.ops.linalg.linear_operator_test_util.random_uniform"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_toeplitz.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_toeplitz.LinearOperatorToeplitz"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_util.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_util.assert_compatible_matrix_dimensions",
      "tensorflow_core.python.ops.linalg.linear_operator_util.assert_is_batch_matrix",
      "tensorflow_core.python.ops.linalg.linear_operator_util.assert_no_entries_with_modulus_zero",
      "tensorflow_core.python.ops.linalg.linear_operator_util.assert_not_ref_type",
      "tensorflow_core.python.ops.linalg.linear_operator_util.assert_zero_imag_part",
      "tensorflow_core.python.ops.linalg.linear_operator_util.base_dtype",
      "tensorflow_core.python.ops.linalg.linear_operator_util.broadcast_matrix_batch_dims",
      "tensorflow_core.python.ops.linalg.linear_operator_util.cholesky_solve_with_broadcast",
      "tensorflow_core.python.ops.linalg.linear_operator_util.convert_nonref_to_tensor",
      "tensorflow_core.python.ops.linalg.linear_operator_util.dtype_name",
      "tensorflow_core.python.ops.linalg.linear_operator_util.is_ref",
      "tensorflow_core.python.ops.linalg.linear_operator_util.matrix_solve_with_broadcast",
      "tensorflow_core.python.ops.linalg.linear_operator_util.matrix_triangular_solve_with_broadcast",
      "tensorflow_core.python.ops.linalg.linear_operator_util.shape_tensor",
      "tensorflow_core.python.ops.linalg.linear_operator_util.use_operator_or_provided_hint_unless_contradicting"
    ],
    "tensorflow_core/python/ops/linalg/linear_operator_zeros.py": [
      "tensorflow_core.python.ops.linalg.linear_operator_zeros.LinearOperatorZeros"
    ],
    "tensorflow_core/python/ops/linalg/matmul_registrations.py": [],
    "tensorflow_core/python/ops/linalg/registrations_util.py": [
      "tensorflow_core.python.ops.linalg.registrations_util.combined_commuting_positive_definite_hint",
      "tensorflow_core.python.ops.linalg.registrations_util.combined_commuting_self_adjoint_hint",
      "tensorflow_core.python.ops.linalg.registrations_util.combined_non_singular_hint",
      "tensorflow_core.python.ops.linalg.registrations_util.is_square"
    ],
    "tensorflow_core/python/ops/linalg/solve_registrations.py": [],
    "tensorflow_core/python/ops/linalg_grad.py": [],
    "tensorflow_core/python/ops/linalg_ops.py": [
      "tensorflow_core.python.ops.linalg_ops.cholesky_solve",
      "tensorflow_core.python.ops.linalg_ops.eye",
      "tensorflow_core.python.ops.linalg_ops.matrix_solve_ls",
      "tensorflow_core.python.ops.linalg_ops.norm",
      "tensorflow_core.python.ops.linalg_ops.norm_v2",
      "tensorflow_core.python.ops.linalg_ops.self_adjoint_eig",
      "tensorflow_core.python.ops.linalg_ops.self_adjoint_eigvals",
      "tensorflow_core.python.ops.linalg_ops.svd"
    ],
    "tensorflow_core/python/ops/linalg_ops_impl.py": [
      "tensorflow_core.python.ops.linalg_ops_impl.eye"
    ],
    "tensorflow_core/python/ops/list_ops.py": [
      "tensorflow_core.python.ops.list_ops.control_flow_ops",
      "tensorflow_core.python.ops.list_ops.empty_tensor_list",
      "tensorflow_core.python.ops.list_ops.tensor_list_concat",
      "tensorflow_core.python.ops.list_ops.tensor_list_from_tensor",
      "tensorflow_core.python.ops.list_ops.tensor_list_gather",
      "tensorflow_core.python.ops.list_ops.tensor_list_get_item",
      "tensorflow_core.python.ops.list_ops.tensor_list_pop_back",
      "tensorflow_core.python.ops.list_ops.tensor_list_reserve",
      "tensorflow_core.python.ops.list_ops.tensor_list_scatter",
      "tensorflow_core.python.ops.list_ops.tensor_list_set_item",
      "tensorflow_core.python.ops.list_ops.tensor_list_split",
      "tensorflow_core.python.ops.list_ops.tensor_list_stack"
    ],
    "tensorflow_core/python/ops/logging_ops.py": [
      "tensorflow_core.python.ops.logging_ops.Print",
      "tensorflow_core.python.ops.logging_ops.audio_summary",
      "tensorflow_core.python.ops.logging_ops.get_summary_op",
      "tensorflow_core.python.ops.logging_ops.histogram_summary",
      "tensorflow_core.python.ops.logging_ops.image_summary",
      "tensorflow_core.python.ops.logging_ops.merge_all_summaries",
      "tensorflow_core.python.ops.logging_ops.merge_summary",
      "tensorflow_core.python.ops.logging_ops.print_v2",
      "tensorflow_core.python.ops.logging_ops.scalar_summary"
    ],
    "tensorflow_core/python/ops/lookup_ops.py": [
      "tensorflow_core.python.ops.lookup_ops.DenseHashTable",
      "tensorflow_core.python.ops.lookup_ops.FastHashSpec",
      "tensorflow_core.python.ops.lookup_ops.HashTable",
      "tensorflow_core.python.ops.lookup_ops.HasherSpec",
      "tensorflow_core.python.ops.lookup_ops.IdTableWithHashBuckets",
      "tensorflow_core.python.ops.lookup_ops.InitializableLookupTableBase",
      "tensorflow_core.python.ops.lookup_ops.InitializableLookupTableBaseV1",
      "tensorflow_core.python.ops.lookup_ops.KeyValueTensorInitializer",
      "tensorflow_core.python.ops.lookup_ops.LookupInterface",
      "tensorflow_core.python.ops.lookup_ops.MutableHashTable",
      "tensorflow_core.python.ops.lookup_ops.StaticHashTable",
      "tensorflow_core.python.ops.lookup_ops.StaticHashTableV1",
      "tensorflow_core.python.ops.lookup_ops.StaticVocabularyTable",
      "tensorflow_core.python.ops.lookup_ops.StaticVocabularyTableV1",
      "tensorflow_core.python.ops.lookup_ops.StrongHashSpec",
      "tensorflow_core.python.ops.lookup_ops.TableInitializerBase",
      "tensorflow_core.python.ops.lookup_ops.TextFileIdTableInitializer",
      "tensorflow_core.python.ops.lookup_ops.TextFileIndex",
      "tensorflow_core.python.ops.lookup_ops.TextFileInitializer",
      "tensorflow_core.python.ops.lookup_ops.TextFileStringTableInitializer",
      "tensorflow_core.python.ops.lookup_ops.index_table_from_file",
      "tensorflow_core.python.ops.lookup_ops.index_table_from_tensor",
      "tensorflow_core.python.ops.lookup_ops.index_to_string_table_from_file",
      "tensorflow_core.python.ops.lookup_ops.index_to_string_table_from_tensor",
      "tensorflow_core.python.ops.lookup_ops.initialize_all_tables",
      "tensorflow_core.python.ops.lookup_ops.tables_initializer"
    ],
    "tensorflow_core/python/ops/losses/__init__.py": [],
    "tensorflow_core/python/ops/losses/loss_reduction.py": [
      "tensorflow_core.python.ops.losses.loss_reduction.ReductionV2"
    ],
    "tensorflow_core/python/ops/losses/losses.py": [],
    "tensorflow_core/python/ops/losses/losses_impl.py": [
      "tensorflow_core.python.ops.losses.losses_impl.Reduction",
      "tensorflow_core.python.ops.losses.losses_impl.absolute_difference",
      "tensorflow_core.python.ops.losses.losses_impl.compute_weighted_loss",
      "tensorflow_core.python.ops.losses.losses_impl.cosine_distance",
      "tensorflow_core.python.ops.losses.losses_impl.hinge_loss",
      "tensorflow_core.python.ops.losses.losses_impl.huber_loss",
      "tensorflow_core.python.ops.losses.losses_impl.log_loss",
      "tensorflow_core.python.ops.losses.losses_impl.mean_pairwise_squared_error",
      "tensorflow_core.python.ops.losses.losses_impl.mean_squared_error",
      "tensorflow_core.python.ops.losses.losses_impl.sigmoid_cross_entropy",
      "tensorflow_core.python.ops.losses.losses_impl.softmax_cross_entropy",
      "tensorflow_core.python.ops.losses.losses_impl.sparse_softmax_cross_entropy"
    ],
    "tensorflow_core/python/ops/losses/util.py": [
      "tensorflow_core.python.ops.losses.util.add_loss",
      "tensorflow_core.python.ops.losses.util.check_per_example_loss_rank",
      "tensorflow_core.python.ops.losses.util.get_losses",
      "tensorflow_core.python.ops.losses.util.get_regularization_loss",
      "tensorflow_core.python.ops.losses.util.get_regularization_losses",
      "tensorflow_core.python.ops.losses.util.get_total_loss",
      "tensorflow_core.python.ops.losses.util.scale_losses_by_sample_weight",
      "tensorflow_core.python.ops.losses.util.squeeze_or_expand_dimensions"
    ],
    "tensorflow_core/python/ops/manip_grad.py": [],
    "tensorflow_core/python/ops/manip_ops.py": [
      "tensorflow_core.python.ops.manip_ops.roll"
    ],
    "tensorflow_core/python/ops/map_fn.py": [
      "tensorflow_core.python.ops.map_fn.map_fn"
    ],
    "tensorflow_core/python/ops/math_grad.py": [
      "tensorflow_core.python.ops.math_grad.SmartBroadcastGradientArgs"
    ],
    "tensorflow_core/python/ops/math_ops.py": [
      "tensorflow_core.python.ops.math_ops.DivideDelegateWithName",
      "tensorflow_core.python.ops.math_ops.abs",
      "tensorflow_core.python.ops.math_ops.accumulate_n",
      "tensorflow_core.python.ops.math_ops.add_n",
      "tensorflow_core.python.ops.math_ops.angle",
      "tensorflow_core.python.ops.math_ops.arg_max",
      "tensorflow_core.python.ops.math_ops.arg_min",
      "tensorflow_core.python.ops.math_ops.argmax",
      "tensorflow_core.python.ops.math_ops.argmax_v2",
      "tensorflow_core.python.ops.math_ops.argmin",
      "tensorflow_core.python.ops.math_ops.argmin_v2",
      "tensorflow_core.python.ops.math_ops.bincount",
      "tensorflow_core.python.ops.math_ops.bincount_v1",
      "tensorflow_core.python.ops.math_ops.cast",
      "tensorflow_core.python.ops.math_ops.complex",
      "tensorflow_core.python.ops.math_ops.conj",
      "tensorflow_core.python.ops.math_ops.count_nonzero",
      "tensorflow_core.python.ops.math_ops.count_nonzero_v2",
      "tensorflow_core.python.ops.math_ops.cumprod",
      "tensorflow_core.python.ops.math_ops.cumsum",
      "tensorflow_core.python.ops.math_ops.cumulative_logsumexp",
      "tensorflow_core.python.ops.math_ops.div",
      "tensorflow_core.python.ops.math_ops.div_no_nan",
      "tensorflow_core.python.ops.math_ops.divide",
      "tensorflow_core.python.ops.math_ops.equal",
      "tensorflow_core.python.ops.math_ops.floor_div",
      "tensorflow_core.python.ops.math_ops.floordiv",
      "tensorflow_core.python.ops.math_ops.floormod",
      "tensorflow_core.python.ops.math_ops.imag",
      "tensorflow_core.python.ops.math_ops.linspace",
      "tensorflow_core.python.ops.math_ops.log_sigmoid",
      "tensorflow_core.python.ops.math_ops.logical_xor",
      "tensorflow_core.python.ops.math_ops.matmul",
      "tensorflow_core.python.ops.math_ops.matvec",
      "tensorflow_core.python.ops.math_ops.mod",
      "tensorflow_core.python.ops.math_ops.multiply",
      "tensorflow_core.python.ops.math_ops.multiply_no_nan",
      "tensorflow_core.python.ops.math_ops.negative",
      "tensorflow_core.python.ops.math_ops.nextafter",
      "tensorflow_core.python.ops.math_ops.not_equal",
      "tensorflow_core.python.ops.math_ops.polyval",
      "tensorflow_core.python.ops.math_ops.pow",
      "tensorflow_core.python.ops.math_ops.range",
      "tensorflow_core.python.ops.math_ops.real",
      "tensorflow_core.python.ops.math_ops.realdiv",
      "tensorflow_core.python.ops.math_ops.reciprocal_no_nan",
      "tensorflow_core.python.ops.math_ops.reduce_all",
      "tensorflow_core.python.ops.math_ops.reduce_all_v1",
      "tensorflow_core.python.ops.math_ops.reduce_any",
      "tensorflow_core.python.ops.math_ops.reduce_any_v1",
      "tensorflow_core.python.ops.math_ops.reduce_euclidean_norm",
      "tensorflow_core.python.ops.math_ops.reduce_logsumexp",
      "tensorflow_core.python.ops.math_ops.reduce_logsumexp_v1",
      "tensorflow_core.python.ops.math_ops.reduce_max",
      "tensorflow_core.python.ops.math_ops.reduce_max_v1",
      "tensorflow_core.python.ops.math_ops.reduce_mean",
      "tensorflow_core.python.ops.math_ops.reduce_mean_v1",
      "tensorflow_core.python.ops.math_ops.reduce_min",
      "tensorflow_core.python.ops.math_ops.reduce_min_v1",
      "tensorflow_core.python.ops.math_ops.reduce_prod",
      "tensorflow_core.python.ops.math_ops.reduce_prod_v1",
      "tensorflow_core.python.ops.math_ops.reduce_std",
      "tensorflow_core.python.ops.math_ops.reduce_sum",
      "tensorflow_core.python.ops.math_ops.reduce_sum_v1",
      "tensorflow_core.python.ops.math_ops.reduce_variance",
      "tensorflow_core.python.ops.math_ops.reduced_shape",
      "tensorflow_core.python.ops.math_ops.round",
      "tensorflow_core.python.ops.math_ops.saturate_cast",
      "tensorflow_core.python.ops.math_ops.scalar_mul",
      "tensorflow_core.python.ops.math_ops.scalar_mul_v2",
      "tensorflow_core.python.ops.math_ops.sigmoid",
      "tensorflow_core.python.ops.math_ops.sparse_matmul",
      "tensorflow_core.python.ops.math_ops.sparse_segment_mean",
      "tensorflow_core.python.ops.math_ops.sparse_segment_mean_v2",
      "tensorflow_core.python.ops.math_ops.sparse_segment_sqrt_n",
      "tensorflow_core.python.ops.math_ops.sparse_segment_sqrt_n_v2",
      "tensorflow_core.python.ops.math_ops.sparse_segment_sum",
      "tensorflow_core.python.ops.math_ops.sparse_segment_sum_v2",
      "tensorflow_core.python.ops.math_ops.subtract",
      "tensorflow_core.python.ops.math_ops.tensor_equals",
      "tensorflow_core.python.ops.math_ops.tensor_not_equals",
      "tensorflow_core.python.ops.math_ops.tensordot",
      "tensorflow_core.python.ops.math_ops.to_bfloat16",
      "tensorflow_core.python.ops.math_ops.to_complex128",
      "tensorflow_core.python.ops.math_ops.to_complex64",
      "tensorflow_core.python.ops.math_ops.to_double",
      "tensorflow_core.python.ops.math_ops.to_float",
      "tensorflow_core.python.ops.math_ops.to_int32",
      "tensorflow_core.python.ops.math_ops.to_int64",
      "tensorflow_core.python.ops.math_ops.trace",
      "tensorflow_core.python.ops.math_ops.truediv",
      "tensorflow_core.python.ops.math_ops.truncatediv",
      "tensorflow_core.python.ops.math_ops.truncatemod",
      "tensorflow_core.python.ops.math_ops.unsorted_segment_mean",
      "tensorflow_core.python.ops.math_ops.unsorted_segment_sqrt_n"
    ],
    "tensorflow_core/python/ops/metrics.py": [],
    "tensorflow_core/python/ops/metrics_impl.py": [
      "tensorflow_core.python.ops.metrics_impl.accuracy",
      "tensorflow_core.python.ops.metrics_impl.auc",
      "tensorflow_core.python.ops.metrics_impl.average_precision_at_k",
      "tensorflow_core.python.ops.metrics_impl.false_negatives",
      "tensorflow_core.python.ops.metrics_impl.false_negatives_at_thresholds",
      "tensorflow_core.python.ops.metrics_impl.false_positives",
      "tensorflow_core.python.ops.metrics_impl.false_positives_at_thresholds",
      "tensorflow_core.python.ops.metrics_impl.mean",
      "tensorflow_core.python.ops.metrics_impl.mean_absolute_error",
      "tensorflow_core.python.ops.metrics_impl.mean_cosine_distance",
      "tensorflow_core.python.ops.metrics_impl.mean_iou",
      "tensorflow_core.python.ops.metrics_impl.mean_per_class_accuracy",
      "tensorflow_core.python.ops.metrics_impl.mean_relative_error",
      "tensorflow_core.python.ops.metrics_impl.mean_squared_error",
      "tensorflow_core.python.ops.metrics_impl.mean_tensor",
      "tensorflow_core.python.ops.metrics_impl.metric_variable",
      "tensorflow_core.python.ops.metrics_impl.percentage_below",
      "tensorflow_core.python.ops.metrics_impl.precision",
      "tensorflow_core.python.ops.metrics_impl.precision_at_k",
      "tensorflow_core.python.ops.metrics_impl.precision_at_thresholds",
      "tensorflow_core.python.ops.metrics_impl.precision_at_top_k",
      "tensorflow_core.python.ops.metrics_impl.recall",
      "tensorflow_core.python.ops.metrics_impl.recall_at_k",
      "tensorflow_core.python.ops.metrics_impl.recall_at_thresholds",
      "tensorflow_core.python.ops.metrics_impl.recall_at_top_k",
      "tensorflow_core.python.ops.metrics_impl.root_mean_squared_error",
      "tensorflow_core.python.ops.metrics_impl.sensitivity_at_specificity",
      "tensorflow_core.python.ops.metrics_impl.sparse_average_precision_at_k",
      "tensorflow_core.python.ops.metrics_impl.sparse_precision_at_k",
      "tensorflow_core.python.ops.metrics_impl.specificity_at_sensitivity",
      "tensorflow_core.python.ops.metrics_impl.true_negatives",
      "tensorflow_core.python.ops.metrics_impl.true_negatives_at_thresholds",
      "tensorflow_core.python.ops.metrics_impl.true_positives",
      "tensorflow_core.python.ops.metrics_impl.true_positives_at_thresholds"
    ],
    "tensorflow_core/python/ops/nccl_ops.py": [
      "tensorflow_core.python.ops.nccl_ops.all_max",
      "tensorflow_core.python.ops.nccl_ops.all_min",
      "tensorflow_core.python.ops.nccl_ops.all_prod",
      "tensorflow_core.python.ops.nccl_ops.all_sum",
      "tensorflow_core.python.ops.nccl_ops.broadcast",
      "tensorflow_core.python.ops.nccl_ops.reduce_sum"
    ],
    "tensorflow_core/python/ops/nn.py": [],
    "tensorflow_core/python/ops/nn_grad.py": [],
    "tensorflow_core/python/ops/nn_impl.py": [
      "tensorflow_core.python.ops.nn_impl.batch_norm_with_global_normalization",
      "tensorflow_core.python.ops.nn_impl.batch_norm_with_global_normalization_v2",
      "tensorflow_core.python.ops.nn_impl.batch_normalization",
      "tensorflow_core.python.ops.nn_impl.compute_average_loss",
      "tensorflow_core.python.ops.nn_impl.depthwise_conv2d",
      "tensorflow_core.python.ops.nn_impl.depthwise_conv2d_v2",
      "tensorflow_core.python.ops.nn_impl.fused_batch_norm",
      "tensorflow_core.python.ops.nn_impl.l2_normalize",
      "tensorflow_core.python.ops.nn_impl.l2_normalize_v2",
      "tensorflow_core.python.ops.nn_impl.log_poisson_loss",
      "tensorflow_core.python.ops.nn_impl.moments",
      "tensorflow_core.python.ops.nn_impl.moments_v2",
      "tensorflow_core.python.ops.nn_impl.nce_loss",
      "tensorflow_core.python.ops.nn_impl.nce_loss_v2",
      "tensorflow_core.python.ops.nn_impl.normalize",
      "tensorflow_core.python.ops.nn_impl.normalize_moments",
      "tensorflow_core.python.ops.nn_impl.relu_layer",
      "tensorflow_core.python.ops.nn_impl.sampled_softmax_loss",
      "tensorflow_core.python.ops.nn_impl.sampled_softmax_loss_v2",
      "tensorflow_core.python.ops.nn_impl.scale_regularization_loss",
      "tensorflow_core.python.ops.nn_impl.separable_conv2d",
      "tensorflow_core.python.ops.nn_impl.separable_conv2d_v2",
      "tensorflow_core.python.ops.nn_impl.sigmoid_cross_entropy_with_logits",
      "tensorflow_core.python.ops.nn_impl.sigmoid_cross_entropy_with_logits_v2",
      "tensorflow_core.python.ops.nn_impl.sufficient_statistics",
      "tensorflow_core.python.ops.nn_impl.sufficient_statistics_v2",
      "tensorflow_core.python.ops.nn_impl.swish",
      "tensorflow_core.python.ops.nn_impl.weighted_cross_entropy_with_logits",
      "tensorflow_core.python.ops.nn_impl.weighted_cross_entropy_with_logits_v2",
      "tensorflow_core.python.ops.nn_impl.weighted_moments",
      "tensorflow_core.python.ops.nn_impl.weighted_moments_v2",
      "tensorflow_core.python.ops.nn_impl.zero_fraction"
    ],
    "tensorflow_core/python/ops/nn_ops.py": [
      "tensorflow_core.python.ops.nn_ops.CONV_TRANSPOSE_OPS",
      "tensorflow_core.python.ops.nn_ops.Convolution",
      "tensorflow_core.python.ops.nn_ops.atrous_conv2d",
      "tensorflow_core.python.ops.nn_ops.atrous_conv2d_transpose",
      "tensorflow_core.python.ops.nn_ops.avg_pool",
      "tensorflow_core.python.ops.nn_ops.avg_pool1d",
      "tensorflow_core.python.ops.nn_ops.avg_pool2d",
      "tensorflow_core.python.ops.nn_ops.avg_pool3d",
      "tensorflow_core.python.ops.nn_ops.avg_pool_v2",
      "tensorflow_core.python.ops.nn_ops.bias_add",
      "tensorflow_core.python.ops.nn_ops.bias_add_v1",
      "tensorflow_core.python.ops.nn_ops.conv1d",
      "tensorflow_core.python.ops.nn_ops.conv1d_transpose",
      "tensorflow_core.python.ops.nn_ops.conv1d_v2",
      "tensorflow_core.python.ops.nn_ops.conv2d",
      "tensorflow_core.python.ops.nn_ops.conv2d_backprop_filter",
      "tensorflow_core.python.ops.nn_ops.conv2d_backprop_input",
      "tensorflow_core.python.ops.nn_ops.conv2d_transpose",
      "tensorflow_core.python.ops.nn_ops.conv2d_transpose_v2",
      "tensorflow_core.python.ops.nn_ops.conv2d_v2",
      "tensorflow_core.python.ops.nn_ops.conv3d_transpose",
      "tensorflow_core.python.ops.nn_ops.conv3d_transpose_v2",
      "tensorflow_core.python.ops.nn_ops.conv3d_v1",
      "tensorflow_core.python.ops.nn_ops.conv3d_v2",
      "tensorflow_core.python.ops.nn_ops.conv_transpose",
      "tensorflow_core.python.ops.nn_ops.convolution",
      "tensorflow_core.python.ops.nn_ops.convolution_internal",
      "tensorflow_core.python.ops.nn_ops.convolution_v2",
      "tensorflow_core.python.ops.nn_ops.crelu",
      "tensorflow_core.python.ops.nn_ops.crelu_v2",
      "tensorflow_core.python.ops.nn_ops.dilation2d_v1",
      "tensorflow_core.python.ops.nn_ops.dilation2d_v2",
      "tensorflow_core.python.ops.nn_ops.dropout",
      "tensorflow_core.python.ops.nn_ops.dropout_v2",
      "tensorflow_core.python.ops.nn_ops.erosion2d",
      "tensorflow_core.python.ops.nn_ops.erosion2d_v2",
      "tensorflow_core.python.ops.nn_ops.fractional_avg_pool",
      "tensorflow_core.python.ops.nn_ops.fractional_avg_pool_v2",
      "tensorflow_core.python.ops.nn_ops.fractional_max_pool",
      "tensorflow_core.python.ops.nn_ops.fractional_max_pool_v2",
      "tensorflow_core.python.ops.nn_ops.in_top_k",
      "tensorflow_core.python.ops.nn_ops.in_top_k_v2",
      "tensorflow_core.python.ops.nn_ops.leaky_relu",
      "tensorflow_core.python.ops.nn_ops.local_response_normalization",
      "tensorflow_core.python.ops.nn_ops.log_softmax",
      "tensorflow_core.python.ops.nn_ops.log_softmax_v2",
      "tensorflow_core.python.ops.nn_ops.max_pool",
      "tensorflow_core.python.ops.nn_ops.max_pool1d",
      "tensorflow_core.python.ops.nn_ops.max_pool2d",
      "tensorflow_core.python.ops.nn_ops.max_pool3d",
      "tensorflow_core.python.ops.nn_ops.max_pool_v2",
      "tensorflow_core.python.ops.nn_ops.max_pool_with_argmax_v1",
      "tensorflow_core.python.ops.nn_ops.max_pool_with_argmax_v2",
      "tensorflow_core.python.ops.nn_ops.nth_element",
      "tensorflow_core.python.ops.nn_ops.pool",
      "tensorflow_core.python.ops.nn_ops.pool_v2",
      "tensorflow_core.python.ops.nn_ops.relu6",
      "tensorflow_core.python.ops.nn_ops.softmax",
      "tensorflow_core.python.ops.nn_ops.softmax_cross_entropy_with_logits",
      "tensorflow_core.python.ops.nn_ops.softmax_cross_entropy_with_logits_v2",
      "tensorflow_core.python.ops.nn_ops.softmax_cross_entropy_with_logits_v2_helper",
      "tensorflow_core.python.ops.nn_ops.softmax_v2",
      "tensorflow_core.python.ops.nn_ops.sparse_softmax_cross_entropy_with_logits",
      "tensorflow_core.python.ops.nn_ops.sparse_softmax_cross_entropy_with_logits_v2",
      "tensorflow_core.python.ops.nn_ops.top_k",
      "tensorflow_core.python.ops.nn_ops.with_space_to_batch",
      "tensorflow_core.python.ops.nn_ops.xw_plus_b",
      "tensorflow_core.python.ops.nn_ops.xw_plus_b_v1"
    ],
    "tensorflow_core/python/ops/numerics.py": [
      "tensorflow_core.python.ops.numerics.add_check_numerics_ops",
      "tensorflow_core.python.ops.numerics.verify_tensor_all_finite",
      "tensorflow_core.python.ops.numerics.verify_tensor_all_finite_v2"
    ],
    "tensorflow_core/python/ops/op_selector.py": [
      "tensorflow_core.python.ops.op_selector.UnliftableError",
      "tensorflow_core.python.ops.op_selector.check_graphs",
      "tensorflow_core.python.ops.op_selector.concatenate_unique",
      "tensorflow_core.python.ops.op_selector.get_backward_walk_ops",
      "tensorflow_core.python.ops.op_selector.get_consuming_ops",
      "tensorflow_core.python.ops.op_selector.get_generating_ops",
      "tensorflow_core.python.ops.op_selector.get_tensors",
      "tensorflow_core.python.ops.op_selector.get_unique_graph",
      "tensorflow_core.python.ops.op_selector.graph_inputs",
      "tensorflow_core.python.ops.op_selector.is_differentiable",
      "tensorflow_core.python.ops.op_selector.is_iterable",
      "tensorflow_core.python.ops.op_selector.make_list_of_op",
      "tensorflow_core.python.ops.op_selector.make_list_of_t",
      "tensorflow_core.python.ops.op_selector.map_subgraph"
    ],
    "tensorflow_core/python/ops/optional_grad.py": [],
    "tensorflow_core/python/ops/parallel_for/__init__.py": [],
    "tensorflow_core/python/ops/parallel_for/control_flow_ops.py": [
      "tensorflow_core.python.ops.parallel_for.control_flow_ops.PFOR_CONFIG_ARG",
      "tensorflow_core.python.ops.parallel_for.control_flow_ops.for_loop",
      "tensorflow_core.python.ops.parallel_for.control_flow_ops.pfor",
      "tensorflow_core.python.ops.parallel_for.control_flow_ops.vectorized_map"
    ],
    "tensorflow_core/python/ops/parallel_for/gradients.py": [
      "tensorflow_core.python.ops.parallel_for.gradients.batch_jacobian",
      "tensorflow_core.python.ops.parallel_for.gradients.jacobian"
    ],
    "tensorflow_core/python/ops/parallel_for/pfor.py": [
      "tensorflow_core.python.ops.parallel_for.pfor.PFor",
      "tensorflow_core.python.ops.parallel_for.pfor.PForConfig",
      "tensorflow_core.python.ops.parallel_for.pfor.RegisterPFor",
      "tensorflow_core.python.ops.parallel_for.pfor.RegisterPForWithArgs",
      "tensorflow_core.python.ops.parallel_for.pfor.WhileOp",
      "tensorflow_core.python.ops.parallel_for.pfor.WrappedTensor",
      "tensorflow_core.python.ops.parallel_for.pfor.passthrough_stateful_ops",
      "tensorflow_core.python.ops.parallel_for.pfor.wrap"
    ],
    "tensorflow_core/python/ops/parallel_for/test_util.py": [
      "tensorflow_core.python.ops.parallel_for.test_util.PForTestCase"
    ],
    "tensorflow_core/python/ops/parsing_ops.py": [
      "tensorflow_core.python.ops.parsing_ops.FixedLenFeature",
      "tensorflow_core.python.ops.parsing_ops.FixedLenSequenceFeature",
      "tensorflow_core.python.ops.parsing_ops.SparseFeature",
      "tensorflow_core.python.ops.parsing_ops.VarLenFeature",
      "tensorflow_core.python.ops.parsing_ops.decode_csv",
      "tensorflow_core.python.ops.parsing_ops.decode_csv_v2",
      "tensorflow_core.python.ops.parsing_ops.decode_raw",
      "tensorflow_core.python.ops.parsing_ops.decode_raw_v1",
      "tensorflow_core.python.ops.parsing_ops.parse_example",
      "tensorflow_core.python.ops.parsing_ops.parse_example_v2",
      "tensorflow_core.python.ops.parsing_ops.parse_sequence_example",
      "tensorflow_core.python.ops.parsing_ops.parse_single_example",
      "tensorflow_core.python.ops.parsing_ops.parse_single_example_v2",
      "tensorflow_core.python.ops.parsing_ops.parse_single_example_v2_unoptimized",
      "tensorflow_core.python.ops.parsing_ops.parse_single_sequence_example"
    ],
    "tensorflow_core/python/ops/partitioned_variables.py": [
      "tensorflow_core.python.ops.partitioned_variables.create_partitioned_variables",
      "tensorflow_core.python.ops.partitioned_variables.fixed_size_partitioner",
      "tensorflow_core.python.ops.partitioned_variables.min_max_variable_partitioner",
      "tensorflow_core.python.ops.partitioned_variables.variable_axis_size_partitioner"
    ],
    "tensorflow_core/python/ops/proto_ops.py": [],
    "tensorflow_core/python/ops/ragged/__init__.py": [],
    "tensorflow_core/python/ops/ragged/ragged_array_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_array_ops.boolean_mask",
      "tensorflow_core.python.ops.ragged.ragged_array_ops.expand_dims",
      "tensorflow_core.python.ops.ragged.ragged_array_ops.ragged_one_hot",
      "tensorflow_core.python.ops.ragged.ragged_array_ops.rank",
      "tensorflow_core.python.ops.ragged.ragged_array_ops.size",
      "tensorflow_core.python.ops.ragged.ragged_array_ops.stack_dynamic_partitions",
      "tensorflow_core.python.ops.ragged.ragged_array_ops.tile"
    ],
    "tensorflow_core/python/ops/ragged/ragged_batch_gather_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_batch_gather_ops.batch_gather"
    ],
    "tensorflow_core/python/ops/ragged/ragged_batch_gather_with_default_op.py": [
      "tensorflow_core.python.ops.ragged.ragged_batch_gather_with_default_op.batch_gather_with_default"
    ],
    "tensorflow_core/python/ops/ragged/ragged_concat_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_concat_ops.concat",
      "tensorflow_core.python.ops.ragged.ragged_concat_ops.stack"
    ],
    "tensorflow_core/python/ops/ragged/ragged_config.py": [
      "tensorflow_core.python.ops.ragged.ragged_config.auto_cast_partition_dtype"
    ],
    "tensorflow_core/python/ops/ragged/ragged_conversion_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_conversion_ops.from_sparse",
      "tensorflow_core.python.ops.ragged.ragged_conversion_ops.from_tensor",
      "tensorflow_core.python.ops.ragged.ragged_conversion_ops.ragged_to_dense",
      "tensorflow_core.python.ops.ragged.ragged_conversion_ops.to_sparse",
      "tensorflow_core.python.ops.ragged.ragged_conversion_ops.to_tensor"
    ],
    "tensorflow_core/python/ops/ragged/ragged_dispatch.py": [
      "tensorflow_core.python.ops.ragged.ragged_dispatch.BinaryRaggedElementwiseDispatcher",
      "tensorflow_core.python.ops.ragged.ragged_dispatch.RaggedDispatcher",
      "tensorflow_core.python.ops.ragged.ragged_dispatch.UnaryRaggedElementwiseDispatcher",
      "tensorflow_core.python.ops.ragged.ragged_dispatch.ragged_op_list",
      "tensorflow_core.python.ops.ragged.ragged_dispatch.register_dispatchers"
    ],
    "tensorflow_core/python/ops/ragged/ragged_factory_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_factory_ops.constant",
      "tensorflow_core.python.ops.ragged.ragged_factory_ops.constant_value",
      "tensorflow_core.python.ops.ragged.ragged_factory_ops.placeholder"
    ],
    "tensorflow_core/python/ops/ragged/ragged_functional_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_functional_ops.map_flat_values"
    ],
    "tensorflow_core/python/ops/ragged/ragged_gather_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_gather_ops.gather",
      "tensorflow_core.python.ops.ragged.ragged_gather_ops.gather_nd"
    ],
    "tensorflow_core/python/ops/ragged/ragged_getitem.py": [
      "tensorflow_core.python.ops.ragged.ragged_getitem.ragged_tensor_getitem"
    ],
    "tensorflow_core/python/ops/ragged/ragged_map_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_map_ops.map_fn"
    ],
    "tensorflow_core/python/ops/ragged/ragged_math_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_math_ops.ragged_reduce_aggregate",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.range",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.reduce_all",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.reduce_any",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.reduce_max",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.reduce_mean",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.reduce_min",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.reduce_prod",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.reduce_sum",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.segment_max",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.segment_mean",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.segment_min",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.segment_prod",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.segment_sqrt_n",
      "tensorflow_core.python.ops.ragged.ragged_math_ops.segment_sum"
    ],
    "tensorflow_core/python/ops/ragged/ragged_operators.py": [],
    "tensorflow_core/python/ops/ragged/ragged_squeeze_op.py": [
      "tensorflow_core.python.ops.ragged.ragged_squeeze_op.squeeze"
    ],
    "tensorflow_core/python/ops/ragged/ragged_string_ops.py": [
      "tensorflow_core.python.ops.ragged.ragged_string_ops.ngrams",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.reduce_join",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.string_bytes_split",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.string_split",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.string_split_v2",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.strings_split_v1",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.unicode_decode",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.unicode_decode_with_offsets",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.unicode_encode",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.unicode_split",
      "tensorflow_core.python.ops.ragged.ragged_string_ops.unicode_split_with_offsets"
    ],
    "tensorflow_core/python/ops/ragged/ragged_tensor.py": [
      "tensorflow_core.python.ops.ragged.ragged_tensor.RaggedTensor",
      "tensorflow_core.python.ops.ragged.ragged_tensor.RaggedTensorSpec",
      "tensorflow_core.python.ops.ragged.ragged_tensor.RaggedTensorType",
      "tensorflow_core.python.ops.ragged.ragged_tensor.convert_to_tensor_or_ragged_tensor",
      "tensorflow_core.python.ops.ragged.ragged_tensor.is_ragged",
      "tensorflow_core.python.ops.ragged.ragged_tensor.match_row_splits_dtypes"
    ],
    "tensorflow_core/python/ops/ragged/ragged_tensor_shape.py": [
      "tensorflow_core.python.ops.ragged.ragged_tensor_shape.RaggedTensorDynamicShape",
      "tensorflow_core.python.ops.ragged.ragged_tensor_shape.broadcast_dynamic_shape",
      "tensorflow_core.python.ops.ragged.ragged_tensor_shape.broadcast_to"
    ],
    "tensorflow_core/python/ops/ragged/ragged_tensor_value.py": [
      "tensorflow_core.python.ops.ragged.ragged_tensor_value.RaggedTensorValue"
    ],
    "tensorflow_core/python/ops/ragged/ragged_util.py": [
      "tensorflow_core.python.ops.ragged.ragged_util.assert_splits_match",
      "tensorflow_core.python.ops.ragged.ragged_util.convert_to_int_tensor",
      "tensorflow_core.python.ops.ragged.ragged_util.get_positive_axis",
      "tensorflow_core.python.ops.ragged.ragged_util.lengths_to_splits",
      "tensorflow_core.python.ops.ragged.ragged_util.repeat",
      "tensorflow_core.python.ops.ragged.ragged_util.repeat_ranges"
    ],
    "tensorflow_core/python/ops/ragged/ragged_where_op.py": [
      "tensorflow_core.python.ops.ragged.ragged_where_op.where"
    ],
    "tensorflow_core/python/ops/ragged/segment_id_ops.py": [
      "tensorflow_core.python.ops.ragged.segment_id_ops.row_splits_to_segment_ids",
      "tensorflow_core.python.ops.ragged.segment_id_ops.segment_ids_to_row_splits"
    ],
    "tensorflow_core/python/ops/random_grad.py": [
      "tensorflow_core.python.ops.random_grad.add_leading_unit_dimensions"
    ],
    "tensorflow_core/python/ops/random_ops.py": [
      "tensorflow_core.python.ops.random_ops.categorical",
      "tensorflow_core.python.ops.random_ops.multinomial",
      "tensorflow_core.python.ops.random_ops.multinomial_categorical_impl",
      "tensorflow_core.python.ops.random_ops.parameterized_truncated_normal",
      "tensorflow_core.python.ops.random_ops.random_crop",
      "tensorflow_core.python.ops.random_ops.random_gamma",
      "tensorflow_core.python.ops.random_ops.random_normal",
      "tensorflow_core.python.ops.random_ops.random_poisson",
      "tensorflow_core.python.ops.random_ops.random_poisson_v2",
      "tensorflow_core.python.ops.random_ops.random_shuffle",
      "tensorflow_core.python.ops.random_ops.random_uniform",
      "tensorflow_core.python.ops.random_ops.truncated_normal"
    ],
    "tensorflow_core/python/ops/resource_variable_ops.py": [
      "tensorflow_core.python.ops.resource_variable_ops.BaseResourceVariable",
      "tensorflow_core.python.ops.resource_variable_ops.EagerResourceDeleter",
      "tensorflow_core.python.ops.resource_variable_ops.ResourceVariable",
      "tensorflow_core.python.ops.resource_variable_ops.UninitializedVariable",
      "tensorflow_core.python.ops.resource_variable_ops.copy_to_graph_uninitialized",
      "tensorflow_core.python.ops.resource_variable_ops.eager_safe_variable_handle",
      "tensorflow_core.python.ops.resource_variable_ops.get_eager_safe_handle_data",
      "tensorflow_core.python.ops.resource_variable_ops.get_resource_handle_data",
      "tensorflow_core.python.ops.resource_variable_ops.is_resource_variable",
      "tensorflow_core.python.ops.resource_variable_ops.shape_safe_assign_variable_handle",
      "tensorflow_core.python.ops.resource_variable_ops.variable_accessed",
      "tensorflow_core.python.ops.resource_variable_ops.variable_handle_from_shape_and_dtype",
      "tensorflow_core.python.ops.resource_variable_ops.variable_shape"
    ],
    "tensorflow_core/python/ops/resources.py": [
      "tensorflow_core.python.ops.resources.initialize_resources",
      "tensorflow_core.python.ops.resources.local_resources",
      "tensorflow_core.python.ops.resources.register_resource",
      "tensorflow_core.python.ops.resources.report_uninitialized_resources",
      "tensorflow_core.python.ops.resources.shared_resources"
    ],
    "tensorflow_core/python/ops/rnn.py": [
      "tensorflow_core.python.ops.rnn.bidirectional_dynamic_rnn",
      "tensorflow_core.python.ops.rnn.dynamic_rnn",
      "tensorflow_core.python.ops.rnn.raw_rnn",
      "tensorflow_core.python.ops.rnn.static_bidirectional_rnn",
      "tensorflow_core.python.ops.rnn.static_rnn",
      "tensorflow_core.python.ops.rnn.static_state_saving_rnn"
    ],
    "tensorflow_core/python/ops/rnn_cell.py": [],
    "tensorflow_core/python/ops/rnn_cell_impl.py": [
      "tensorflow_core.python.ops.rnn_cell_impl.ASSERT_LIKE_RNNCELL_ERROR_REGEXP",
      "tensorflow_core.python.ops.rnn_cell_impl.BasicLSTMCell",
      "tensorflow_core.python.ops.rnn_cell_impl.BasicRNNCell",
      "tensorflow_core.python.ops.rnn_cell_impl.DeviceWrapper",
      "tensorflow_core.python.ops.rnn_cell_impl.DropoutWrapper",
      "tensorflow_core.python.ops.rnn_cell_impl.GRUCell",
      "tensorflow_core.python.ops.rnn_cell_impl.LSTMCell",
      "tensorflow_core.python.ops.rnn_cell_impl.LSTMStateTuple",
      "tensorflow_core.python.ops.rnn_cell_impl.LayerRNNCell",
      "tensorflow_core.python.ops.rnn_cell_impl.MultiRNNCell",
      "tensorflow_core.python.ops.rnn_cell_impl.RNNCell",
      "tensorflow_core.python.ops.rnn_cell_impl.ResidualWrapper",
      "tensorflow_core.python.ops.rnn_cell_impl.assert_like_rnncell"
    ],
    "tensorflow_core/python/ops/rnn_cell_wrapper_impl.py": [
      "tensorflow_core.python.ops.rnn_cell_wrapper_impl.DeviceWrapperBase",
      "tensorflow_core.python.ops.rnn_cell_wrapper_impl.DropoutWrapperBase",
      "tensorflow_core.python.ops.rnn_cell_wrapper_impl.ResidualWrapperBase"
    ],
    "tensorflow_core/python/ops/rnn_grad.py": [],
    "tensorflow_core/python/ops/script_ops.py": [
      "tensorflow_core.python.ops.script_ops.EagerFunc",
      "tensorflow_core.python.ops.script_ops.FuncRegistry",
      "tensorflow_core.python.ops.script_ops.eager_py_func",
      "tensorflow_core.python.ops.script_ops.numpy_function",
      "tensorflow_core.python.ops.script_ops.py_func",
      "tensorflow_core.python.ops.script_ops.py_func_common",
      "tensorflow_core.python.ops.script_ops.tape_cache"
    ],
    "tensorflow_core/python/ops/sdca_ops.py": [],
    "tensorflow_core/python/ops/session_ops.py": [
      "tensorflow_core.python.ops.session_ops.TensorHandle",
      "tensorflow_core.python.ops.session_ops.delete_session_tensor",
      "tensorflow_core.python.ops.session_ops.encode_resource_handle",
      "tensorflow_core.python.ops.session_ops.get_session_handle",
      "tensorflow_core.python.ops.session_ops.get_session_tensor"
    ],
    "tensorflow_core/python/ops/sets.py": [],
    "tensorflow_core/python/ops/sets_impl.py": [
      "tensorflow_core.python.ops.sets_impl.set_difference",
      "tensorflow_core.python.ops.sets_impl.set_intersection",
      "tensorflow_core.python.ops.sets_impl.set_size",
      "tensorflow_core.python.ops.sets_impl.set_union"
    ],
    "tensorflow_core/python/ops/signal/__init__.py": [],
    "tensorflow_core/python/ops/signal/dct_ops.py": [
      "tensorflow_core.python.ops.signal.dct_ops.dct",
      "tensorflow_core.python.ops.signal.dct_ops.idct"
    ],
    "tensorflow_core/python/ops/signal/fft_ops.py": [
      "tensorflow_core.python.ops.signal.fft_ops.fft",
      "tensorflow_core.python.ops.signal.fft_ops.fft2d",
      "tensorflow_core.python.ops.signal.fft_ops.fft3d",
      "tensorflow_core.python.ops.signal.fft_ops.fftshift",
      "tensorflow_core.python.ops.signal.fft_ops.ifft",
      "tensorflow_core.python.ops.signal.fft_ops.ifft2d",
      "tensorflow_core.python.ops.signal.fft_ops.ifft3d",
      "tensorflow_core.python.ops.signal.fft_ops.ifftshift",
      "tensorflow_core.python.ops.signal.fft_ops.irfft",
      "tensorflow_core.python.ops.signal.fft_ops.irfft2d",
      "tensorflow_core.python.ops.signal.fft_ops.irfft3d",
      "tensorflow_core.python.ops.signal.fft_ops.rfft",
      "tensorflow_core.python.ops.signal.fft_ops.rfft2d",
      "tensorflow_core.python.ops.signal.fft_ops.rfft3d"
    ],
    "tensorflow_core/python/ops/signal/mel_ops.py": [
      "tensorflow_core.python.ops.signal.mel_ops.linear_to_mel_weight_matrix"
    ],
    "tensorflow_core/python/ops/signal/mfcc_ops.py": [
      "tensorflow_core.python.ops.signal.mfcc_ops.mfccs_from_log_mel_spectrograms"
    ],
    "tensorflow_core/python/ops/signal/reconstruction_ops.py": [
      "tensorflow_core.python.ops.signal.reconstruction_ops.overlap_and_add"
    ],
    "tensorflow_core/python/ops/signal/shape_ops.py": [
      "tensorflow_core.python.ops.signal.shape_ops.frame"
    ],
    "tensorflow_core/python/ops/signal/signal.py": [],
    "tensorflow_core/python/ops/signal/spectral_ops.py": [
      "tensorflow_core.python.ops.signal.spectral_ops.inverse_stft",
      "tensorflow_core.python.ops.signal.spectral_ops.inverse_stft_window_fn",
      "tensorflow_core.python.ops.signal.spectral_ops.stft"
    ],
    "tensorflow_core/python/ops/signal/util_ops.py": [
      "tensorflow_core.python.ops.signal.util_ops.gcd"
    ],
    "tensorflow_core/python/ops/signal/window_ops.py": [
      "tensorflow_core.python.ops.signal.window_ops.hamming_window",
      "tensorflow_core.python.ops.signal.window_ops.hann_window"
    ],
    "tensorflow_core/python/ops/sort_ops.py": [
      "tensorflow_core.python.ops.sort_ops.argsort",
      "tensorflow_core.python.ops.sort_ops.sort"
    ],
    "tensorflow_core/python/ops/sparse_grad.py": [],
    "tensorflow_core/python/ops/sparse_ops.py": [
      "tensorflow_core.python.ops.sparse_ops.KeywordRequired",
      "tensorflow_core.python.ops.sparse_ops.deserialize_many_sparse",
      "tensorflow_core.python.ops.sparse_ops.deserialize_sparse",
      "tensorflow_core.python.ops.sparse_ops.from_dense",
      "tensorflow_core.python.ops.sparse_ops.serialize_many_sparse",
      "tensorflow_core.python.ops.sparse_ops.serialize_many_sparse_v2",
      "tensorflow_core.python.ops.sparse_ops.serialize_sparse",
      "tensorflow_core.python.ops.sparse_ops.serialize_sparse_v2",
      "tensorflow_core.python.ops.sparse_ops.sparse_add",
      "tensorflow_core.python.ops.sparse_ops.sparse_add_v2",
      "tensorflow_core.python.ops.sparse_ops.sparse_concat",
      "tensorflow_core.python.ops.sparse_ops.sparse_concat_v2",
      "tensorflow_core.python.ops.sparse_ops.sparse_cross",
      "tensorflow_core.python.ops.sparse_ops.sparse_cross_hashed",
      "tensorflow_core.python.ops.sparse_ops.sparse_dense_cwise_add",
      "tensorflow_core.python.ops.sparse_ops.sparse_expand_dims",
      "tensorflow_core.python.ops.sparse_ops.sparse_eye",
      "tensorflow_core.python.ops.sparse_ops.sparse_fill_empty_rows",
      "tensorflow_core.python.ops.sparse_ops.sparse_maximum",
      "tensorflow_core.python.ops.sparse_ops.sparse_merge",
      "tensorflow_core.python.ops.sparse_ops.sparse_merge_impl",
      "tensorflow_core.python.ops.sparse_ops.sparse_minimum",
      "tensorflow_core.python.ops.sparse_ops.sparse_reduce_max",
      "tensorflow_core.python.ops.sparse_ops.sparse_reduce_max_sparse",
      "tensorflow_core.python.ops.sparse_ops.sparse_reduce_max_v2",
      "tensorflow_core.python.ops.sparse_ops.sparse_reduce_sum",
      "tensorflow_core.python.ops.sparse_ops.sparse_reduce_sum_sparse",
      "tensorflow_core.python.ops.sparse_ops.sparse_reduce_sum_v2",
      "tensorflow_core.python.ops.sparse_ops.sparse_reorder",
      "tensorflow_core.python.ops.sparse_ops.sparse_reset_shape",
      "tensorflow_core.python.ops.sparse_ops.sparse_reshape",
      "tensorflow_core.python.ops.sparse_ops.sparse_retain",
      "tensorflow_core.python.ops.sparse_ops.sparse_slice",
      "tensorflow_core.python.ops.sparse_ops.sparse_softmax",
      "tensorflow_core.python.ops.sparse_ops.sparse_split",
      "tensorflow_core.python.ops.sparse_ops.sparse_split_v2",
      "tensorflow_core.python.ops.sparse_ops.sparse_tensor_dense_matmul",
      "tensorflow_core.python.ops.sparse_ops.sparse_tensor_to_dense",
      "tensorflow_core.python.ops.sparse_ops.sparse_to_dense",
      "tensorflow_core.python.ops.sparse_ops.sparse_to_indicator",
      "tensorflow_core.python.ops.sparse_ops.sparse_transpose"
    ],
    "tensorflow_core/python/ops/special_math_ops.py": [
      "tensorflow_core.python.ops.special_math_ops.bessel_i0",
      "tensorflow_core.python.ops.special_math_ops.bessel_i1",
      "tensorflow_core.python.ops.special_math_ops.einsum",
      "tensorflow_core.python.ops.special_math_ops.lbeta"
    ],
    "tensorflow_core/python/ops/spectral_ops_test_util.py": [
      "tensorflow_core.python.ops.spectral_ops_test_util.fft_kernel_label_map"
    ],
    "tensorflow_core/python/ops/standard_ops.py": [],
    "tensorflow_core/python/ops/state_grad.py": [],
    "tensorflow_core/python/ops/state_ops.py": [
      "tensorflow_core.python.ops.state_ops.assign",
      "tensorflow_core.python.ops.state_ops.assign_add",
      "tensorflow_core.python.ops.state_ops.assign_sub",
      "tensorflow_core.python.ops.state_ops.batch_scatter_update",
      "tensorflow_core.python.ops.state_ops.count_up_to",
      "tensorflow_core.python.ops.state_ops.init_variable",
      "tensorflow_core.python.ops.state_ops.is_variable_initialized",
      "tensorflow_core.python.ops.state_ops.scatter_add",
      "tensorflow_core.python.ops.state_ops.scatter_div",
      "tensorflow_core.python.ops.state_ops.scatter_max",
      "tensorflow_core.python.ops.state_ops.scatter_min",
      "tensorflow_core.python.ops.state_ops.scatter_mul",
      "tensorflow_core.python.ops.state_ops.scatter_nd_add",
      "tensorflow_core.python.ops.state_ops.scatter_nd_sub",
      "tensorflow_core.python.ops.state_ops.scatter_nd_update",
      "tensorflow_core.python.ops.state_ops.scatter_sub",
      "tensorflow_core.python.ops.state_ops.scatter_update",
      "tensorflow_core.python.ops.state_ops.variable_op",
      "tensorflow_core.python.ops.state_ops.variable_op_v2"
    ],
    "tensorflow_core/python/ops/stateful_random_ops.py": [
      "tensorflow_core.python.ops.stateful_random_ops.ALGORITHM_TYPE",
      "tensorflow_core.python.ops.stateful_random_ops.DEFAULT_ALGORITHM",
      "tensorflow_core.python.ops.stateful_random_ops.Generator",
      "tensorflow_core.python.ops.stateful_random_ops.MAX_INT64",
      "tensorflow_core.python.ops.stateful_random_ops.MIN_INT64",
      "tensorflow_core.python.ops.stateful_random_ops.PHILOX_STATE_SIZE",
      "tensorflow_core.python.ops.stateful_random_ops.RNG_ALG_PHILOX",
      "tensorflow_core.python.ops.stateful_random_ops.RNG_ALG_THREEFRY",
      "tensorflow_core.python.ops.stateful_random_ops.SEED_BIT_MASK",
      "tensorflow_core.python.ops.stateful_random_ops.SEED_MAX",
      "tensorflow_core.python.ops.stateful_random_ops.SEED_MIN",
      "tensorflow_core.python.ops.stateful_random_ops.SEED_SIZE",
      "tensorflow_core.python.ops.stateful_random_ops.SEED_TYPE",
      "tensorflow_core.python.ops.stateful_random_ops.SEED_TYPE_BITS",
      "tensorflow_core.python.ops.stateful_random_ops.SEED_UINT_SPAN",
      "tensorflow_core.python.ops.stateful_random_ops.STATE_TYPE",
      "tensorflow_core.python.ops.stateful_random_ops.THREEFRY_STATE_SIZE",
      "tensorflow_core.python.ops.stateful_random_ops.UINT64_SPAN",
      "tensorflow_core.python.ops.stateful_random_ops.create_rng_state",
      "tensorflow_core.python.ops.stateful_random_ops.get_global_generator",
      "tensorflow_core.python.ops.stateful_random_ops.global_generator",
      "tensorflow_core.python.ops.stateful_random_ops.non_deterministic_ints",
      "tensorflow_core.python.ops.stateful_random_ops.set_global_generator"
    ],
    "tensorflow_core/python/ops/stateless_random_ops.py": [
      "tensorflow_core.python.ops.stateless_random_ops.stateless_categorical",
      "tensorflow_core.python.ops.stateless_random_ops.stateless_multinomial",
      "tensorflow_core.python.ops.stateless_random_ops.stateless_multinomial_categorical_impl",
      "tensorflow_core.python.ops.stateless_random_ops.stateless_random_normal",
      "tensorflow_core.python.ops.stateless_random_ops.stateless_random_uniform",
      "tensorflow_core.python.ops.stateless_random_ops.stateless_truncated_normal"
    ],
    "tensorflow_core/python/ops/string_ops.py": [
      "tensorflow_core.python.ops.string_ops.reduce_join",
      "tensorflow_core.python.ops.string_ops.reduce_join_v2",
      "tensorflow_core.python.ops.string_ops.regex_full_match",
      "tensorflow_core.python.ops.string_ops.regex_replace",
      "tensorflow_core.python.ops.string_ops.string_format",
      "tensorflow_core.python.ops.string_ops.string_length",
      "tensorflow_core.python.ops.string_ops.string_length_v2",
      "tensorflow_core.python.ops.string_ops.string_split",
      "tensorflow_core.python.ops.string_ops.string_split_v2",
      "tensorflow_core.python.ops.string_ops.string_to_hash_bucket",
      "tensorflow_core.python.ops.string_ops.string_to_hash_bucket_v1",
      "tensorflow_core.python.ops.string_ops.string_to_number",
      "tensorflow_core.python.ops.string_ops.string_to_number_v1",
      "tensorflow_core.python.ops.string_ops.substr",
      "tensorflow_core.python.ops.string_ops.substr_deprecated",
      "tensorflow_core.python.ops.string_ops.substr_v2"
    ],
    "tensorflow_core/python/ops/summary_op_util.py": [
      "tensorflow_core.python.ops.summary_op_util.clean_tag",
      "tensorflow_core.python.ops.summary_op_util.collect",
      "tensorflow_core.python.ops.summary_op_util.summary_scope"
    ],
    "tensorflow_core/python/ops/summary_ops_v2.py": [
      "tensorflow_core.python.ops.summary_ops_v2.NoopSummaryWriter",
      "tensorflow_core.python.ops.summary_ops_v2.ResourceSummaryWriter",
      "tensorflow_core.python.ops.summary_ops_v2.SummaryWriter",
      "tensorflow_core.python.ops.summary_ops_v2.all_v2_summary_ops",
      "tensorflow_core.python.ops.summary_ops_v2.always_record_summaries",
      "tensorflow_core.python.ops.summary_ops_v2.audio",
      "tensorflow_core.python.ops.summary_ops_v2.create_db_writer",
      "tensorflow_core.python.ops.summary_ops_v2.create_file_writer",
      "tensorflow_core.python.ops.summary_ops_v2.create_file_writer_v2",
      "tensorflow_core.python.ops.summary_ops_v2.create_noop_writer",
      "tensorflow_core.python.ops.summary_ops_v2.create_summary_file_writer",
      "tensorflow_core.python.ops.summary_ops_v2.eval_dir",
      "tensorflow_core.python.ops.summary_ops_v2.flush",
      "tensorflow_core.python.ops.summary_ops_v2.generic",
      "tensorflow_core.python.ops.summary_ops_v2.get_step",
      "tensorflow_core.python.ops.summary_ops_v2.graph",
      "tensorflow_core.python.ops.summary_ops_v2.histogram",
      "tensorflow_core.python.ops.summary_ops_v2.image",
      "tensorflow_core.python.ops.summary_ops_v2.import_event",
      "tensorflow_core.python.ops.summary_ops_v2.initialize",
      "tensorflow_core.python.ops.summary_ops_v2.keras_model",
      "tensorflow_core.python.ops.summary_ops_v2.never_record_summaries",
      "tensorflow_core.python.ops.summary_ops_v2.record_if",
      "tensorflow_core.python.ops.summary_ops_v2.record_summaries_every_n_global_steps",
      "tensorflow_core.python.ops.summary_ops_v2.run_metadata",
      "tensorflow_core.python.ops.summary_ops_v2.run_metadata_graphs",
      "tensorflow_core.python.ops.summary_ops_v2.scalar",
      "tensorflow_core.python.ops.summary_ops_v2.set_step",
      "tensorflow_core.python.ops.summary_ops_v2.should_record_summaries",
      "tensorflow_core.python.ops.summary_ops_v2.summary_scope",
      "tensorflow_core.python.ops.summary_ops_v2.summary_writer_function",
      "tensorflow_core.python.ops.summary_ops_v2.summary_writer_initializer_op",
      "tensorflow_core.python.ops.summary_ops_v2.trace_export",
      "tensorflow_core.python.ops.summary_ops_v2.trace_off",
      "tensorflow_core.python.ops.summary_ops_v2.trace_on",
      "tensorflow_core.python.ops.summary_ops_v2.write",
      "tensorflow_core.python.ops.summary_ops_v2.write_raw_pb"
    ],
    "tensorflow_core/python/ops/template.py": [
      "tensorflow_core.python.ops.template.EagerTemplate",
      "tensorflow_core.python.ops.template.Template",
      "tensorflow_core.python.ops.template.make_template",
      "tensorflow_core.python.ops.template.make_template_internal"
    ],
    "tensorflow_core/python/ops/tensor_array_grad.py": [],
    "tensorflow_core/python/ops/tensor_array_ops.py": [
      "tensorflow_core.python.ops.tensor_array_ops.TensorArray",
      "tensorflow_core.python.ops.tensor_array_ops.TensorArraySpec",
      "tensorflow_core.python.ops.tensor_array_ops.build_ta_with_new_flow"
    ],
    "tensorflow_core/python/ops/tensor_forest_ops.py": [
      "tensorflow_core.python.ops.tensor_forest_ops.ForestVariables",
      "tensorflow_core.python.ops.tensor_forest_ops.TreeVariableSaveable",
      "tensorflow_core.python.ops.tensor_forest_ops.tree_variable"
    ],
    "tensorflow_core/python/ops/unconnected_gradients.py": [
      "tensorflow_core.python.ops.unconnected_gradients.UnconnectedGradients"
    ],
    "tensorflow_core/python/ops/variable_scope.py": [
      "tensorflow_core.python.ops.variable_scope.AUTO_REUSE",
      "tensorflow_core.python.ops.variable_scope.EagerVariableStore",
      "tensorflow_core.python.ops.variable_scope.VariableAggregation",
      "tensorflow_core.python.ops.variable_scope.VariableScope",
      "tensorflow_core.python.ops.variable_scope.VariableSynchronization",
      "tensorflow_core.python.ops.variable_scope.default_variable_creator",
      "tensorflow_core.python.ops.variable_scope.default_variable_creator_v2",
      "tensorflow_core.python.ops.variable_scope.disable_resource_variables",
      "tensorflow_core.python.ops.variable_scope.enable_resource_variables",
      "tensorflow_core.python.ops.variable_scope.get_local_variable",
      "tensorflow_core.python.ops.variable_scope.get_variable",
      "tensorflow_core.python.ops.variable_scope.get_variable_or_local_docstring",
      "tensorflow_core.python.ops.variable_scope.get_variable_scope",
      "tensorflow_core.python.ops.variable_scope.get_variable_scope_store",
      "tensorflow_core.python.ops.variable_scope.no_regularizer",
      "tensorflow_core.python.ops.variable_scope.resource_variables_enabled",
      "tensorflow_core.python.ops.variable_scope.variable",
      "tensorflow_core.python.ops.variable_scope.variable_creator_scope",
      "tensorflow_core.python.ops.variable_scope.variable_creator_scope_v1",
      "tensorflow_core.python.ops.variable_scope.variable_op_scope",
      "tensorflow_core.python.ops.variable_scope.variable_scope",
      "tensorflow_core.python.ops.variable_scope.with_variable_store"
    ],
    "tensorflow_core/python/ops/variables.py": [
      "tensorflow_core.python.ops.variables.AbstractVariable",
      "tensorflow_core.python.ops.variables.AbstractVariableMetaclass",
      "tensorflow_core.python.ops.variables.PartitionedVariable",
      "tensorflow_core.python.ops.variables.RefVariable",
      "tensorflow_core.python.ops.variables.Variable",
      "tensorflow_core.python.ops.variables.VariableAggregation",
      "tensorflow_core.python.ops.variables.VariableAggregationV2",
      "tensorflow_core.python.ops.variables.VariableMetaclass",
      "tensorflow_core.python.ops.variables.VariableSynchronization",
      "tensorflow_core.python.ops.variables.VariableV1",
      "tensorflow_core.python.ops.variables.all_variables",
      "tensorflow_core.python.ops.variables.assert_variables_initialized",
      "tensorflow_core.python.ops.variables.default_variable_creator",
      "tensorflow_core.python.ops.variables.default_variable_creator_v2",
      "tensorflow_core.python.ops.variables.global_variables",
      "tensorflow_core.python.ops.variables.global_variables_initializer",
      "tensorflow_core.python.ops.variables.initialize_all_variables",
      "tensorflow_core.python.ops.variables.initialize_local_variables",
      "tensorflow_core.python.ops.variables.initialize_variables",
      "tensorflow_core.python.ops.variables.is_variable_initialized",
      "tensorflow_core.python.ops.variables.local_variables",
      "tensorflow_core.python.ops.variables.local_variables_initializer",
      "tensorflow_core.python.ops.variables.model_variables",
      "tensorflow_core.python.ops.variables.moving_average_variables",
      "tensorflow_core.python.ops.variables.report_uninitialized_variables",
      "tensorflow_core.python.ops.variables.trainable_variables",
      "tensorflow_core.python.ops.variables.validate_synchronization_aggregation_trainable",
      "tensorflow_core.python.ops.variables.variables_initializer"
    ],
    "tensorflow_core/python/ops/weights_broadcast_ops.py": [
      "tensorflow_core.python.ops.weights_broadcast_ops.assert_broadcastable",
      "tensorflow_core.python.ops.weights_broadcast_ops.broadcast_weights"
    ],
    "tensorflow_core/python/ops/while_v2.py": [
      "tensorflow_core.python.ops.while_v2.while_loop"
    ],
    "tensorflow_core/python/ops/while_v2_indexed_slices_rewriter.py": [
      "tensorflow_core.python.ops.while_v2_indexed_slices_rewriter.rewrite_grad_indexed_slices"
    ],
    "tensorflow_core/python/platform/__init__.py": [],
    "tensorflow_core/python/platform/app.py": [
      "tensorflow_core.python.platform.app.run"
    ],
    "tensorflow_core/python/platform/benchmark.py": [
      "tensorflow_core.python.platform.benchmark.Benchmark",
      "tensorflow_core.python.platform.benchmark.GLOBAL_BENCHMARK_REGISTRY",
      "tensorflow_core.python.platform.benchmark.OVERRIDE_GLOBAL_THREADPOOL",
      "tensorflow_core.python.platform.benchmark.TEST_REPORTER_TEST_ENV",
      "tensorflow_core.python.platform.benchmark.TensorFlowBenchmark",
      "tensorflow_core.python.platform.benchmark.benchmark_config",
      "tensorflow_core.python.platform.benchmark.benchmarks_main"
    ],
    "tensorflow_core/python/platform/build_info.py": [
      "tensorflow_core.python.platform.build_info.is_cuda_build",
      "tensorflow_core.python.platform.build_info.is_rocm_build"
    ],
    "tensorflow_core/python/platform/control_imports.py": [
      "tensorflow_core.python.platform.control_imports.OSS_APP",
      "tensorflow_core.python.platform.control_imports.OSS_FLAGS",
      "tensorflow_core.python.platform.control_imports.OSS_GFILE",
      "tensorflow_core.python.platform.control_imports.OSS_GOOGLETEST",
      "tensorflow_core.python.platform.control_imports.OSS_LOGGING",
      "tensorflow_core.python.platform.control_imports.OSS_PARAMETERIZED",
      "tensorflow_core.python.platform.control_imports.USE_OSS"
    ],
    "tensorflow_core/python/platform/flags.py": [
      "tensorflow_core.python.platform.flags.DEFINE_bool",
      "tensorflow_core.python.platform.flags.DEFINE_boolean",
      "tensorflow_core.python.platform.flags.DEFINE_float",
      "tensorflow_core.python.platform.flags.DEFINE_integer",
      "tensorflow_core.python.platform.flags.DEFINE_string",
      "tensorflow_core.python.platform.flags.FLAGS"
    ],
    "tensorflow_core/python/platform/gfile.py": [
      "tensorflow_core.python.platform.gfile.FastGFile",
      "tensorflow_core.python.platform.gfile.GFile",
      "tensorflow_core.python.platform.gfile.Open"
    ],
    "tensorflow_core/python/platform/googletest.py": [
      "tensorflow_core.python.platform.googletest.Benchmark",
      "tensorflow_core.python.platform.googletest.GetTempDir",
      "tensorflow_core.python.platform.googletest.StatefulSessionAvailable",
      "tensorflow_core.python.platform.googletest.StubOutForTesting",
      "tensorflow_core.python.platform.googletest.absltest_main",
      "tensorflow_core.python.platform.googletest.g_main",
      "tensorflow_core.python.platform.googletest.main",
      "tensorflow_core.python.platform.googletest.test_src_dir_path"
    ],
    "tensorflow_core/python/platform/parameterized.py": [],
    "tensorflow_core/python/platform/remote_utils.py": [
      "tensorflow_core.python.platform.remote_utils.get_default_communication_protocol"
    ],
    "tensorflow_core/python/platform/resource_loader.py": [
      "tensorflow_core.python.platform.resource_loader.get_data_files_path",
      "tensorflow_core.python.platform.resource_loader.get_path_to_datafile",
      "tensorflow_core.python.platform.resource_loader.get_root_dir_with_all_resources",
      "tensorflow_core.python.platform.resource_loader.load_resource",
      "tensorflow_core.python.platform.resource_loader.readahead_file_path"
    ],
    "tensorflow_core/python/platform/self_check.py": [
      "tensorflow_core.python.platform.self_check.preload_check"
    ],
    "tensorflow_core/python/platform/status_bar.py": [
      "tensorflow_core.python.platform.status_bar.SetupStatusBarInsideGoogle"
    ],
    "tensorflow_core/python/platform/sysconfig.py": [
      "tensorflow_core.python.platform.sysconfig.get_compile_flags",
      "tensorflow_core.python.platform.sysconfig.get_include",
      "tensorflow_core.python.platform.sysconfig.get_lib",
      "tensorflow_core.python.platform.sysconfig.get_link_flags"
    ],
    "tensorflow_core/python/platform/test.py": [
      "tensorflow_core.python.platform.test.Benchmark",
      "tensorflow_core.python.platform.test.StubOutForTesting",
      "tensorflow_core.python.platform.test.get_temp_dir",
      "tensorflow_core.python.platform.test.is_built_with_cuda",
      "tensorflow_core.python.platform.test.is_built_with_gpu_support",
      "tensorflow_core.python.platform.test.is_built_with_rocm",
      "tensorflow_core.python.platform.test.main",
      "tensorflow_core.python.platform.test.test_src_dir_path"
    ],
    "tensorflow_core/python/platform/tf_logging.py": [
      "tensorflow_core.python.platform.tf_logging.TaskLevelStatusMessage",
      "tensorflow_core.python.platform.tf_logging.debug",
      "tensorflow_core.python.platform.tf_logging.error",
      "tensorflow_core.python.platform.tf_logging.fatal",
      "tensorflow_core.python.platform.tf_logging.flush",
      "tensorflow_core.python.platform.tf_logging.get_logger",
      "tensorflow_core.python.platform.tf_logging.get_verbosity",
      "tensorflow_core.python.platform.tf_logging.google2_log_prefix",
      "tensorflow_core.python.platform.tf_logging.info",
      "tensorflow_core.python.platform.tf_logging.log",
      "tensorflow_core.python.platform.tf_logging.log_every_n",
      "tensorflow_core.python.platform.tf_logging.log_first_n",
      "tensorflow_core.python.platform.tf_logging.log_if",
      "tensorflow_core.python.platform.tf_logging.set_verbosity",
      "tensorflow_core.python.platform.tf_logging.vlog",
      "tensorflow_core.python.platform.tf_logging.warn",
      "tensorflow_core.python.platform.tf_logging.warning"
    ],
    "tensorflow_core/python/profiler/__init__.py": [],
    "tensorflow_core/python/profiler/internal/__init__.py": [],
    "tensorflow_core/python/profiler/internal/flops_registry.py": [
      "tensorflow_core.python.profiler.internal.flops_registry.IMPLEMENTED_OPS"
    ],
    "tensorflow_core/python/profiler/model_analyzer.py": [
      "tensorflow_core.python.profiler.model_analyzer.ALL_ADVICE",
      "tensorflow_core.python.profiler.model_analyzer.Profiler",
      "tensorflow_core.python.profiler.model_analyzer.advise",
      "tensorflow_core.python.profiler.model_analyzer.profile"
    ],
    "tensorflow_core/python/profiler/option_builder.py": [
      "tensorflow_core.python.profiler.option_builder.ProfileOptionBuilder"
    ],
    "tensorflow_core/python/profiler/profile_context.py": [
      "tensorflow_core.python.profiler.profile_context.MAX_TRACED_STEPS",
      "tensorflow_core.python.profiler.profile_context.ProfileContext",
      "tensorflow_core.python.profiler.profile_context.WARMUP_STEPS"
    ],
    "tensorflow_core/python/profiler/profiler.py": [],
    "tensorflow_core/python/profiler/tfprof_logger.py": [
      "tensorflow_core.python.profiler.tfprof_logger.REGISTERED_FLOP_STATS",
      "tensorflow_core.python.profiler.tfprof_logger.TRAINABLE_VARIABLES",
      "tensorflow_core.python.profiler.tfprof_logger.merge_default_with_oplog",
      "tensorflow_core.python.profiler.tfprof_logger.write_op_log"
    ],
    "tensorflow_core/python/pywrap_tensorflow.py": [],
    "tensorflow_core/python/pywrap_tensorflow_internal.py": [
      "tensorflow_core.python.pywrap_tensorflow_internal.AddControlInput",
      "tensorflow_core.python.pywrap_tensorflow_internal.AddStep",
      "tensorflow_core.python.pywrap_tensorflow_internal.AddWhileInputHack",
      "tensorflow_core.python.pywrap_tensorflow_internal.AppendToFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.AssertSameStructure",
      "tensorflow_core.python.pywrap_tensorflow_internal.AssertSameStructureForData",
      "tensorflow_core.python.pywrap_tensorflow_internal.Basename",
      "tensorflow_core.python.pywrap_tensorflow_internal.BufferedInputStream",
      "tensorflow_core.python.pywrap_tensorflow_internal.BufferedInputStream_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.CheckpointReader",
      "tensorflow_core.python.pywrap_tensorflow_internal.CheckpointReader_GetTensor",
      "tensorflow_core.python.pywrap_tensorflow_internal.CheckpointReader_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.CleanPath",
      "tensorflow_core.python.pywrap_tensorflow_internal.ClearAttr",
      "tensorflow_core.python.pywrap_tensorflow_internal.CopyFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.CreateBufferedInputStream",
      "tensorflow_core.python.pywrap_tensorflow_internal.CreateDir",
      "tensorflow_core.python.pywrap_tensorflow_internal.CreateURI",
      "tensorflow_core.python.pywrap_tensorflow_internal.CreateWritableFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.DeleteFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.DeleteProfiler",
      "tensorflow_core.python.pywrap_tensorflow_internal.DeleteRecursively",
      "tensorflow_core.python.pywrap_tensorflow_internal.DeleteStatSummarizer",
      "tensorflow_core.python.pywrap_tensorflow_internal.Dirname",
      "tensorflow_core.python.pywrap_tensorflow_internal.DoQuantizeTrainingOnGraphDefHelper",
      "tensorflow_core.python.pywrap_tensorflow_internal.EqualAttrValueWrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.EqualGraphDefWrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.EventsWriter",
      "tensorflow_core.python.pywrap_tensorflow_internal.EventsWriter_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.ExtendSession",
      "tensorflow_core.python.pywrap_tensorflow_internal.Extension",
      "tensorflow_core.python.pywrap_tensorflow_internal.FileExists",
      "tensorflow_core.python.pywrap_tensorflow_internal.FileStatistics",
      "tensorflow_core.python.pywrap_tensorflow_internal.FileStatistics_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.Flatten",
      "tensorflow_core.python.pywrap_tensorflow_internal.FlattenForData",
      "tensorflow_core.python.pywrap_tensorflow_internal.GCluster",
      "tensorflow_core.python.pywrap_tensorflow_internal.GCluster_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.GItem",
      "tensorflow_core.python.pywrap_tensorflow_internal.GItem_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.GRAPH_DEF_VERSION",
      "tensorflow_core.python.pywrap_tensorflow_internal.GRAPH_DEF_VERSION_MIN_CONSUMER",
      "tensorflow_core.python.pywrap_tensorflow_internal.GRAPH_DEF_VERSION_MIN_PRODUCER",
      "tensorflow_core.python.pywrap_tensorflow_internal.GenerateCostReport",
      "tensorflow_core.python.pywrap_tensorflow_internal.GenerateModelReport",
      "tensorflow_core.python.pywrap_tensorflow_internal.GetChildren",
      "tensorflow_core.python.pywrap_tensorflow_internal.GetHandleShapeAndType",
      "tensorflow_core.python.pywrap_tensorflow_internal.GetMatchingFiles",
      "tensorflow_core.python.pywrap_tensorflow_internal.GetOperationInputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.GetPythonWrappers",
      "tensorflow_core.python.pywrap_tensorflow_internal.GetTempFilename",
      "tensorflow_core.python.pywrap_tensorflow_internal.GpuSupportsHalfMatMulAndConv",
      "tensorflow_core.python.pywrap_tensorflow_internal.GraphAnalyzer",
      "tensorflow_core.python.pywrap_tensorflow_internal.InitializePyTrampoline",
      "tensorflow_core.python.pywrap_tensorflow_internal.InstallStacktraceHandler",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsAbsolutePath",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsAttrs",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsBuiltWithROCm",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsCompositeTensor",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsDirectory",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsGoogleCudaEnabled",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsMapping",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsMappingView",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsMklEnabled",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsNamedtuple",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsResourceVariable",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsSequence",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsSequenceForData",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsSequenceOrComposite",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsTensor",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsTypeSpec",
      "tensorflow_core.python.pywrap_tensorflow_internal.IsVariable",
      "tensorflow_core.python.pywrap_tensorflow_internal.ListDevices",
      "tensorflow_core.python.pywrap_tensorflow_internal.ListDevicesWithSessionConfig",
      "tensorflow_core.python.pywrap_tensorflow_internal.NewCheckpointReader",
      "tensorflow_core.python.pywrap_tensorflow_internal.NewProfiler",
      "tensorflow_core.python.pywrap_tensorflow_internal.NewStatSummarizer",
      "tensorflow_core.python.pywrap_tensorflow_internal.ParseURI",
      "tensorflow_core.python.pywrap_tensorflow_internal.PrintModelAnalysis",
      "tensorflow_core.python.pywrap_tensorflow_internal.Profile",
      "tensorflow_core.python.pywrap_tensorflow_internal.ProfilerFromFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyExceptionRegistry",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyExceptionRegistry_Init",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyExceptionRegistry_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyRecordReader",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyRecordReader_New",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyRecordReader_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyRecordWriter",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyRecordWriter_New",
      "tensorflow_core.python.pywrap_tensorflow_internal.PyRecordWriter_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.PythonScopedAnnotation",
      "tensorflow_core.python.pywrap_tensorflow_internal.PythonScopedAnnotation_IsEnabled",
      "tensorflow_core.python.pywrap_tensorflow_internal.PythonScopedAnnotation_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.PythonTraceMe",
      "tensorflow_core.python.pywrap_tensorflow_internal.PythonTraceMe_IsEnabled",
      "tensorflow_core.python.pywrap_tensorflow_internal.PythonTraceMe_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.ReadFileToString",
      "tensorflow_core.python.pywrap_tensorflow_internal.ReadFromStream",
      "tensorflow_core.python.pywrap_tensorflow_internal.RecordWriterOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.RecordWriterOptions_CreateRecordWriterOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.RecordWriterOptions_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.RecursivelyCreateDir",
      "tensorflow_core.python.pywrap_tensorflow_internal.RegisterType",
      "tensorflow_core.python.pywrap_tensorflow_internal.RemoveAllControlInputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.RenameFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.RunCppShapeInference",
      "tensorflow_core.python.pywrap_tensorflow_internal.SHARED_PTR_DISOWN",
      "tensorflow_core.python.pywrap_tensorflow_internal.SameNamedtuples",
      "tensorflow_core.python.pywrap_tensorflow_internal.SerializeToString",
      "tensorflow_core.python.pywrap_tensorflow_internal.SetAttr",
      "tensorflow_core.python.pywrap_tensorflow_internal.SetHandleShapeAndType",
      "tensorflow_core.python.pywrap_tensorflow_internal.SetRequestedDevice",
      "tensorflow_core.python.pywrap_tensorflow_internal.SetRequireShapeInferenceFns",
      "tensorflow_core.python.pywrap_tensorflow_internal.Set_TF_Status_from_Status",
      "tensorflow_core.python.pywrap_tensorflow_internal.Stat",
      "tensorflow_core.python.pywrap_tensorflow_internal.StatSummarizer",
      "tensorflow_core.python.pywrap_tensorflow_internal.StatSummarizer_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.Status",
      "tensorflow_core.python.pywrap_tensorflow_internal.StatusFromTF_Status",
      "tensorflow_core.python.pywrap_tensorflow_internal.StatusGroup",
      "tensorflow_core.python.pywrap_tensorflow_internal.StatusGroup_ConfigureLogHistory",
      "tensorflow_core.python.pywrap_tensorflow_internal.StatusGroup_IsDerived",
      "tensorflow_core.python.pywrap_tensorflow_internal.StatusGroup_MakeDerived",
      "tensorflow_core.python.pywrap_tensorflow_internal.StatusGroup_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.Status_OK",
      "tensorflow_core.python.pywrap_tensorflow_internal.Status_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.TENSOR_HANDLE_KEY",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_CancellationManagerIsCancelled",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_CancellationManagerStartCancel",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ClearScalarCache",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextAddFunction",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextAddFunctionDef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextClearCaches",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextDisableGraphCollection",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextDisableRunMetadata",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextEnableGraphCollection",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextEnableRunMetadata",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextEndStep",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextExportRunMetadata",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextGetDevicePlacementPolicy",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextGetExecutorForThread",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextGetMirroringPolicy",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextHasFunction",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextListDevices",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextOptionsSetAsync",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextOptionsSetConfig",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextOptionsSetDevicePlacementPolicy",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextOptionsSetMirroringPolicy",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextRemoveFunction",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextSetExecutorForThread",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextSetServerDef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextSetThreadLocalDevicePlacementPolicy",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextSetThreadLocalMirroringPolicy",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ContextStartStep",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DEVICE_PLACEMENT_EXPLICIT",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DEVICE_PLACEMENT_SILENT",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DEVICE_PLACEMENT_SILENT_FOR_INT32",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DEVICE_PLACEMENT_WARN",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DeleteCancellationManager",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DeleteContext",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DeleteContextOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DeleteExecutor",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_DeleteProfiler",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_EnableCollectiveOps",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ExecutorClearError",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ExecutorIsAsync",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ExecutorWaitForAllPendingNodes",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MIRRORING_ALL",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MIRRORING_NONE",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringBoolGaugeCellSet",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringBoolGaugeCellValue",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringCounterCellIncrementBy",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringCounterCellValue",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteBoolGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteBoolGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteBoolGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteBuckets",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteCounter0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteCounter1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteCounter2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteIntGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteIntGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteIntGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteSampler0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteSampler1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteSampler2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteStringGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteStringGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringDeleteStringGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellBoolGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellBoolGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellBoolGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellCounter0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellCounter1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellCounter2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellIntGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellIntGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellIntGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellSampler0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellSampler1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellSampler2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellStringGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellStringGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringGetCellStringGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringIntGaugeCellSet",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringIntGaugeCellValue",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewBoolGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewBoolGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewBoolGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewCounter0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewCounter1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewCounter2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewExponentialBuckets",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewIntGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewIntGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewIntGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewSampler0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewSampler1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewSampler2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewStringGauge0",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewStringGauge1",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringNewStringGauge2",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringSamplerCellAdd",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringSamplerCellValue",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringStringGaugeCellSet",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_MonitoringStringGaugeCellValue",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_NewCancellationManager",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_NewContext",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_NewContextOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_NewExecutor",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_NewProfiler",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_OpNameGetAttrType",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ProfilerClientMonitor",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ProfilerClientStartTracing",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ProfilerIsOk",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_ProfilerSerializeToString",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_EnableInteractivePythonLogging",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_EncodeArg",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_Execute",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_ExecuteCancelable",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_FastPathExecute",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_ForwardAccumulatorJVP",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_ForwardAccumulatorNew",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_ForwardAccumulatorSetRemove",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_ForwardAccumulatorWatch",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_InitEagerTensor",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_RecordGradient",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_RegisterExceptionClass",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_RegisterFallbackExceptionClass",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_RegisterForwardGradientFunction",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_RegisterGradientFunction",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_RegisterVSpace",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_SetEagerContext",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_SetEagerTensorProfiler",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeGradient",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetAdd",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetDeleteTrace",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetIsEmpty",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetIsStopped",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetNew",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetPossibleGradientTypes",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetRecordOperation",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetRemove",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetRestartOnThread",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetShouldRecord",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeSetStopOnThread",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeVariableAccessed",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeWatch",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeWatchVariable",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TapeWatchedVariables",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TensorShapeOnDevice",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_TensorShapeSlice",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_Py_UID",
      "tensorflow_core.python.pywrap_tensorflow_internal.TFE_StartProfilerServer",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ABORTED",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ALREADY_EXISTS",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_BOOL",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_FLOAT",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_FUNC",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_INT",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_PLACEHOLDER",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_SHAPE",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_STRING",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_TENSOR",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ATTR_TYPE",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_AddControlInput",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_AddGradients",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_AddGradientsWithPrefix",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_AddInput",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_AddInputList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ApiDefMapGet",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ApiDefMapPut",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_AttrMetadata",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_AttrMetadata_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_BFLOAT16",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_BOOL",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Buffer",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Buffer_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_CANCELLED",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_COMPLEX",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_COMPLEX128",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_COMPLEX64",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_CloseDeprecatedSession",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_CloseSession",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ColocateWith",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DATA_LOSS",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DEADLINE_EXCEEDED",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DOUBLE",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DataTypeSize",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteApiDefMap",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteBuffer",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteDeprecatedSession",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteDeviceList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteFunction",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteGraph",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteImportGraphDefOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteImportGraphDefResults",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteLibraryHandle",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeletePRunHandle",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteServer",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteSession",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteSessionOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeleteStatus",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeprecatedSessionListDevices",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeprecatedSessionMakeCallable",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeprecatedSessionReleaseCallable",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeprecatedSessionRunCallable",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeterminePeakMemoryUsage",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeviceListCount",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeviceListIncarnation",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeviceListMemoryBytes",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeviceListName",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_DeviceListType",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_EstimatePerformance",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ExtendGraph",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_FAILED_PRECONDITION",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_FLOAT",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_FinishOperation",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_FunctionGetAttrValueProto",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_FunctionImportFunctionDef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_FunctionName",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_FunctionSetAttrValueProto",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_FunctionToFunctionDef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetAllOpList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetAllRegisteredKernels",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetBuffer",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetCode",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetColocationGroups",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetOpList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetOpProperties",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetRegisteredKernelsForOp",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetSupportedDevices",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GetXlaConstantFoldingDisabled",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphCopyFunction",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphGetFunctions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphGetOpDef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphGetTensorNumDims",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphGetTensorShape",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphGetTensorShapeHelper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphImportGraphDef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphImportGraphDefWithResults",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphImportGraphDefWithReturnOutputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphNextOperation",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphNumFunctions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphOperationByName",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphSetOutputHandleShapesAndTypes_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphSetTensorShape",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphSetTensorShape_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphToFunction",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphToFunctionWithControlOutputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphToFunction_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphToGraphDef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_GraphVersions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_HALF",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_INT16",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_INT32",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_INT64",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_INT8",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_INTERNAL",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_INVALID_ARGUMENT",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_IdentifyImportantOps",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsAddControlDependency",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsAddInputMapping",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsAddReturnOperation",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsAddReturnOutput",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsNumReturnOperations",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsNumReturnOutputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsRemapControlDependency",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsSetDefaultDevice",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsSetPrefix",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsSetUniquifyNames",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsSetUniquifyPrefix",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefOptionsSetValidateColocationConstraints",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefResultsMissingUnusedInputMappings_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefResultsReturnOperations",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ImportGraphDefResultsReturnOutputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Input",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Input_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ListAvailableOps",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ListDevices",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ListPhysicalDevices",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_LoadLibrary",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_LoadSessionFromSavedModel",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_MeasureCosts",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Message",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NOT_FOUND",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewApiDefMap",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewBuffer",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewBufferFromString",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewCluster",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewDeprecatedSession",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewGraph",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewImportGraphDefOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewItem",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewOperation",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewServer",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewSession",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewSessionOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewSessionRef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewStatus",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_NewVirtualCluster",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OK",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OUT_OF_RANGE",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationDevice",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrBool",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrBoolList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrFloat",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrFloatList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrInt",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrIntList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrMetadata",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrShape",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrShapeList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrString",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrStringList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrTensor",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrTensorList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrTensorShapeProto",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrTensorShapeProtoList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrType",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrTypeList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetAttrValueProto",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetControlInputs_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationGetControlOutputs_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationInput",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationInputListLength",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationInputType",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationName",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationNumControlInputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationNumControlOutputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationNumInputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationNumOutputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationOpType",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationOutputConsumers_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationOutputListLength",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationOutputNumConsumers",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationOutputType",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OperationToNodeDef",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_OptimizeGraph",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Output",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Output_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_PERMISSION_DENIED",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_PRun",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_PRunSetup",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_PickUnusedPortOrDie",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_QINT16",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_QINT32",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_QINT8",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_QUINT16",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_QUINT8",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_RESOURCE",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_RESOURCE_EXHAUSTED",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_RegisterLogListener",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Reset",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Reset_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Run",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_STRING",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ServerJoin",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ServerStart",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ServerStop",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ServerTarget",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SessionListDevices",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SessionMakeCallable",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SessionPRunSetup_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SessionPRun_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SessionReleaseCallable",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SessionRunCallable",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SessionRun_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrBool",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrBoolList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrFloat",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrFloatList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrFuncName",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrInt",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrIntList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrPlaceholder",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrShape",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrShapeList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrString",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrStringList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrTensor",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrTensorList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrTensorShapeProto",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrTensorShapeProtoList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrType",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrTypeList",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetAttrValueProto",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetDevice",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetStatus",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetXlaAutoJitMode",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetXlaConstantFoldingDisabled",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetXlaEnableLazyCompilation",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_SetXlaMinClusterSize",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_ShutdownCluster",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_TryEvaluateConstant",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_TryEvaluateConstant_wrapper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_UINT16",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_UINT32",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_UINT64",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_UINT8",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_UNAUTHENTICATED",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_UNAVAILABLE",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_UNIMPLEMENTED",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_UNKNOWN",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_VARIANT",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_Version",
      "tensorflow_core.python.pywrap_tensorflow_internal.TF_bfloat16_type",
      "tensorflow_core.python.pywrap_tensorflow_internal.TellFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.TfCheckOpHelper",
      "tensorflow_core.python.pywrap_tensorflow_internal.TfCheckOpHelperOutOfLine",
      "tensorflow_core.python.pywrap_tensorflow_internal.TocoConvert",
      "tensorflow_core.python.pywrap_tensorflow_internal.TocoGetPotentiallySupportedOps",
      "tensorflow_core.python.pywrap_tensorflow_internal.TransformGraphWithStringInputs",
      "tensorflow_core.python.pywrap_tensorflow_internal.TryFindKernelClass",
      "tensorflow_core.python.pywrap_tensorflow_internal.UpdateEdge",
      "tensorflow_core.python.pywrap_tensorflow_internal.WritableFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.WritableFile_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.WriteProfile",
      "tensorflow_core.python.pywrap_tensorflow_internal.WriteStringToFile",
      "tensorflow_core.python.pywrap_tensorflow_internal.ZlibCompressionOptions",
      "tensorflow_core.python.pywrap_tensorflow_internal.ZlibCompressionOptions_swigregister",
      "tensorflow_core.python.pywrap_tensorflow_internal.do_quantize_training_on_graphdef",
      "tensorflow_core.python.pywrap_tensorflow_internal.list_devices"
    ],
    "tensorflow_core/python/saved_model/__init__.py": [],
    "tensorflow_core/python/saved_model/builder.py": [],
    "tensorflow_core/python/saved_model/builder_impl.py": [
      "tensorflow_core.python.saved_model.builder_impl.SavedModelBuilder",
      "tensorflow_core.python.saved_model.builder_impl.copy_assets_to_destination_dir",
      "tensorflow_core.python.saved_model.builder_impl.get_asset_filename_to_add"
    ],
    "tensorflow_core/python/saved_model/constants.py": [
      "tensorflow_core.python.saved_model.constants.ASSETS_DIRECTORY",
      "tensorflow_core.python.saved_model.constants.ASSETS_KEY",
      "tensorflow_core.python.saved_model.constants.EXTRA_ASSETS_DIRECTORY",
      "tensorflow_core.python.saved_model.constants.INIT_OP_SIGNATURE_KEY",
      "tensorflow_core.python.saved_model.constants.LEGACY_INIT_OP_KEY",
      "tensorflow_core.python.saved_model.constants.MAIN_OP_KEY",
      "tensorflow_core.python.saved_model.constants.SAVED_MODEL_FILENAME_JSON",
      "tensorflow_core.python.saved_model.constants.SAVED_MODEL_FILENAME_PB",
      "tensorflow_core.python.saved_model.constants.SAVED_MODEL_FILENAME_PBTXT",
      "tensorflow_core.python.saved_model.constants.SAVED_MODEL_SCHEMA_VERSION",
      "tensorflow_core.python.saved_model.constants.TRAIN_OP_KEY",
      "tensorflow_core.python.saved_model.constants.TRAIN_OP_SIGNATURE_KEY",
      "tensorflow_core.python.saved_model.constants.VARIABLES_DIRECTORY",
      "tensorflow_core.python.saved_model.constants.VARIABLES_FILENAME"
    ],
    "tensorflow_core/python/saved_model/function_deserialization.py": [
      "tensorflow_core.python.saved_model.function_deserialization.RestoredFunction",
      "tensorflow_core.python.saved_model.function_deserialization.fix_node_def",
      "tensorflow_core.python.saved_model.function_deserialization.load_function_def_library",
      "tensorflow_core.python.saved_model.function_deserialization.recreate_function",
      "tensorflow_core.python.saved_model.function_deserialization.setup_bare_concrete_function"
    ],
    "tensorflow_core/python/saved_model/function_serialization.py": [
      "tensorflow_core.python.saved_model.function_serialization.serialize_bare_concrete_function",
      "tensorflow_core.python.saved_model.function_serialization.serialize_concrete_function",
      "tensorflow_core.python.saved_model.function_serialization.serialize_function"
    ],
    "tensorflow_core/python/saved_model/load.py": [
      "tensorflow_core.python.saved_model.load.Loader",
      "tensorflow_core.python.saved_model.load.load",
      "tensorflow_core.python.saved_model.load.load_internal"
    ],
    "tensorflow_core/python/saved_model/load_v1_in_v2.py": [
      "tensorflow_core.python.saved_model.load_v1_in_v2.load"
    ],
    "tensorflow_core/python/saved_model/loader.py": [],
    "tensorflow_core/python/saved_model/loader_impl.py": [
      "tensorflow_core.python.saved_model.loader_impl.SavedModelLoader",
      "tensorflow_core.python.saved_model.loader_impl.contains_saved_model",
      "tensorflow_core.python.saved_model.loader_impl.get_asset_tensors",
      "tensorflow_core.python.saved_model.loader_impl.get_init_op",
      "tensorflow_core.python.saved_model.loader_impl.get_train_op",
      "tensorflow_core.python.saved_model.loader_impl.load",
      "tensorflow_core.python.saved_model.loader_impl.maybe_saved_model_directory",
      "tensorflow_core.python.saved_model.loader_impl.parse_saved_model"
    ],
    "tensorflow_core/python/saved_model/main_op.py": [],
    "tensorflow_core/python/saved_model/main_op_impl.py": [
      "tensorflow_core.python.saved_model.main_op_impl.main_op",
      "tensorflow_core.python.saved_model.main_op_impl.main_op_with_restore"
    ],
    "tensorflow_core/python/saved_model/model_utils/__init__.py": [],
    "tensorflow_core/python/saved_model/model_utils/export_output.py": [
      "tensorflow_core.python.saved_model.model_utils.export_output.ClassificationOutput",
      "tensorflow_core.python.saved_model.model_utils.export_output.EvalOutput",
      "tensorflow_core.python.saved_model.model_utils.export_output.ExportOutput",
      "tensorflow_core.python.saved_model.model_utils.export_output.PredictOutput",
      "tensorflow_core.python.saved_model.model_utils.export_output.RegressionOutput",
      "tensorflow_core.python.saved_model.model_utils.export_output.TrainOutput"
    ],
    "tensorflow_core/python/saved_model/model_utils/export_utils.py": [
      "tensorflow_core.python.saved_model.model_utils.export_utils.EXPORT_TAG_MAP",
      "tensorflow_core.python.saved_model.model_utils.export_utils.MAX_DIRECTORY_CREATION_ATTEMPTS",
      "tensorflow_core.python.saved_model.model_utils.export_utils.SIGNATURE_KEY_MAP",
      "tensorflow_core.python.saved_model.model_utils.export_utils.SINGLE_FEATURE_DEFAULT_NAME",
      "tensorflow_core.python.saved_model.model_utils.export_utils.SINGLE_LABEL_DEFAULT_NAME",
      "tensorflow_core.python.saved_model.model_utils.export_utils.SINGLE_RECEIVER_DEFAULT_NAME",
      "tensorflow_core.python.saved_model.model_utils.export_utils.build_all_signature_defs",
      "tensorflow_core.python.saved_model.model_utils.export_utils.export_outputs_for_mode",
      "tensorflow_core.python.saved_model.model_utils.export_utils.get_export_outputs",
      "tensorflow_core.python.saved_model.model_utils.export_utils.get_temp_export_dir",
      "tensorflow_core.python.saved_model.model_utils.export_utils.get_timestamped_export_dir"
    ],
    "tensorflow_core/python/saved_model/model_utils/mode_keys.py": [
      "tensorflow_core.python.saved_model.model_utils.mode_keys.EstimatorModeKeys",
      "tensorflow_core.python.saved_model.model_utils.mode_keys.KerasModeKeys",
      "tensorflow_core.python.saved_model.model_utils.mode_keys.ModeKeyMap",
      "tensorflow_core.python.saved_model.model_utils.mode_keys.is_eval",
      "tensorflow_core.python.saved_model.model_utils.mode_keys.is_predict",
      "tensorflow_core.python.saved_model.model_utils.mode_keys.is_train"
    ],
    "tensorflow_core/python/saved_model/nested_structure_coder.py": [
      "tensorflow_core.python.saved_model.nested_structure_coder.NotEncodableError",
      "tensorflow_core.python.saved_model.nested_structure_coder.StructureCoder"
    ],
    "tensorflow_core/python/saved_model/revived_types.py": [
      "tensorflow_core.python.saved_model.revived_types.VersionedTypeRegistration",
      "tensorflow_core.python.saved_model.revived_types.deserialize",
      "tensorflow_core.python.saved_model.revived_types.register_revived_type",
      "tensorflow_core.python.saved_model.revived_types.registered_identifiers",
      "tensorflow_core.python.saved_model.revived_types.serialize"
    ],
    "tensorflow_core/python/saved_model/save.py": [
      "tensorflow_core.python.saved_model.save.save"
    ],
    "tensorflow_core/python/saved_model/saved_model.py": [],
    "tensorflow_core/python/saved_model/signature_constants.py": [
      "tensorflow_core.python.saved_model.signature_constants.CLASSIFY_INPUTS",
      "tensorflow_core.python.saved_model.signature_constants.CLASSIFY_METHOD_NAME",
      "tensorflow_core.python.saved_model.signature_constants.CLASSIFY_OUTPUT_CLASSES",
      "tensorflow_core.python.saved_model.signature_constants.CLASSIFY_OUTPUT_SCORES",
      "tensorflow_core.python.saved_model.signature_constants.DEFAULT_EVAL_SIGNATURE_DEF_KEY",
      "tensorflow_core.python.saved_model.signature_constants.DEFAULT_SERVING_SIGNATURE_DEF_KEY",
      "tensorflow_core.python.saved_model.signature_constants.DEFAULT_TRAIN_SIGNATURE_DEF_KEY",
      "tensorflow_core.python.saved_model.signature_constants.PREDICT_INPUTS",
      "tensorflow_core.python.saved_model.signature_constants.PREDICT_METHOD_NAME",
      "tensorflow_core.python.saved_model.signature_constants.PREDICT_OUTPUTS",
      "tensorflow_core.python.saved_model.signature_constants.REGRESS_INPUTS",
      "tensorflow_core.python.saved_model.signature_constants.REGRESS_METHOD_NAME",
      "tensorflow_core.python.saved_model.signature_constants.REGRESS_OUTPUTS",
      "tensorflow_core.python.saved_model.signature_constants.SUPERVISED_EVAL_METHOD_NAME",
      "tensorflow_core.python.saved_model.signature_constants.SUPERVISED_TRAIN_METHOD_NAME"
    ],
    "tensorflow_core/python/saved_model/signature_def_utils.py": [],
    "tensorflow_core/python/saved_model/signature_def_utils_impl.py": [
      "tensorflow_core.python.saved_model.signature_def_utils_impl.build_signature_def",
      "tensorflow_core.python.saved_model.signature_def_utils_impl.classification_signature_def",
      "tensorflow_core.python.saved_model.signature_def_utils_impl.is_valid_signature",
      "tensorflow_core.python.saved_model.signature_def_utils_impl.load_op_from_signature_def",
      "tensorflow_core.python.saved_model.signature_def_utils_impl.op_signature_def",
      "tensorflow_core.python.saved_model.signature_def_utils_impl.predict_signature_def",
      "tensorflow_core.python.saved_model.signature_def_utils_impl.regression_signature_def",
      "tensorflow_core.python.saved_model.signature_def_utils_impl.supervised_eval_signature_def",
      "tensorflow_core.python.saved_model.signature_def_utils_impl.supervised_train_signature_def"
    ],
    "tensorflow_core/python/saved_model/signature_serialization.py": [
      "tensorflow_core.python.saved_model.signature_serialization.DEFAULT_SIGNATURE_ATTR",
      "tensorflow_core.python.saved_model.signature_serialization.SIGNATURE_ATTRIBUTE_NAME",
      "tensorflow_core.python.saved_model.signature_serialization.canonicalize_signatures",
      "tensorflow_core.python.saved_model.signature_serialization.create_signature_map",
      "tensorflow_core.python.saved_model.signature_serialization.find_function_to_export",
      "tensorflow_core.python.saved_model.signature_serialization.validate_saveable_view"
    ],
    "tensorflow_core/python/saved_model/simple_save.py": [
      "tensorflow_core.python.saved_model.simple_save.simple_save"
    ],
    "tensorflow_core/python/saved_model/tag_constants.py": [
      "tensorflow_core.python.saved_model.tag_constants.EVAL",
      "tensorflow_core.python.saved_model.tag_constants.GPU",
      "tensorflow_core.python.saved_model.tag_constants.SERVING",
      "tensorflow_core.python.saved_model.tag_constants.TPU",
      "tensorflow_core.python.saved_model.tag_constants.TRAINING"
    ],
    "tensorflow_core/python/saved_model/utils.py": [],
    "tensorflow_core/python/saved_model/utils_impl.py": [
      "tensorflow_core.python.saved_model.utils_impl.build_tensor_info",
      "tensorflow_core.python.saved_model.utils_impl.build_tensor_info_from_op",
      "tensorflow_core.python.saved_model.utils_impl.build_tensor_info_internal",
      "tensorflow_core.python.saved_model.utils_impl.get_assets_dir",
      "tensorflow_core.python.saved_model.utils_impl.get_element_from_tensor_info",
      "tensorflow_core.python.saved_model.utils_impl.get_or_create_assets_dir",
      "tensorflow_core.python.saved_model.utils_impl.get_or_create_variables_dir",
      "tensorflow_core.python.saved_model.utils_impl.get_tensor_from_tensor_info",
      "tensorflow_core.python.saved_model.utils_impl.get_variables_dir",
      "tensorflow_core.python.saved_model.utils_impl.get_variables_path"
    ],
    "tensorflow_core/python/summary/__init__.py": [],
    "tensorflow_core/python/summary/plugin_asset.py": [
      "tensorflow_core.python.summary.plugin_asset.PluginAsset",
      "tensorflow_core.python.summary.plugin_asset.get_all_plugin_assets",
      "tensorflow_core.python.summary.plugin_asset.get_plugin_asset"
    ],
    "tensorflow_core/python/summary/summary.py": [
      "tensorflow_core.python.summary.summary.audio",
      "tensorflow_core.python.summary.summary.get_summary_description",
      "tensorflow_core.python.summary.summary.histogram",
      "tensorflow_core.python.summary.summary.image",
      "tensorflow_core.python.summary.summary.merge",
      "tensorflow_core.python.summary.summary.merge_all",
      "tensorflow_core.python.summary.summary.scalar",
      "tensorflow_core.python.summary.summary.tensor_summary",
      "tensorflow_core.python.summary.summary.text"
    ],
    "tensorflow_core/python/summary/summary_iterator.py": [
      "tensorflow_core.python.summary.summary_iterator.summary_iterator"
    ],
    "tensorflow_core/python/summary/writer/__init__.py": [],
    "tensorflow_core/python/summary/writer/event_file_writer.py": [
      "tensorflow_core.python.summary.writer.event_file_writer.EventFileWriter"
    ],
    "tensorflow_core/python/summary/writer/event_file_writer_v2.py": [
      "tensorflow_core.python.summary.writer.event_file_writer_v2.EventFileWriterV2"
    ],
    "tensorflow_core/python/summary/writer/writer.py": [
      "tensorflow_core.python.summary.writer.writer.FileWriter",
      "tensorflow_core.python.summary.writer.writer.SummaryToEventTransformer"
    ],
    "tensorflow_core/python/summary/writer/writer_cache.py": [
      "tensorflow_core.python.summary.writer.writer_cache.FileWriterCache"
    ],
    "tensorflow_core/python/tf2.py": [
      "tensorflow_core.python.tf2.disable",
      "tensorflow_core.python.tf2.enable",
      "tensorflow_core.python.tf2.enabled"
    ],
    "tensorflow_core/python/tools/__init__.py": [],
    "tensorflow_core/python/tools/api/__init__.py": [],
    "tensorflow_core/python/tools/api/generator/__init__.py": [],
    "tensorflow_core/python/tools/api/generator/create_python_api.py": [
      "tensorflow_core.python.tools.api.generator.create_python_api.API_ATTRS",
      "tensorflow_core.python.tools.api.generator.create_python_api.API_ATTRS_V1",
      "tensorflow_core.python.tools.api.generator.create_python_api.SymbolExposedTwiceError",
      "tensorflow_core.python.tools.api.generator.create_python_api.add_imports_for_symbol",
      "tensorflow_core.python.tools.api.generator.create_python_api.create_api_files",
      "tensorflow_core.python.tools.api.generator.create_python_api.get_api_init_text",
      "tensorflow_core.python.tools.api.generator.create_python_api.get_canonical_import",
      "tensorflow_core.python.tools.api.generator.create_python_api.get_module",
      "tensorflow_core.python.tools.api.generator.create_python_api.get_module_docstring",
      "tensorflow_core.python.tools.api.generator.create_python_api.main"
    ],
    "tensorflow_core/python/tools/api/generator/doc_srcs.py": [
      "tensorflow_core.python.tools.api.generator.doc_srcs.DocSource",
      "tensorflow_core.python.tools.api.generator.doc_srcs.get_doc_sources"
    ],
    "tensorflow_core/python/tools/freeze_graph.py": [
      "tensorflow_core.python.tools.freeze_graph.freeze_graph",
      "tensorflow_core.python.tools.freeze_graph.freeze_graph_with_def_protos",
      "tensorflow_core.python.tools.freeze_graph.main",
      "tensorflow_core.python.tools.freeze_graph.run_main"
    ],
    "tensorflow_core/python/tools/import_pb_to_tensorboard.py": [
      "tensorflow_core.python.tools.import_pb_to_tensorboard.import_to_tensorboard",
      "tensorflow_core.python.tools.import_pb_to_tensorboard.main"
    ],
    "tensorflow_core/python/tools/inspect_checkpoint.py": [
      "tensorflow_core.python.tools.inspect_checkpoint.FLAGS",
      "tensorflow_core.python.tools.inspect_checkpoint.main",
      "tensorflow_core.python.tools.inspect_checkpoint.parse_numpy_printoption",
      "tensorflow_core.python.tools.inspect_checkpoint.print_tensors_in_checkpoint_file"
    ],
    "tensorflow_core/python/tools/module_util.py": [
      "tensorflow_core.python.tools.module_util.get_parent_dir"
    ],
    "tensorflow_core/python/tools/optimize_for_inference.py": [
      "tensorflow_core.python.tools.optimize_for_inference.FLAGS",
      "tensorflow_core.python.tools.optimize_for_inference.main",
      "tensorflow_core.python.tools.optimize_for_inference.parse_args"
    ],
    "tensorflow_core/python/tools/optimize_for_inference_lib.py": [
      "tensorflow_core.python.tools.optimize_for_inference_lib.EPSILON_ATTR",
      "tensorflow_core.python.tools.optimize_for_inference_lib.FLAGS",
      "tensorflow_core.python.tools.optimize_for_inference_lib.INPUT_ORDER",
      "tensorflow_core.python.tools.optimize_for_inference_lib.ensure_graph_is_valid",
      "tensorflow_core.python.tools.optimize_for_inference_lib.flags",
      "tensorflow_core.python.tools.optimize_for_inference_lib.fold_batch_norms",
      "tensorflow_core.python.tools.optimize_for_inference_lib.fuse_resize_and_conv",
      "tensorflow_core.python.tools.optimize_for_inference_lib.node_from_map",
      "tensorflow_core.python.tools.optimize_for_inference_lib.node_name_from_input",
      "tensorflow_core.python.tools.optimize_for_inference_lib.optimize_for_inference",
      "tensorflow_core.python.tools.optimize_for_inference_lib.scale_after_normalization",
      "tensorflow_core.python.tools.optimize_for_inference_lib.values_from_const"
    ],
    "tensorflow_core/python/tools/print_selective_registration_header.py": [
      "tensorflow_core.python.tools.print_selective_registration_header.FLAGS",
      "tensorflow_core.python.tools.print_selective_registration_header.main"
    ],
    "tensorflow_core/python/tools/saved_model_cli.py": [
      "tensorflow_core.python.tools.saved_model_cli.convert_with_tensorrt",
      "tensorflow_core.python.tools.saved_model_cli.create_parser",
      "tensorflow_core.python.tools.saved_model_cli.get_meta_graph_def",
      "tensorflow_core.python.tools.saved_model_cli.get_signature_def_map",
      "tensorflow_core.python.tools.saved_model_cli.load_inputs_from_input_arg_string",
      "tensorflow_core.python.tools.saved_model_cli.main",
      "tensorflow_core.python.tools.saved_model_cli.preprocess_input_examples_arg_string",
      "tensorflow_core.python.tools.saved_model_cli.preprocess_input_exprs_arg_string",
      "tensorflow_core.python.tools.saved_model_cli.preprocess_inputs_arg_string",
      "tensorflow_core.python.tools.saved_model_cli.run",
      "tensorflow_core.python.tools.saved_model_cli.run_saved_model_with_feed_dict",
      "tensorflow_core.python.tools.saved_model_cli.scan",
      "tensorflow_core.python.tools.saved_model_cli.scan_meta_graph_def",
      "tensorflow_core.python.tools.saved_model_cli.show"
    ],
    "tensorflow_core/python/tools/saved_model_utils.py": [
      "tensorflow_core.python.tools.saved_model_utils.get_meta_graph_def",
      "tensorflow_core.python.tools.saved_model_utils.get_saved_model_tag_sets",
      "tensorflow_core.python.tools.saved_model_utils.read_saved_model"
    ],
    "tensorflow_core/python/tools/selective_registration_header_lib.py": [
      "tensorflow_core.python.tools.selective_registration_header_lib.OPS_WITHOUT_KERNEL_WHITELIST",
      "tensorflow_core.python.tools.selective_registration_header_lib.get_header",
      "tensorflow_core.python.tools.selective_registration_header_lib.get_header_from_ops_and_kernels",
      "tensorflow_core.python.tools.selective_registration_header_lib.get_ops_and_kernels"
    ],
    "tensorflow_core/python/tools/strip_unused.py": [
      "tensorflow_core.python.tools.strip_unused.FLAGS",
      "tensorflow_core.python.tools.strip_unused.main"
    ],
    "tensorflow_core/python/tools/strip_unused_lib.py": [
      "tensorflow_core.python.tools.strip_unused_lib.strip_unused",
      "tensorflow_core.python.tools.strip_unused_lib.strip_unused_from_files"
    ],
    "tensorflow_core/python/tpu/__init__.py": [],
    "tensorflow_core/python/tpu/_tpu_estimator_embedding.py": [],
    "tensorflow_core/python/tpu/api.py": [],
    "tensorflow_core/python/tpu/async_checkpoint.py": [
      "tensorflow_core.python.tpu.async_checkpoint.AsyncCheckpointSaverHook"
    ],
    "tensorflow_core/python/tpu/bfloat16.py": [
      "tensorflow_core.python.tpu.bfloat16.bfloat16_scope"
    ],
    "tensorflow_core/python/tpu/datasets.py": [
      "tensorflow_core.python.tpu.datasets.StreamingFilesDataset"
    ],
    "tensorflow_core/python/tpu/device_assignment.py": [
      "tensorflow_core.python.tpu.device_assignment.DeviceAssignment",
      "tensorflow_core.python.tpu.device_assignment.SINGLE_CORE_ASSIGNMENT",
      "tensorflow_core.python.tpu.device_assignment.device_assignment"
    ],
    "tensorflow_core/python/tpu/error_handling.py": [],
    "tensorflow_core/python/tpu/feature_column.py": [
      "tensorflow_core.python.tpu.feature_column.embedding_column",
      "tensorflow_core.python.tpu.feature_column.get_sequence_length_feature_key_name_from_feature_key_name",
      "tensorflow_core.python.tpu.feature_column.shared_embedding_columns",
      "tensorflow_core.python.tpu.feature_column.split_sequence_columns"
    ],
    "tensorflow_core/python/tpu/feature_column_v2.py": [
      "tensorflow_core.python.tpu.feature_column_v2.embedding_column_v2",
      "tensorflow_core.python.tpu.feature_column_v2.shared_embedding_columns_v2",
      "tensorflow_core.python.tpu.feature_column_v2.split_sequence_columns_v2"
    ],
    "tensorflow_core/python/tpu/functional.py": [
      "tensorflow_core.python.tpu.functional.TPUPartitionedCall"
    ],
    "tensorflow_core/python/tpu/ops/__init__.py": [],
    "tensorflow_core/python/tpu/ops/tpu_ops.py": [
      "tensorflow_core.python.tpu.ops.tpu_ops.all_to_all",
      "tensorflow_core.python.tpu.ops.tpu_ops.collective_permute",
      "tensorflow_core.python.tpu.ops.tpu_ops.cross_replica_sum",
      "tensorflow_core.python.tpu.ops.tpu_ops.enqueue_tpu_embedding_integer_batch",
      "tensorflow_core.python.tpu.ops.tpu_ops.enqueue_tpu_embedding_sparse_batch",
      "tensorflow_core.python.tpu.ops.tpu_ops.enqueue_tpu_embedding_sparse_tensor_batch",
      "tensorflow_core.python.tpu.ops.tpu_ops.infeed_dequeue",
      "tensorflow_core.python.tpu.ops.tpu_ops.infeed_dequeue_tuple",
      "tensorflow_core.python.tpu.ops.tpu_ops.send_tpu_embedding_gradients"
    ],
    "tensorflow_core/python/tpu/preempted_hook.py": [
      "tensorflow_core.python.tpu.preempted_hook.CloudTPUPreemptedHook"
    ],
    "tensorflow_core/python/tpu/profiler/__init__.py": [],
    "tensorflow_core/python/tpu/profiler/profiler_analysis_pb2_grpc.py": [
      "tensorflow_core.python.tpu.profiler.profiler_analysis_pb2_grpc.ProfileAnalysisServicer",
      "tensorflow_core.python.tpu.profiler.profiler_analysis_pb2_grpc.ProfileAnalysisStub",
      "tensorflow_core.python.tpu.profiler.profiler_analysis_pb2_grpc.add_ProfileAnalysisServicer_to_server"
    ],
    "tensorflow_core/python/tpu/session_support.py": [
      "tensorflow_core.python.tpu.session_support.CoordinatorResetError",
      "tensorflow_core.python.tpu.session_support.GracefulShutdownHook",
      "tensorflow_core.python.tpu.session_support.ResetComputation",
      "tensorflow_core.python.tpu.session_support.ShutdownAllWorkers",
      "tensorflow_core.python.tpu.session_support.ShutdownLameWorkers",
      "tensorflow_core.python.tpu.session_support.WatchdogManager",
      "tensorflow_core.python.tpu.session_support.WorkerHeartbeatManager",
      "tensorflow_core.python.tpu.session_support.all_worker_devices",
      "tensorflow_core.python.tpu.session_support.start_worker_watchdog"
    ],
    "tensorflow_core/python/tpu/tensor_tracer.py": [
      "tensorflow_core.python.tpu.tensor_tracer.TensorTracer",
      "tensorflow_core.python.tpu.tensor_tracer.keras_layer_tracepoint",
      "tensorflow_core.python.tpu.tensor_tracer.read_tensor_tracer_event_file",
      "tensorflow_core.python.tpu.tensor_tracer.tensor_tracepoint"
    ],
    "tensorflow_core/python/tpu/tensor_tracer_flags.py": [
      "tensorflow_core.python.tpu.tensor_tracer_flags.TRACE_MODE_FULL_IF_NAN",
      "tensorflow_core.python.tpu.tensor_tracer_flags.TRACE_MODE_FULL_TENSOR",
      "tensorflow_core.python.tpu.tensor_tracer_flags.TRACE_MODE_FULL_TENSOR_SUMMARY",
      "tensorflow_core.python.tpu.tensor_tracer_flags.TRACE_MODE_MAX_ABS",
      "tensorflow_core.python.tpu.tensor_tracer_flags.TRACE_MODE_NAN_INF",
      "tensorflow_core.python.tpu.tensor_tracer_flags.TRACE_MODE_NORM",
      "tensorflow_core.python.tpu.tensor_tracer_flags.TRACE_MODE_PART_TENSOR",
      "tensorflow_core.python.tpu.tensor_tracer_flags.TRACE_MODE_SUMMARY",
      "tensorflow_core.python.tpu.tensor_tracer_flags.TTParameters"
    ],
    "tensorflow_core/python/tpu/tensor_tracer_pb2.py": [
      "tensorflow_core.python.tpu.tensor_tracer_pb2.DESCRIPTOR",
      "tensorflow_core.python.tpu.tensor_tracer_pb2.TensorTracerReport"
    ],
    "tensorflow_core/python/tpu/tensor_tracer_report.py": [
      "tensorflow_core.python.tpu.tensor_tracer_report.OpenReportFile",
      "tensorflow_core.python.tpu.tensor_tracer_report.TTReportHandle",
      "tensorflow_core.python.tpu.tensor_tracer_report.TensorTraceOrder",
      "tensorflow_core.python.tpu.tensor_tracer_report.TensorTracerConfig",
      "tensorflow_core.python.tpu.tensor_tracer_report.sort_tensors_and_ops",
      "tensorflow_core.python.tpu.tensor_tracer_report.topological_sort"
    ],
    "tensorflow_core/python/tpu/topology.py": [
      "tensorflow_core.python.tpu.topology.Topology"
    ],
    "tensorflow_core/python/tpu/tpu.py": [
      "tensorflow_core.python.tpu.tpu.TPUReplicateContext",
      "tensorflow_core.python.tpu.tpu.batch_parallel",
      "tensorflow_core.python.tpu.tpu.core",
      "tensorflow_core.python.tpu.tpu.initialize_system",
      "tensorflow_core.python.tpu.tpu.initialize_system_for_tpu_embedding",
      "tensorflow_core.python.tpu.tpu.outside_compilation",
      "tensorflow_core.python.tpu.tpu.prune_unconnected_ops_from_xla",
      "tensorflow_core.python.tpu.tpu.replicate",
      "tensorflow_core.python.tpu.tpu.rewrite",
      "tensorflow_core.python.tpu.tpu.rewrite_for_inference",
      "tensorflow_core.python.tpu.tpu.shard",
      "tensorflow_core.python.tpu.tpu.shutdown_system",
      "tensorflow_core.python.tpu.tpu.split_compile_and_replicate",
      "tensorflow_core.python.tpu.tpu.split_compile_and_shard",
      "tensorflow_core.python.tpu.tpu.under_tpu_inference_context",
      "tensorflow_core.python.tpu.tpu.validate_inference_rewrite_for_variables"
    ],
    "tensorflow_core/python/tpu/tpu_config.py": [],
    "tensorflow_core/python/tpu/tpu_context.py": [],
    "tensorflow_core/python/tpu/tpu_embedding.py": [
      "tensorflow_core.python.tpu.tpu_embedding.AdagradParameters",
      "tensorflow_core.python.tpu.tpu_embedding.AdagradSlotVariable",
      "tensorflow_core.python.tpu.tpu_embedding.AdagradSlotVariableName",
      "tensorflow_core.python.tpu.tpu_embedding.AdamParameters",
      "tensorflow_core.python.tpu.tpu_embedding.AdamSlotVariableNames",
      "tensorflow_core.python.tpu.tpu_embedding.AdamSlotVariables",
      "tensorflow_core.python.tpu.tpu_embedding.DeviceConfig",
      "tensorflow_core.python.tpu.tpu_embedding.EnqueueData",
      "tensorflow_core.python.tpu.tpu_embedding.FeatureConfig",
      "tensorflow_core.python.tpu.tpu_embedding.INFERENCE",
      "tensorflow_core.python.tpu.tpu_embedding.StochasticGradientDescentParameters",
      "tensorflow_core.python.tpu.tpu_embedding.TPUEmbedding",
      "tensorflow_core.python.tpu.tpu_embedding.TRAINING",
      "tensorflow_core.python.tpu.tpu_embedding.TableConfig",
      "tensorflow_core.python.tpu.tpu_embedding.VariablesAndOps",
      "tensorflow_core.python.tpu.tpu_embedding.get_enqueue_datas_list_from_sparse_tensors_list"
    ],
    "tensorflow_core/python/tpu/tpu_embedding_gradient.py": [
      "tensorflow_core.python.tpu.tpu_embedding_gradient.create_dummy_table_variables",
      "tensorflow_core.python.tpu.tpu_embedding_gradient.get_gradients_through_compute_gradients",
      "tensorflow_core.python.tpu.tpu_embedding_gradient.get_gradients_through_dummy_table_variables",
      "tensorflow_core.python.tpu.tpu_embedding_gradient.hook_dummy_table_variables_to_activations"
    ],
    "tensorflow_core/python/tpu/tpu_estimator.py": [],
    "tensorflow_core/python/tpu/tpu_feed.py": [
      "tensorflow_core.python.tpu.tpu_feed.InfeedQueue",
      "tensorflow_core.python.tpu.tpu_feed.partition_or_replicate_on_host",
      "tensorflow_core.python.tpu.tpu_feed.tag_sharding_attribute_for_dequeued_tensors"
    ],
    "tensorflow_core/python/tpu/tpu_function.py": [
      "tensorflow_core.python.tpu.tpu_function.TpuContext",
      "tensorflow_core.python.tpu.tpu_function.get_tpu_context",
      "tensorflow_core.python.tpu.tpu_function.on_device_training_loop",
      "tensorflow_core.python.tpu.tpu_function.tpu_shard_context"
    ],
    "tensorflow_core/python/tpu/tpu_optimizer.py": [
      "tensorflow_core.python.tpu.tpu_optimizer.CrossShardOptimizer"
    ],
    "tensorflow_core/python/tpu/tpu_sharding.py": [
      "tensorflow_core.python.tpu.tpu_sharding.ShardingPolicy"
    ],
    "tensorflow_core/python/tpu/tpu_strategy_util.py": [
      "tensorflow_core.python.tpu.tpu_strategy_util.initialize_tpu_system"
    ],
    "tensorflow_core/python/tpu/tpu_system_metadata.py": [
      "tensorflow_core.python.tpu.tpu_system_metadata.get_session_config_with_timeout",
      "tensorflow_core.python.tpu.tpu_system_metadata.master_job"
    ],
    "tensorflow_core/python/tpu/training_loop.py": [
      "tensorflow_core.python.tpu.training_loop.repeat",
      "tensorflow_core.python.tpu.training_loop.while_loop"
    ],
    "tensorflow_core/python/tpu/util.py": [],
    "tensorflow_core/python/training/__init__.py": [],
    "tensorflow_core/python/training/adadelta.py": [
      "tensorflow_core.python.training.adadelta.AdadeltaOptimizer"
    ],
    "tensorflow_core/python/training/adagrad.py": [
      "tensorflow_core.python.training.adagrad.AdagradOptimizer"
    ],
    "tensorflow_core/python/training/adagrad_da.py": [
      "tensorflow_core.python.training.adagrad_da.AdagradDAOptimizer"
    ],
    "tensorflow_core/python/training/adam.py": [
      "tensorflow_core.python.training.adam.AdamOptimizer"
    ],
    "tensorflow_core/python/training/basic_loops.py": [
      "tensorflow_core.python.training.basic_loops.basic_train_loop"
    ],
    "tensorflow_core/python/training/basic_session_run_hooks.py": [
      "tensorflow_core.python.training.basic_session_run_hooks.CheckpointSaverHook",
      "tensorflow_core.python.training.basic_session_run_hooks.CheckpointSaverListener",
      "tensorflow_core.python.training.basic_session_run_hooks.FeedFnHook",
      "tensorflow_core.python.training.basic_session_run_hooks.FinalOpsHook",
      "tensorflow_core.python.training.basic_session_run_hooks.GlobalStepWaiterHook",
      "tensorflow_core.python.training.basic_session_run_hooks.LoggingTensorHook",
      "tensorflow_core.python.training.basic_session_run_hooks.NanLossDuringTrainingError",
      "tensorflow_core.python.training.basic_session_run_hooks.NanTensorHook",
      "tensorflow_core.python.training.basic_session_run_hooks.NeverTriggerTimer",
      "tensorflow_core.python.training.basic_session_run_hooks.ProfilerHook",
      "tensorflow_core.python.training.basic_session_run_hooks.SecondOrStepTimer",
      "tensorflow_core.python.training.basic_session_run_hooks.StepCounterHook",
      "tensorflow_core.python.training.basic_session_run_hooks.StopAtStepHook",
      "tensorflow_core.python.training.basic_session_run_hooks.SummarySaverHook",
      "tensorflow_core.python.training.basic_session_run_hooks.get_or_create_steps_per_run_variable"
    ],
    "tensorflow_core/python/training/checkpoint_management.py": [
      "tensorflow_core.python.training.checkpoint_management.CheckpointManager",
      "tensorflow_core.python.training.checkpoint_management.checkpoint_exists",
      "tensorflow_core.python.training.checkpoint_management.checkpoint_exists_internal",
      "tensorflow_core.python.training.checkpoint_management.generate_checkpoint_state_proto",
      "tensorflow_core.python.training.checkpoint_management.get_checkpoint_mtimes",
      "tensorflow_core.python.training.checkpoint_management.get_checkpoint_state",
      "tensorflow_core.python.training.checkpoint_management.latest_checkpoint",
      "tensorflow_core.python.training.checkpoint_management.meta_graph_filename",
      "tensorflow_core.python.training.checkpoint_management.remove_checkpoint",
      "tensorflow_core.python.training.checkpoint_management.update_checkpoint_state",
      "tensorflow_core.python.training.checkpoint_management.update_checkpoint_state_internal"
    ],
    "tensorflow_core/python/training/checkpoint_ops.py": [],
    "tensorflow_core/python/training/checkpoint_state_pb2.py": [
      "tensorflow_core.python.training.checkpoint_state_pb2.CheckpointState",
      "tensorflow_core.python.training.checkpoint_state_pb2.DESCRIPTOR"
    ],
    "tensorflow_core/python/training/checkpoint_utils.py": [
      "tensorflow_core.python.training.checkpoint_utils.checkpoints_iterator",
      "tensorflow_core.python.training.checkpoint_utils.init_from_checkpoint",
      "tensorflow_core.python.training.checkpoint_utils.list_variables",
      "tensorflow_core.python.training.checkpoint_utils.load_checkpoint",
      "tensorflow_core.python.training.checkpoint_utils.load_variable",
      "tensorflow_core.python.training.checkpoint_utils.wait_for_new_checkpoint"
    ],
    "tensorflow_core/python/training/coordinator.py": [
      "tensorflow_core.python.training.coordinator.Coordinator",
      "tensorflow_core.python.training.coordinator.LooperThread"
    ],
    "tensorflow_core/python/training/device_setter.py": [
      "tensorflow_core.python.training.device_setter.STANDARD_PS_OPS",
      "tensorflow_core.python.training.device_setter.replica_device_setter"
    ],
    "tensorflow_core/python/training/distribute.py": [],
    "tensorflow_core/python/training/distribution_strategy_context.py": [],
    "tensorflow_core/python/training/evaluation.py": [],
    "tensorflow_core/python/training/experimental/__init__.py": [],
    "tensorflow_core/python/training/experimental/loss_scale.py": [
      "tensorflow_core.python.training.experimental.loss_scale.DynamicLossScale",
      "tensorflow_core.python.training.experimental.loss_scale.FixedLossScale",
      "tensorflow_core.python.training.experimental.loss_scale.LossScale",
      "tensorflow_core.python.training.experimental.loss_scale.get",
      "tensorflow_core.python.training.experimental.loss_scale.get_loss_scale_weights"
    ],
    "tensorflow_core/python/training/experimental/loss_scale_optimizer.py": [
      "tensorflow_core.python.training.experimental.loss_scale_optimizer.MixedPrecisionLossScaleOptimizer"
    ],
    "tensorflow_core/python/training/experimental/mixed_precision.py": [
      "tensorflow_core.python.training.experimental.mixed_precision.disable_mixed_precision_graph_rewrite",
      "tensorflow_core.python.training.experimental.mixed_precision.disable_mixed_precision_graph_rewrite_v1",
      "tensorflow_core.python.training.experimental.mixed_precision.enable_mixed_precision_graph_rewrite",
      "tensorflow_core.python.training.experimental.mixed_precision.enable_mixed_precision_graph_rewrite_v1"
    ],
    "tensorflow_core/python/training/experimental/mixed_precision_global_state.py": [
      "tensorflow_core.python.training.experimental.mixed_precision_global_state.mixed_precision_graph_rewrite_is_enabled",
      "tensorflow_core.python.training.experimental.mixed_precision_global_state.non_mixed_precision_session_created",
      "tensorflow_core.python.training.experimental.mixed_precision_global_state.using_default_mixed_precision_policy"
    ],
    "tensorflow_core/python/training/ftrl.py": [
      "tensorflow_core.python.training.ftrl.FtrlOptimizer"
    ],
    "tensorflow_core/python/training/gen_training_ops.py": [
      "tensorflow_core.python.training.gen_training_ops.ApplyAdaMax",
      "tensorflow_core.python.training.gen_training_ops.ApplyAdadelta",
      "tensorflow_core.python.training.gen_training_ops.ApplyAdagrad",
      "tensorflow_core.python.training.gen_training_ops.ApplyAdagradDA",
      "tensorflow_core.python.training.gen_training_ops.ApplyAdagradV2",
      "tensorflow_core.python.training.gen_training_ops.ApplyAdam",
      "tensorflow_core.python.training.gen_training_ops.ApplyAddSign",
      "tensorflow_core.python.training.gen_training_ops.ApplyCenteredRMSProp",
      "tensorflow_core.python.training.gen_training_ops.ApplyFtrl",
      "tensorflow_core.python.training.gen_training_ops.ApplyFtrlV2",
      "tensorflow_core.python.training.gen_training_ops.ApplyGradientDescent",
      "tensorflow_core.python.training.gen_training_ops.ApplyMomentum",
      "tensorflow_core.python.training.gen_training_ops.ApplyPowerSign",
      "tensorflow_core.python.training.gen_training_ops.ApplyProximalAdagrad",
      "tensorflow_core.python.training.gen_training_ops.ApplyProximalGradientDescent",
      "tensorflow_core.python.training.gen_training_ops.ApplyRMSProp",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyAdaMax",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyAdadelta",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyAdagrad",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyAdagradDA",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyAdagradV2",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyAdam",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyAdamWithAmsgrad",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyAddSign",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyCenteredRMSProp",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyFtrl",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyFtrlV2",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyGradientDescent",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyKerasMomentum",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyMomentum",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyPowerSign",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyProximalAdagrad",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyProximalGradientDescent",
      "tensorflow_core.python.training.gen_training_ops.ResourceApplyRMSProp",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyAdadelta",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyAdagrad",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyAdagradDA",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyAdagradV2",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyCenteredRMSProp",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyFtrl",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyFtrlV2",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyKerasMomentum",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyMomentum",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyProximalAdagrad",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyProximalGradientDescent",
      "tensorflow_core.python.training.gen_training_ops.ResourceSparseApplyRMSProp",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyAdadelta",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyAdagrad",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyAdagradDA",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyAdagradV2",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyCenteredRMSProp",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyFtrl",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyFtrlV2",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyMomentum",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyProximalAdagrad",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyProximalGradientDescent",
      "tensorflow_core.python.training.gen_training_ops.SparseApplyRMSProp",
      "tensorflow_core.python.training.gen_training_ops.apply_ada_max",
      "tensorflow_core.python.training.gen_training_ops.apply_ada_max_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_adadelta",
      "tensorflow_core.python.training.gen_training_ops.apply_adadelta_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_adagrad",
      "tensorflow_core.python.training.gen_training_ops.apply_adagrad_da",
      "tensorflow_core.python.training.gen_training_ops.apply_adagrad_da_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_adagrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_adagrad_v2",
      "tensorflow_core.python.training.gen_training_ops.apply_adagrad_v2_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_adam",
      "tensorflow_core.python.training.gen_training_ops.apply_adam_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_add_sign",
      "tensorflow_core.python.training.gen_training_ops.apply_add_sign_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_centered_rms_prop",
      "tensorflow_core.python.training.gen_training_ops.apply_centered_rms_prop_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_ftrl",
      "tensorflow_core.python.training.gen_training_ops.apply_ftrl_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_ftrl_v2",
      "tensorflow_core.python.training.gen_training_ops.apply_ftrl_v2_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_gradient_descent",
      "tensorflow_core.python.training.gen_training_ops.apply_gradient_descent_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_momentum",
      "tensorflow_core.python.training.gen_training_ops.apply_momentum_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_power_sign",
      "tensorflow_core.python.training.gen_training_ops.apply_power_sign_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_proximal_adagrad",
      "tensorflow_core.python.training.gen_training_ops.apply_proximal_adagrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_proximal_gradient_descent",
      "tensorflow_core.python.training.gen_training_ops.apply_proximal_gradient_descent_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.apply_rms_prop",
      "tensorflow_core.python.training.gen_training_ops.apply_rms_prop_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_ada_max",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_ada_max_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adadelta",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adadelta_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adagrad",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adagrad_da",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adagrad_da_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adagrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adagrad_v2",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adagrad_v2_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adam",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adam_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adam_with_amsgrad",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_adam_with_amsgrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_add_sign",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_add_sign_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_centered_rms_prop",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_centered_rms_prop_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_ftrl",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_ftrl_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_ftrl_v2",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_ftrl_v2_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_gradient_descent",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_gradient_descent_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_keras_momentum",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_keras_momentum_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_momentum",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_momentum_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_power_sign",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_power_sign_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_proximal_adagrad",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_proximal_adagrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_proximal_gradient_descent",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_proximal_gradient_descent_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_rms_prop",
      "tensorflow_core.python.training.gen_training_ops.resource_apply_rms_prop_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_adadelta",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_adadelta_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_adagrad",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_adagrad_da",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_adagrad_da_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_adagrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_adagrad_v2",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_adagrad_v2_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_centered_rms_prop",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_centered_rms_prop_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_ftrl",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_ftrl_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_ftrl_v2",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_ftrl_v2_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_keras_momentum",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_keras_momentum_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_momentum",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_momentum_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_proximal_adagrad",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_proximal_adagrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_proximal_gradient_descent",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_proximal_gradient_descent_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_rms_prop",
      "tensorflow_core.python.training.gen_training_ops.resource_sparse_apply_rms_prop_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_adadelta",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_adadelta_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_adagrad",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_adagrad_da",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_adagrad_da_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_adagrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_adagrad_v2",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_adagrad_v2_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_centered_rms_prop",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_centered_rms_prop_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_ftrl",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_ftrl_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_ftrl_v2",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_ftrl_v2_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_momentum",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_momentum_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_proximal_adagrad",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_proximal_adagrad_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_proximal_gradient_descent",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_proximal_gradient_descent_eager_fallback",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_rms_prop",
      "tensorflow_core.python.training.gen_training_ops.sparse_apply_rms_prop_eager_fallback"
    ],
    "tensorflow_core/python/training/gradient_descent.py": [
      "tensorflow_core.python.training.gradient_descent.GradientDescentOptimizer"
    ],
    "tensorflow_core/python/training/input.py": [
      "tensorflow_core.python.training.input.batch",
      "tensorflow_core.python.training.input.batch_join",
      "tensorflow_core.python.training.input.input_producer",
      "tensorflow_core.python.training.input.limit_epochs",
      "tensorflow_core.python.training.input.match_filenames_once",
      "tensorflow_core.python.training.input.maybe_batch",
      "tensorflow_core.python.training.input.maybe_batch_join",
      "tensorflow_core.python.training.input.maybe_shuffle_batch",
      "tensorflow_core.python.training.input.maybe_shuffle_batch_join",
      "tensorflow_core.python.training.input.range_input_producer",
      "tensorflow_core.python.training.input.shuffle_batch",
      "tensorflow_core.python.training.input.shuffle_batch_join",
      "tensorflow_core.python.training.input.slice_input_producer",
      "tensorflow_core.python.training.input.string_input_producer"
    ],
    "tensorflow_core/python/training/learning_rate_decay.py": [
      "tensorflow_core.python.training.learning_rate_decay.cosine_decay",
      "tensorflow_core.python.training.learning_rate_decay.cosine_decay_restarts",
      "tensorflow_core.python.training.learning_rate_decay.exponential_decay",
      "tensorflow_core.python.training.learning_rate_decay.inverse_time_decay",
      "tensorflow_core.python.training.learning_rate_decay.linear_cosine_decay",
      "tensorflow_core.python.training.learning_rate_decay.natural_exp_decay",
      "tensorflow_core.python.training.learning_rate_decay.noisy_linear_cosine_decay",
      "tensorflow_core.python.training.learning_rate_decay.piecewise_constant",
      "tensorflow_core.python.training.learning_rate_decay.polynomial_decay"
    ],
    "tensorflow_core/python/training/momentum.py": [
      "tensorflow_core.python.training.momentum.MomentumOptimizer"
    ],
    "tensorflow_core/python/training/monitored_session.py": [
      "tensorflow_core.python.training.monitored_session.ChiefSessionCreator",
      "tensorflow_core.python.training.monitored_session.MonitoredSession",
      "tensorflow_core.python.training.monitored_session.MonitoredTrainingSession",
      "tensorflow_core.python.training.monitored_session.Scaffold",
      "tensorflow_core.python.training.monitored_session.SessionCreator",
      "tensorflow_core.python.training.monitored_session.SingularMonitoredSession",
      "tensorflow_core.python.training.monitored_session.USE_DEFAULT",
      "tensorflow_core.python.training.monitored_session.WorkerSessionCreator"
    ],
    "tensorflow_core/python/training/moving_averages.py": [
      "tensorflow_core.python.training.moving_averages.ExponentialMovingAverage",
      "tensorflow_core.python.training.moving_averages.assign_moving_average",
      "tensorflow_core.python.training.moving_averages.weighted_moving_average"
    ],
    "tensorflow_core/python/training/optimizer.py": [
      "tensorflow_core.python.training.optimizer.Optimizer",
      "tensorflow_core.python.training.optimizer.get_filtered_grad_fn"
    ],
    "tensorflow_core/python/training/proximal_adagrad.py": [
      "tensorflow_core.python.training.proximal_adagrad.ProximalAdagradOptimizer"
    ],
    "tensorflow_core/python/training/proximal_gradient_descent.py": [
      "tensorflow_core.python.training.proximal_gradient_descent.ProximalGradientDescentOptimizer"
    ],
    "tensorflow_core/python/training/queue_runner.py": [],
    "tensorflow_core/python/training/queue_runner_impl.py": [
      "tensorflow_core.python.training.queue_runner_impl.QueueRunner",
      "tensorflow_core.python.training.queue_runner_impl.add_queue_runner",
      "tensorflow_core.python.training.queue_runner_impl.start_queue_runners"
    ],
    "tensorflow_core/python/training/rmsprop.py": [
      "tensorflow_core.python.training.rmsprop.RMSPropOptimizer"
    ],
    "tensorflow_core/python/training/saver.py": [
      "tensorflow_core.python.training.saver.BaseSaverBuilder",
      "tensorflow_core.python.training.saver.BulkSaverBuilder",
      "tensorflow_core.python.training.saver.Saver",
      "tensorflow_core.python.training.saver.checkpoint_exists",
      "tensorflow_core.python.training.saver.export_meta_graph",
      "tensorflow_core.python.training.saver.generate_checkpoint_state_proto",
      "tensorflow_core.python.training.saver.get_checkpoint_mtimes",
      "tensorflow_core.python.training.saver.get_checkpoint_state",
      "tensorflow_core.python.training.saver.import_meta_graph",
      "tensorflow_core.python.training.saver.latest_checkpoint",
      "tensorflow_core.python.training.saver.object_graph_key_mapping",
      "tensorflow_core.python.training.saver.remove_checkpoint",
      "tensorflow_core.python.training.saver.saver_from_object_based_checkpoint",
      "tensorflow_core.python.training.saver.update_checkpoint_state"
    ],
    "tensorflow_core/python/training/saver_test_utils.py": [
      "tensorflow_core.python.training.saver_test_utils.CheckpointedOp"
    ],
    "tensorflow_core/python/training/saving/__init__.py": [],
    "tensorflow_core/python/training/saving/functional_saver.py": [
      "tensorflow_core.python.training.saving.functional_saver.MultiDeviceSaver",
      "tensorflow_core.python.training.saving.functional_saver.sharded_filename"
    ],
    "tensorflow_core/python/training/saving/saveable_object.py": [
      "tensorflow_core.python.training.saving.saveable_object.SaveSpec",
      "tensorflow_core.python.training.saving.saveable_object.SaveableObject"
    ],
    "tensorflow_core/python/training/saving/saveable_object_util.py": [
      "tensorflow_core.python.training.saving.saveable_object_util.ReferenceVariableSaveable",
      "tensorflow_core.python.training.saving.saveable_object_util.ResourceVariableSaveable",
      "tensorflow_core.python.training.saving.saveable_object_util.op_list_to_dict",
      "tensorflow_core.python.training.saving.saveable_object_util.saveable_objects_for_op",
      "tensorflow_core.python.training.saving.saveable_object_util.set_cpu0",
      "tensorflow_core.python.training.saving.saveable_object_util.validate_and_slice_inputs"
    ],
    "tensorflow_core/python/training/server_lib.py": [
      "tensorflow_core.python.training.server_lib.ClusterSpec",
      "tensorflow_core.python.training.server_lib.Server"
    ],
    "tensorflow_core/python/training/session_manager.py": [
      "tensorflow_core.python.training.session_manager.SessionManager"
    ],
    "tensorflow_core/python/training/session_run_hook.py": [
      "tensorflow_core.python.training.session_run_hook.SessionRunArgs",
      "tensorflow_core.python.training.session_run_hook.SessionRunContext",
      "tensorflow_core.python.training.session_run_hook.SessionRunHook",
      "tensorflow_core.python.training.session_run_hook.SessionRunValues"
    ],
    "tensorflow_core/python/training/slot_creator.py": [
      "tensorflow_core.python.training.slot_creator.create_slot",
      "tensorflow_core.python.training.slot_creator.create_slot_with_initializer",
      "tensorflow_core.python.training.slot_creator.create_zeros_slot"
    ],
    "tensorflow_core/python/training/summary_io.py": [
      "tensorflow_core.python.training.summary_io.SummaryWriter"
    ],
    "tensorflow_core/python/training/supervisor.py": [
      "tensorflow_core.python.training.supervisor.SVStepCounterThread",
      "tensorflow_core.python.training.supervisor.SVSummaryThread",
      "tensorflow_core.python.training.supervisor.SVTimerCheckpointThread",
      "tensorflow_core.python.training.supervisor.Supervisor"
    ],
    "tensorflow_core/python/training/sync_replicas_optimizer.py": [
      "tensorflow_core.python.training.sync_replicas_optimizer.SyncReplicasOptimizer"
    ],
    "tensorflow_core/python/training/tensorboard_logging.py": [
      "tensorflow_core.python.training.tensorboard_logging.DEBUG",
      "tensorflow_core.python.training.tensorboard_logging.ERROR",
      "tensorflow_core.python.training.tensorboard_logging.FATAL",
      "tensorflow_core.python.training.tensorboard_logging.INFO",
      "tensorflow_core.python.training.tensorboard_logging.WARN",
      "tensorflow_core.python.training.tensorboard_logging.debug",
      "tensorflow_core.python.training.tensorboard_logging.error",
      "tensorflow_core.python.training.tensorboard_logging.fatal",
      "tensorflow_core.python.training.tensorboard_logging.get_verbosity",
      "tensorflow_core.python.training.tensorboard_logging.info",
      "tensorflow_core.python.training.tensorboard_logging.log",
      "tensorflow_core.python.training.tensorboard_logging.set_summary_writer",
      "tensorflow_core.python.training.tensorboard_logging.set_verbosity",
      "tensorflow_core.python.training.tensorboard_logging.warn"
    ],
    "tensorflow_core/python/training/tracking/__init__.py": [],
    "tensorflow_core/python/training/tracking/base.py": [
      "tensorflow_core.python.training.tracking.base.CheckpointInitialValue",
      "tensorflow_core.python.training.tracking.base.CheckpointPosition",
      "tensorflow_core.python.training.tracking.base.NoRestoreSaveable",
      "tensorflow_core.python.training.tracking.base.OBJECT_CONFIG_JSON_KEY",
      "tensorflow_core.python.training.tracking.base.OBJECT_GRAPH_PROTO_KEY",
      "tensorflow_core.python.training.tracking.base.PythonStateSaveable",
      "tensorflow_core.python.training.tracking.base.PythonStringStateSaveable",
      "tensorflow_core.python.training.tracking.base.Trackable",
      "tensorflow_core.python.training.tracking.base.TrackableReference",
      "tensorflow_core.python.training.tracking.base.VARIABLE_VALUE_KEY",
      "tensorflow_core.python.training.tracking.base.no_automatic_dependency_tracking",
      "tensorflow_core.python.training.tracking.base.no_automatic_dependency_tracking_scope"
    ],
    "tensorflow_core/python/training/tracking/data_structures.py": [
      "tensorflow_core.python.training.tracking.data_structures.List",
      "tensorflow_core.python.training.tracking.data_structures.ListWrapper",
      "tensorflow_core.python.training.tracking.data_structures.Mapping",
      "tensorflow_core.python.training.tracking.data_structures.NoDependency",
      "tensorflow_core.python.training.tracking.data_structures.TrackableDataStructure",
      "tensorflow_core.python.training.tracking.data_structures.sticky_attribute_assignment"
    ],
    "tensorflow_core/python/training/tracking/graph_view.py": [
      "tensorflow_core.python.training.tracking.graph_view.ObjectGraphView"
    ],
    "tensorflow_core/python/training/tracking/layer_utils.py": [
      "tensorflow_core.python.training.tracking.layer_utils.filter_empty_layer_containers",
      "tensorflow_core.python.training.tracking.layer_utils.gather_non_trainable_weights",
      "tensorflow_core.python.training.tracking.layer_utils.gather_trainable_weights",
      "tensorflow_core.python.training.tracking.layer_utils.has_weights",
      "tensorflow_core.python.training.tracking.layer_utils.is_layer"
    ],
    "tensorflow_core/python/training/tracking/python_state.py": [
      "tensorflow_core.python.training.tracking.python_state.PythonState"
    ],
    "tensorflow_core/python/training/tracking/tracking.py": [
      "tensorflow_core.python.training.tracking.tracking.AutoTrackable",
      "tensorflow_core.python.training.tracking.tracking.CapturableResource",
      "tensorflow_core.python.training.tracking.tracking.CapturableResourceDeleter",
      "tensorflow_core.python.training.tracking.tracking.NotTrackable",
      "tensorflow_core.python.training.tracking.tracking.ResourceTracker",
      "tensorflow_core.python.training.tracking.tracking.TrackableAsset",
      "tensorflow_core.python.training.tracking.tracking.TrackableResource",
      "tensorflow_core.python.training.tracking.tracking.cached_per_instance",
      "tensorflow_core.python.training.tracking.tracking.delete_tracking",
      "tensorflow_core.python.training.tracking.tracking.resource_tracker_scope"
    ],
    "tensorflow_core/python/training/tracking/util.py": [
      "tensorflow_core.python.training.tracking.util.Checkpoint",
      "tensorflow_core.python.training.tracking.util.CheckpointLoadStatus",
      "tensorflow_core.python.training.tracking.util.CheckpointV1",
      "tensorflow_core.python.training.tracking.util.InitializationOnlyStatus",
      "tensorflow_core.python.training.tracking.util.NameBasedSaverStatus",
      "tensorflow_core.python.training.tracking.util.TrackableSaver",
      "tensorflow_core.python.training.tracking.util.add_variable",
      "tensorflow_core.python.training.tracking.util.capture_dependencies",
      "tensorflow_core.python.training.tracking.util.frozen_saver",
      "tensorflow_core.python.training.tracking.util.gather_initializers",
      "tensorflow_core.python.training.tracking.util.get_session",
      "tensorflow_core.python.training.tracking.util.keras_backend",
      "tensorflow_core.python.training.tracking.util.list_objects",
      "tensorflow_core.python.training.tracking.util.object_metadata",
      "tensorflow_core.python.training.tracking.util.saver_with_op_caching",
      "tensorflow_core.python.training.tracking.util.streaming_restore"
    ],
    "tensorflow_core/python/training/training.py": [],
    "tensorflow_core/python/training/training_ops.py": [],
    "tensorflow_core/python/training/training_util.py": [
      "tensorflow_core.python.training.training_util.GLOBAL_STEP_READ_KEY",
      "tensorflow_core.python.training.training_util.assert_global_step",
      "tensorflow_core.python.training.training_util.create_global_step",
      "tensorflow_core.python.training.training_util.get_global_step",
      "tensorflow_core.python.training.training_util.get_or_create_global_step",
      "tensorflow_core.python.training.training_util.global_step",
      "tensorflow_core.python.training.training_util.write_graph"
    ],
    "tensorflow_core/python/training/warm_starting_util.py": [
      "tensorflow_core.python.training.warm_starting_util.VocabInfo",
      "tensorflow_core.python.training.warm_starting_util.warm_start"
    ],
    "tensorflow_core/python/user_ops/__init__.py": [],
    "tensorflow_core/python/user_ops/user_ops.py": [
      "tensorflow_core.python.user_ops.user_ops.my_fact"
    ],
    "tensorflow_core/python/util/__init__.py": [],
    "tensorflow_core/python/util/all_util.py": [
      "tensorflow_core.python.util.all_util.make_all",
      "tensorflow_core.python.util.all_util.remove_undocumented",
      "tensorflow_core.python.util.all_util.reveal_undocumented"
    ],
    "tensorflow_core/python/util/compat.py": [
      "tensorflow_core.python.util.compat.as_bytes",
      "tensorflow_core.python.util.compat.as_str_any",
      "tensorflow_core.python.util.compat.as_text",
      "tensorflow_core.python.util.compat.bytes_or_text_types",
      "tensorflow_core.python.util.compat.complex_types",
      "tensorflow_core.python.util.compat.integral_types",
      "tensorflow_core.python.util.compat.path_to_str",
      "tensorflow_core.python.util.compat.real_types"
    ],
    "tensorflow_core/python/util/compat_internal.py": [
      "tensorflow_core.python.util.compat_internal.path_to_str"
    ],
    "tensorflow_core/python/util/decorator_utils.py": [
      "tensorflow_core.python.util.decorator_utils.add_notice_to_docstring",
      "tensorflow_core.python.util.decorator_utils.classproperty",
      "tensorflow_core.python.util.decorator_utils.get_qualified_name",
      "tensorflow_core.python.util.decorator_utils.validate_callable"
    ],
    "tensorflow_core/python/util/deprecation.py": [
      "tensorflow_core.python.util.deprecation.DeprecatedArgSpec",
      "tensorflow_core.python.util.deprecation.DeprecatedNamesAlreadySet",
      "tensorflow_core.python.util.deprecation.HIDDEN_ATTRIBUTE",
      "tensorflow_core.python.util.deprecation.HiddenTfApiAttribute",
      "tensorflow_core.python.util.deprecation.deprecated",
      "tensorflow_core.python.util.deprecation.deprecated_alias",
      "tensorflow_core.python.util.deprecation.deprecated_arg_values",
      "tensorflow_core.python.util.deprecation.deprecated_args",
      "tensorflow_core.python.util.deprecation.deprecated_argument_lookup",
      "tensorflow_core.python.util.deprecation.deprecated_endpoints",
      "tensorflow_core.python.util.deprecation.hide_attribute_from_api",
      "tensorflow_core.python.util.deprecation.rewrite_argument_docstring",
      "tensorflow_core.python.util.deprecation.silence"
    ],
    "tensorflow_core/python/util/deprecation_wrapper.py": [
      "tensorflow_core.python.util.deprecation_wrapper.DeprecationWrapper"
    ],
    "tensorflow_core/python/util/dispatch.py": [
      "tensorflow_core.python.util.dispatch.DISPATCH_ATTR",
      "tensorflow_core.python.util.dispatch.OpDispatcher",
      "tensorflow_core.python.util.dispatch.add_dispatch_list",
      "tensorflow_core.python.util.dispatch.add_dispatch_support",
      "tensorflow_core.python.util.dispatch.dispatch",
      "tensorflow_core.python.util.dispatch.dispatch_for_types"
    ],
    "tensorflow_core/python/util/example_parser_configuration.py": [
      "tensorflow_core.python.util.example_parser_configuration.extract_example_parser_configuration"
    ],
    "tensorflow_core/python/util/function_utils.py": [
      "tensorflow_core.python.util.function_utils.fn_args",
      "tensorflow_core.python.util.function_utils.get_disabled_rewriter_config",
      "tensorflow_core.python.util.function_utils.get_func_code",
      "tensorflow_core.python.util.function_utils.get_func_name",
      "tensorflow_core.python.util.function_utils.has_kwargs"
    ],
    "tensorflow_core/python/util/future_api.py": [],
    "tensorflow_core/python/util/is_in_graph_mode.py": [
      "tensorflow_core.python.util.is_in_graph_mode.IS_IN_GRAPH_MODE"
    ],
    "tensorflow_core/python/util/keyword_args.py": [
      "tensorflow_core.python.util.keyword_args.keyword_args_only"
    ],
    "tensorflow_core/python/util/lazy_loader.py": [
      "tensorflow_core.python.util.lazy_loader.LazyLoader"
    ],
    "tensorflow_core/python/util/lock_util.py": [
      "tensorflow_core.python.util.lock_util.GroupLock"
    ],
    "tensorflow_core/python/util/memory.py": [
      "tensorflow_core.python.util.memory.dismantle_ordered_dict"
    ],
    "tensorflow_core/python/util/module_wrapper.py": [
      "tensorflow_core.python.util.module_wrapper.TFModuleWrapper",
      "tensorflow_core.python.util.module_wrapper.contains_deprecation_decorator",
      "tensorflow_core.python.util.module_wrapper.get_rename_v2",
      "tensorflow_core.python.util.module_wrapper.has_deprecation_decorator"
    ],
    "tensorflow_core/python/util/nest.py": [
      "tensorflow_core.python.util.nest.assert_same_structure",
      "tensorflow_core.python.util.nest.assert_shallow_structure",
      "tensorflow_core.python.util.nest.flatten",
      "tensorflow_core.python.util.nest.flatten_dict_items",
      "tensorflow_core.python.util.nest.flatten_up_to",
      "tensorflow_core.python.util.nest.flatten_with_joined_string_paths",
      "tensorflow_core.python.util.nest.flatten_with_tuple_paths",
      "tensorflow_core.python.util.nest.flatten_with_tuple_paths_up_to",
      "tensorflow_core.python.util.nest.get_traverse_shallow_structure",
      "tensorflow_core.python.util.nest.is_nested",
      "tensorflow_core.python.util.nest.is_sequence",
      "tensorflow_core.python.util.nest.is_sequence_or_composite",
      "tensorflow_core.python.util.nest.map_structure",
      "tensorflow_core.python.util.nest.map_structure_up_to",
      "tensorflow_core.python.util.nest.map_structure_with_paths",
      "tensorflow_core.python.util.nest.map_structure_with_tuple_paths",
      "tensorflow_core.python.util.nest.map_structure_with_tuple_paths_up_to",
      "tensorflow_core.python.util.nest.pack_sequence_as",
      "tensorflow_core.python.util.nest.yield_flat_paths"
    ],
    "tensorflow_core/python/util/object_identity.py": [
      "tensorflow_core.python.util.object_identity.ObjectIdentityDictionary",
      "tensorflow_core.python.util.object_identity.ObjectIdentitySet",
      "tensorflow_core.python.util.object_identity.ObjectIdentityWeakKeyDictionary",
      "tensorflow_core.python.util.object_identity.ObjectIdentityWeakSet",
      "tensorflow_core.python.util.object_identity.Reference"
    ],
    "tensorflow_core/python/util/protobuf/__init__.py": [],
    "tensorflow_core/python/util/protobuf/compare.py": [
      "tensorflow_core.python.util.protobuf.compare.NormalizeNumberFields",
      "tensorflow_core.python.util.protobuf.compare.ProtoAssertions",
      "tensorflow_core.python.util.protobuf.compare.ProtoEq",
      "tensorflow_core.python.util.protobuf.compare.assertProtoEqual"
    ],
    "tensorflow_core/python/util/serialization.py": [
      "tensorflow_core.python.util.serialization.get_json_type"
    ],
    "tensorflow_core/python/util/tf_contextlib.py": [
      "tensorflow_core.python.util.tf_contextlib.contextmanager"
    ],
    "tensorflow_core/python/util/tf_decorator.py": [
      "tensorflow_core.python.util.tf_decorator.TFDecorator",
      "tensorflow_core.python.util.tf_decorator.make_decorator",
      "tensorflow_core.python.util.tf_decorator.rewrap",
      "tensorflow_core.python.util.tf_decorator.unwrap"
    ],
    "tensorflow_core/python/util/tf_export.py": [
      "tensorflow_core.python.util.tf_export.API_ATTRS",
      "tensorflow_core.python.util.tf_export.API_ATTRS_V1",
      "tensorflow_core.python.util.tf_export.ESTIMATOR_API_NAME",
      "tensorflow_core.python.util.tf_export.InvalidSymbolNameError",
      "tensorflow_core.python.util.tf_export.KERAS_API_NAME",
      "tensorflow_core.python.util.tf_export.SUBPACKAGE_NAMESPACES",
      "tensorflow_core.python.util.tf_export.SymbolAlreadyExposedError",
      "tensorflow_core.python.util.tf_export.TENSORFLOW_API_NAME",
      "tensorflow_core.python.util.tf_export.api_export",
      "tensorflow_core.python.util.tf_export.estimator_export",
      "tensorflow_core.python.util.tf_export.get_canonical_name",
      "tensorflow_core.python.util.tf_export.get_canonical_name_for_symbol",
      "tensorflow_core.python.util.tf_export.get_v1_constants",
      "tensorflow_core.python.util.tf_export.get_v1_names",
      "tensorflow_core.python.util.tf_export.get_v2_constants",
      "tensorflow_core.python.util.tf_export.get_v2_names",
      "tensorflow_core.python.util.tf_export.keras_export",
      "tensorflow_core.python.util.tf_export.kwarg_only",
      "tensorflow_core.python.util.tf_export.tf_export"
    ],
    "tensorflow_core/python/util/tf_inspect.py": [
      "tensorflow_core.python.util.tf_inspect.ArgSpec",
      "tensorflow_core.python.util.tf_inspect.currentframe",
      "tensorflow_core.python.util.tf_inspect.getargspec",
      "tensorflow_core.python.util.tf_inspect.getcallargs",
      "tensorflow_core.python.util.tf_inspect.getdoc",
      "tensorflow_core.python.util.tf_inspect.getfile",
      "tensorflow_core.python.util.tf_inspect.getframeinfo",
      "tensorflow_core.python.util.tf_inspect.getfullargspec",
      "tensorflow_core.python.util.tf_inspect.getmembers",
      "tensorflow_core.python.util.tf_inspect.getmodule",
      "tensorflow_core.python.util.tf_inspect.getmro",
      "tensorflow_core.python.util.tf_inspect.getsource",
      "tensorflow_core.python.util.tf_inspect.getsourcefile",
      "tensorflow_core.python.util.tf_inspect.getsourcelines",
      "tensorflow_core.python.util.tf_inspect.isbuiltin",
      "tensorflow_core.python.util.tf_inspect.isclass",
      "tensorflow_core.python.util.tf_inspect.isframe",
      "tensorflow_core.python.util.tf_inspect.isfunction",
      "tensorflow_core.python.util.tf_inspect.isgenerator",
      "tensorflow_core.python.util.tf_inspect.isgeneratorfunction",
      "tensorflow_core.python.util.tf_inspect.ismethod",
      "tensorflow_core.python.util.tf_inspect.ismodule",
      "tensorflow_core.python.util.tf_inspect.isroutine",
      "tensorflow_core.python.util.tf_inspect.stack"
    ],
    "tensorflow_core/python/util/tf_should_use.py": [
      "tensorflow_core.python.util.tf_should_use.must_use_result_or_fatal",
      "tensorflow_core.python.util.tf_should_use.should_use_result"
    ],
    "tensorflow_core/python/util/tf_stack.py": [
      "tensorflow_core.python.util.tf_stack.CurrentModuleFilter",
      "tensorflow_core.python.util.tf_stack.StackFrame",
      "tensorflow_core.python.util.tf_stack.StackTraceFilter",
      "tensorflow_core.python.util.tf_stack.StackTraceMapper",
      "tensorflow_core.python.util.tf_stack.StackTraceTransform",
      "tensorflow_core.python.util.tf_stack.TB_CODEDICT",
      "tensorflow_core.python.util.tf_stack.TB_FILENAME",
      "tensorflow_core.python.util.tf_stack.TB_FUNCNAME",
      "tensorflow_core.python.util.tf_stack.TB_LINENO",
      "tensorflow_core.python.util.tf_stack.convert_stack",
      "tensorflow_core.python.util.tf_stack.extract_stack"
    ],
    "tensorflow_core/tools/__init__.py": [],
    "tensorflow_core/tools/common/__init__.py": [],
    "tensorflow_core/tools/common/public_api.py": [
      "tensorflow_core.tools.common.public_api.PublicAPIVisitor"
    ],
    "tensorflow_core/tools/common/test_module1.py": [
      "tensorflow_core.tools.common.test_module1.ModuleClass1"
    ],
    "tensorflow_core/tools/common/test_module2.py": [
      "tensorflow_core.tools.common.test_module2.ModuleClass2"
    ],
    "tensorflow_core/tools/common/traverse.py": [
      "tensorflow_core.tools.common.traverse.traverse"
    ],
    "tensorflow_core/tools/compatibility/__init__.py": [],
    "tensorflow_core/tools/compatibility/all_renames_v2.py": [
      "tensorflow_core.tools.compatibility.all_renames_v2.addons_symbol_mappings",
      "tensorflow_core.tools.compatibility.all_renames_v2.manual_symbol_renames",
      "tensorflow_core.tools.compatibility.all_renames_v2.symbol_renames"
    ],
    "tensorflow_core/tools/compatibility/ast_edits.py": [
      "tensorflow_core.tools.compatibility.ast_edits.APIAnalysisSpec",
      "tensorflow_core.tools.compatibility.ast_edits.APIChangeSpec",
      "tensorflow_core.tools.compatibility.ast_edits.ASTCodeUpgrader",
      "tensorflow_core.tools.compatibility.ast_edits.AnalysisResult",
      "tensorflow_core.tools.compatibility.ast_edits.ERROR",
      "tensorflow_core.tools.compatibility.ast_edits.FIND_OPEN",
      "tensorflow_core.tools.compatibility.ast_edits.FIND_STRING_CHARS",
      "tensorflow_core.tools.compatibility.ast_edits.INFO",
      "tensorflow_core.tools.compatibility.ast_edits.ImportRename",
      "tensorflow_core.tools.compatibility.ast_edits.NoUpdateSpec",
      "tensorflow_core.tools.compatibility.ast_edits.PastaAnalyzeVisitor",
      "tensorflow_core.tools.compatibility.ast_edits.WARNING",
      "tensorflow_core.tools.compatibility.ast_edits.excluded_from_module_rename",
      "tensorflow_core.tools.compatibility.ast_edits.full_name_node",
      "tensorflow_core.tools.compatibility.ast_edits.get_arg_value",
      "tensorflow_core.tools.compatibility.ast_edits.uses_star_args_in_call",
      "tensorflow_core.tools.compatibility.ast_edits.uses_star_args_or_kwargs_in_call",
      "tensorflow_core.tools.compatibility.ast_edits.uses_star_kwargs_in_call"
    ],
    "tensorflow_core/tools/compatibility/ipynb.py": [
      "tensorflow_core.tools.compatibility.ipynb.CodeLine",
      "tensorflow_core.tools.compatibility.ipynb.check_line_split",
      "tensorflow_core.tools.compatibility.ipynb.is_python",
      "tensorflow_core.tools.compatibility.ipynb.process_file",
      "tensorflow_core.tools.compatibility.ipynb.skip_magic"
    ],
    "tensorflow_core/tools/compatibility/module_deprecations_v2.py": [
      "tensorflow_core.tools.compatibility.module_deprecations_v2.MODULE_DEPRECATIONS"
    ],
    "tensorflow_core/tools/compatibility/renames_v2.py": [
      "tensorflow_core.tools.compatibility.renames_v2.renames"
    ],
    "tensorflow_core/tools/compatibility/reorders_v2.py": [
      "tensorflow_core.tools.compatibility.reorders_v2.reorders"
    ],
    "tensorflow_core/tools/compatibility/tf_upgrade_v2.py": [
      "tensorflow_core.tools.compatibility.tf_upgrade_v2.TFAPIChangeSpec",
      "tensorflow_core.tools.compatibility.tf_upgrade_v2.TFAPIImportAnalysisSpec",
      "tensorflow_core.tools.compatibility.tf_upgrade_v2.UnaliasedTFImport",
      "tensorflow_core.tools.compatibility.tf_upgrade_v2.VersionedTFImport"
    ],
    "tensorflow_core/tools/compatibility/tf_upgrade_v2_main.py": [
      "tensorflow_core.tools.compatibility.tf_upgrade_v2_main.main",
      "tensorflow_core.tools.compatibility.tf_upgrade_v2_main.process_file"
    ],
    "tensorflow_core/tools/compatibility/tf_upgrade_v2_safety.py": [
      "tensorflow_core.tools.compatibility.tf_upgrade_v2_safety.TFAPIChangeSpec"
    ],
    "tensorflow_core/tools/docs/__init__.py": [],
    "tensorflow_core/tools/docs/doc_controls.py": [
      "tensorflow_core.tools.docs.doc_controls.do_not_doc_in_subclasses",
      "tensorflow_core.tools.docs.doc_controls.do_not_doc_inheritable",
      "tensorflow_core.tools.docs.doc_controls.do_not_generate_docs",
      "tensorflow_core.tools.docs.doc_controls.for_subclass_implementers",
      "tensorflow_core.tools.docs.doc_controls.should_skip",
      "tensorflow_core.tools.docs.doc_controls.should_skip_class_attr"
    ],
    "tensorflow_core/tools/docs/doc_generator_visitor.py": [
      "tensorflow_core.tools.docs.doc_generator_visitor.DocGeneratorVisitor"
    ],
    "tensorflow_core/tools/docs/generate_lib.py": [
      "tensorflow_core.tools.docs.generate_lib.DocControlsAwareCrawler",
      "tensorflow_core.tools.docs.generate_lib.DocGenerator",
      "tensorflow_core.tools.docs.generate_lib.EXCLUDED",
      "tensorflow_core.tools.docs.generate_lib.add_dict_to_dict",
      "tensorflow_core.tools.docs.generate_lib.build_doc_index",
      "tensorflow_core.tools.docs.generate_lib.extract",
      "tensorflow_core.tools.docs.generate_lib.replace_refs",
      "tensorflow_core.tools.docs.generate_lib.update_id_tags_inplace",
      "tensorflow_core.tools.docs.generate_lib.write_docs"
    ],
    "tensorflow_core/tools/docs/parser.py": [
      "tensorflow_core.tools.docs.parser.AUTO_REFERENCE_RE",
      "tensorflow_core.tools.docs.parser.IDENTIFIER_RE",
      "tensorflow_core.tools.docs.parser.PAREN_NUMBER_RE",
      "tensorflow_core.tools.docs.parser.ParserConfig",
      "tensorflow_core.tools.docs.parser.ReferenceResolver",
      "tensorflow_core.tools.docs.parser.SYMBOL_REFERENCE_RE",
      "tensorflow_core.tools.docs.parser.TFDocsError",
      "tensorflow_core.tools.docs.parser.docs_for_object",
      "tensorflow_core.tools.docs.parser.documentation_path",
      "tensorflow_core.tools.docs.parser.generate_global_index",
      "tensorflow_core.tools.docs.parser.is_free_function"
    ],
    "tensorflow_core/tools/docs/pretty_docs.py": [
      "tensorflow_core.tools.docs.pretty_docs.build_md_page"
    ],
    "tensorflow_core/tools/docs/py_guide_parser.py": [
      "tensorflow_core.tools.docs.py_guide_parser.PyGuideParser",
      "tensorflow_core.tools.docs.py_guide_parser.md_files_in_dir"
    ],
    "tensorflow_core/tools/graph_transforms/__init__.py": [
      "tensorflow_core.tools.graph_transforms.__init__.TransformGraph"
    ],
    "tensorflow_core/tools/pip_package/__init__.py": [],
    "tensorflow_core/tools/pip_package/setup.py": [
      "tensorflow_core.tools.pip_package.setup.BinaryDistribution",
      "tensorflow_core.tools.pip_package.setup.CONSOLE_SCRIPTS",
      "tensorflow_core.tools.pip_package.setup.DOCLINES",
      "tensorflow_core.tools.pip_package.setup.InstallCommand",
      "tensorflow_core.tools.pip_package.setup.InstallHeaders",
      "tensorflow_core.tools.pip_package.setup.REQUIRED_PACKAGES",
      "tensorflow_core.tools.pip_package.setup.TEST_PACKAGES",
      "tensorflow_core.tools.pip_package.setup.find_files",
      "tensorflow_core.tools.pip_package.setup.headers",
      "tensorflow_core.tools.pip_package.setup.matches",
      "tensorflow_core.tools.pip_package.setup.project_name",
      "tensorflow_core.tools.pip_package.setup.so_lib_paths"
    ],
    "tensorflow_core/tools/pip_package/simple_console.py": [
      "tensorflow_core.tools.pip_package.simple_console.main"
    ]
  },
  "version": "0.0.7"
}